// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dft_dft,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=5769256,HLS_SYN_TPT=none,HLS_SYN_MEM=28,HLS_SYN_DSP=0,HLS_SYN_FF=4183,HLS_SYN_LUT=5402,HLS_VERSION=2021_1}" *)

module dft (
        ap_clk,
        ap_rst_n,
        m_axi_input_re_r_AWVALID,
        m_axi_input_re_r_AWREADY,
        m_axi_input_re_r_AWADDR,
        m_axi_input_re_r_AWID,
        m_axi_input_re_r_AWLEN,
        m_axi_input_re_r_AWSIZE,
        m_axi_input_re_r_AWBURST,
        m_axi_input_re_r_AWLOCK,
        m_axi_input_re_r_AWCACHE,
        m_axi_input_re_r_AWPROT,
        m_axi_input_re_r_AWQOS,
        m_axi_input_re_r_AWREGION,
        m_axi_input_re_r_AWUSER,
        m_axi_input_re_r_WVALID,
        m_axi_input_re_r_WREADY,
        m_axi_input_re_r_WDATA,
        m_axi_input_re_r_WSTRB,
        m_axi_input_re_r_WLAST,
        m_axi_input_re_r_WID,
        m_axi_input_re_r_WUSER,
        m_axi_input_re_r_ARVALID,
        m_axi_input_re_r_ARREADY,
        m_axi_input_re_r_ARADDR,
        m_axi_input_re_r_ARID,
        m_axi_input_re_r_ARLEN,
        m_axi_input_re_r_ARSIZE,
        m_axi_input_re_r_ARBURST,
        m_axi_input_re_r_ARLOCK,
        m_axi_input_re_r_ARCACHE,
        m_axi_input_re_r_ARPROT,
        m_axi_input_re_r_ARQOS,
        m_axi_input_re_r_ARREGION,
        m_axi_input_re_r_ARUSER,
        m_axi_input_re_r_RVALID,
        m_axi_input_re_r_RREADY,
        m_axi_input_re_r_RDATA,
        m_axi_input_re_r_RLAST,
        m_axi_input_re_r_RID,
        m_axi_input_re_r_RUSER,
        m_axi_input_re_r_RRESP,
        m_axi_input_re_r_BVALID,
        m_axi_input_re_r_BREADY,
        m_axi_input_re_r_BRESP,
        m_axi_input_re_r_BID,
        m_axi_input_re_r_BUSER,
        m_axi_input_im_r_AWVALID,
        m_axi_input_im_r_AWREADY,
        m_axi_input_im_r_AWADDR,
        m_axi_input_im_r_AWID,
        m_axi_input_im_r_AWLEN,
        m_axi_input_im_r_AWSIZE,
        m_axi_input_im_r_AWBURST,
        m_axi_input_im_r_AWLOCK,
        m_axi_input_im_r_AWCACHE,
        m_axi_input_im_r_AWPROT,
        m_axi_input_im_r_AWQOS,
        m_axi_input_im_r_AWREGION,
        m_axi_input_im_r_AWUSER,
        m_axi_input_im_r_WVALID,
        m_axi_input_im_r_WREADY,
        m_axi_input_im_r_WDATA,
        m_axi_input_im_r_WSTRB,
        m_axi_input_im_r_WLAST,
        m_axi_input_im_r_WID,
        m_axi_input_im_r_WUSER,
        m_axi_input_im_r_ARVALID,
        m_axi_input_im_r_ARREADY,
        m_axi_input_im_r_ARADDR,
        m_axi_input_im_r_ARID,
        m_axi_input_im_r_ARLEN,
        m_axi_input_im_r_ARSIZE,
        m_axi_input_im_r_ARBURST,
        m_axi_input_im_r_ARLOCK,
        m_axi_input_im_r_ARCACHE,
        m_axi_input_im_r_ARPROT,
        m_axi_input_im_r_ARQOS,
        m_axi_input_im_r_ARREGION,
        m_axi_input_im_r_ARUSER,
        m_axi_input_im_r_RVALID,
        m_axi_input_im_r_RREADY,
        m_axi_input_im_r_RDATA,
        m_axi_input_im_r_RLAST,
        m_axi_input_im_r_RID,
        m_axi_input_im_r_RUSER,
        m_axi_input_im_r_RRESP,
        m_axi_input_im_r_BVALID,
        m_axi_input_im_r_BREADY,
        m_axi_input_im_r_BRESP,
        m_axi_input_im_r_BID,
        m_axi_input_im_r_BUSER,
        m_axi_output_re_r_AWVALID,
        m_axi_output_re_r_AWREADY,
        m_axi_output_re_r_AWADDR,
        m_axi_output_re_r_AWID,
        m_axi_output_re_r_AWLEN,
        m_axi_output_re_r_AWSIZE,
        m_axi_output_re_r_AWBURST,
        m_axi_output_re_r_AWLOCK,
        m_axi_output_re_r_AWCACHE,
        m_axi_output_re_r_AWPROT,
        m_axi_output_re_r_AWQOS,
        m_axi_output_re_r_AWREGION,
        m_axi_output_re_r_AWUSER,
        m_axi_output_re_r_WVALID,
        m_axi_output_re_r_WREADY,
        m_axi_output_re_r_WDATA,
        m_axi_output_re_r_WSTRB,
        m_axi_output_re_r_WLAST,
        m_axi_output_re_r_WID,
        m_axi_output_re_r_WUSER,
        m_axi_output_re_r_ARVALID,
        m_axi_output_re_r_ARREADY,
        m_axi_output_re_r_ARADDR,
        m_axi_output_re_r_ARID,
        m_axi_output_re_r_ARLEN,
        m_axi_output_re_r_ARSIZE,
        m_axi_output_re_r_ARBURST,
        m_axi_output_re_r_ARLOCK,
        m_axi_output_re_r_ARCACHE,
        m_axi_output_re_r_ARPROT,
        m_axi_output_re_r_ARQOS,
        m_axi_output_re_r_ARREGION,
        m_axi_output_re_r_ARUSER,
        m_axi_output_re_r_RVALID,
        m_axi_output_re_r_RREADY,
        m_axi_output_re_r_RDATA,
        m_axi_output_re_r_RLAST,
        m_axi_output_re_r_RID,
        m_axi_output_re_r_RUSER,
        m_axi_output_re_r_RRESP,
        m_axi_output_re_r_BVALID,
        m_axi_output_re_r_BREADY,
        m_axi_output_re_r_BRESP,
        m_axi_output_re_r_BID,
        m_axi_output_re_r_BUSER,
        m_axi_output_im_r_AWVALID,
        m_axi_output_im_r_AWREADY,
        m_axi_output_im_r_AWADDR,
        m_axi_output_im_r_AWID,
        m_axi_output_im_r_AWLEN,
        m_axi_output_im_r_AWSIZE,
        m_axi_output_im_r_AWBURST,
        m_axi_output_im_r_AWLOCK,
        m_axi_output_im_r_AWCACHE,
        m_axi_output_im_r_AWPROT,
        m_axi_output_im_r_AWQOS,
        m_axi_output_im_r_AWREGION,
        m_axi_output_im_r_AWUSER,
        m_axi_output_im_r_WVALID,
        m_axi_output_im_r_WREADY,
        m_axi_output_im_r_WDATA,
        m_axi_output_im_r_WSTRB,
        m_axi_output_im_r_WLAST,
        m_axi_output_im_r_WID,
        m_axi_output_im_r_WUSER,
        m_axi_output_im_r_ARVALID,
        m_axi_output_im_r_ARREADY,
        m_axi_output_im_r_ARADDR,
        m_axi_output_im_r_ARID,
        m_axi_output_im_r_ARLEN,
        m_axi_output_im_r_ARSIZE,
        m_axi_output_im_r_ARBURST,
        m_axi_output_im_r_ARLOCK,
        m_axi_output_im_r_ARCACHE,
        m_axi_output_im_r_ARPROT,
        m_axi_output_im_r_ARQOS,
        m_axi_output_im_r_ARREGION,
        m_axi_output_im_r_ARUSER,
        m_axi_output_im_r_RVALID,
        m_axi_output_im_r_RREADY,
        m_axi_output_im_r_RDATA,
        m_axi_output_im_r_RLAST,
        m_axi_output_im_r_RID,
        m_axi_output_im_r_RUSER,
        m_axi_output_im_r_RRESP,
        m_axi_output_im_r_BVALID,
        m_axi_output_im_r_BREADY,
        m_axi_output_im_r_BRESP,
        m_axi_output_im_r_BID,
        m_axi_output_im_r_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_RE_R_ID_WIDTH = 1;
parameter    C_M_AXI_INPUT_RE_R_ADDR_WIDTH = 64;
parameter    C_M_AXI_INPUT_RE_R_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_RE_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_RE_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_RE_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_RE_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_RE_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_RE_R_USER_VALUE = 0;
parameter    C_M_AXI_INPUT_RE_R_PROT_VALUE = 0;
parameter    C_M_AXI_INPUT_RE_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_IM_R_ID_WIDTH = 1;
parameter    C_M_AXI_INPUT_IM_R_ADDR_WIDTH = 64;
parameter    C_M_AXI_INPUT_IM_R_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_IM_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_IM_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_IM_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_IM_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_IM_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_IM_R_USER_VALUE = 0;
parameter    C_M_AXI_INPUT_IM_R_PROT_VALUE = 0;
parameter    C_M_AXI_INPUT_IM_R_CACHE_VALUE = 3;
parameter    C_M_AXI_OUTPUT_RE_R_ID_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_RE_R_ADDR_WIDTH = 64;
parameter    C_M_AXI_OUTPUT_RE_R_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_RE_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_RE_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_RE_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_RE_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_RE_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_RE_R_USER_VALUE = 0;
parameter    C_M_AXI_OUTPUT_RE_R_PROT_VALUE = 0;
parameter    C_M_AXI_OUTPUT_RE_R_CACHE_VALUE = 3;
parameter    C_M_AXI_OUTPUT_IM_R_ID_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_IM_R_ADDR_WIDTH = 64;
parameter    C_M_AXI_OUTPUT_IM_R_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_IM_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_IM_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_IM_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_IM_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_IM_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_IM_R_USER_VALUE = 0;
parameter    C_M_AXI_OUTPUT_IM_R_PROT_VALUE = 0;
parameter    C_M_AXI_OUTPUT_IM_R_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_INPUT_RE_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_INPUT_IM_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUTPUT_RE_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUTPUT_IM_R_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_input_re_r_AWVALID;
input   m_axi_input_re_r_AWREADY;
output  [C_M_AXI_INPUT_RE_R_ADDR_WIDTH - 1:0] m_axi_input_re_r_AWADDR;
output  [C_M_AXI_INPUT_RE_R_ID_WIDTH - 1:0] m_axi_input_re_r_AWID;
output  [7:0] m_axi_input_re_r_AWLEN;
output  [2:0] m_axi_input_re_r_AWSIZE;
output  [1:0] m_axi_input_re_r_AWBURST;
output  [1:0] m_axi_input_re_r_AWLOCK;
output  [3:0] m_axi_input_re_r_AWCACHE;
output  [2:0] m_axi_input_re_r_AWPROT;
output  [3:0] m_axi_input_re_r_AWQOS;
output  [3:0] m_axi_input_re_r_AWREGION;
output  [C_M_AXI_INPUT_RE_R_AWUSER_WIDTH - 1:0] m_axi_input_re_r_AWUSER;
output   m_axi_input_re_r_WVALID;
input   m_axi_input_re_r_WREADY;
output  [C_M_AXI_INPUT_RE_R_DATA_WIDTH - 1:0] m_axi_input_re_r_WDATA;
output  [C_M_AXI_INPUT_RE_R_WSTRB_WIDTH - 1:0] m_axi_input_re_r_WSTRB;
output   m_axi_input_re_r_WLAST;
output  [C_M_AXI_INPUT_RE_R_ID_WIDTH - 1:0] m_axi_input_re_r_WID;
output  [C_M_AXI_INPUT_RE_R_WUSER_WIDTH - 1:0] m_axi_input_re_r_WUSER;
output   m_axi_input_re_r_ARVALID;
input   m_axi_input_re_r_ARREADY;
output  [C_M_AXI_INPUT_RE_R_ADDR_WIDTH - 1:0] m_axi_input_re_r_ARADDR;
output  [C_M_AXI_INPUT_RE_R_ID_WIDTH - 1:0] m_axi_input_re_r_ARID;
output  [7:0] m_axi_input_re_r_ARLEN;
output  [2:0] m_axi_input_re_r_ARSIZE;
output  [1:0] m_axi_input_re_r_ARBURST;
output  [1:0] m_axi_input_re_r_ARLOCK;
output  [3:0] m_axi_input_re_r_ARCACHE;
output  [2:0] m_axi_input_re_r_ARPROT;
output  [3:0] m_axi_input_re_r_ARQOS;
output  [3:0] m_axi_input_re_r_ARREGION;
output  [C_M_AXI_INPUT_RE_R_ARUSER_WIDTH - 1:0] m_axi_input_re_r_ARUSER;
input   m_axi_input_re_r_RVALID;
output   m_axi_input_re_r_RREADY;
input  [C_M_AXI_INPUT_RE_R_DATA_WIDTH - 1:0] m_axi_input_re_r_RDATA;
input   m_axi_input_re_r_RLAST;
input  [C_M_AXI_INPUT_RE_R_ID_WIDTH - 1:0] m_axi_input_re_r_RID;
input  [C_M_AXI_INPUT_RE_R_RUSER_WIDTH - 1:0] m_axi_input_re_r_RUSER;
input  [1:0] m_axi_input_re_r_RRESP;
input   m_axi_input_re_r_BVALID;
output   m_axi_input_re_r_BREADY;
input  [1:0] m_axi_input_re_r_BRESP;
input  [C_M_AXI_INPUT_RE_R_ID_WIDTH - 1:0] m_axi_input_re_r_BID;
input  [C_M_AXI_INPUT_RE_R_BUSER_WIDTH - 1:0] m_axi_input_re_r_BUSER;
output   m_axi_input_im_r_AWVALID;
input   m_axi_input_im_r_AWREADY;
output  [C_M_AXI_INPUT_IM_R_ADDR_WIDTH - 1:0] m_axi_input_im_r_AWADDR;
output  [C_M_AXI_INPUT_IM_R_ID_WIDTH - 1:0] m_axi_input_im_r_AWID;
output  [7:0] m_axi_input_im_r_AWLEN;
output  [2:0] m_axi_input_im_r_AWSIZE;
output  [1:0] m_axi_input_im_r_AWBURST;
output  [1:0] m_axi_input_im_r_AWLOCK;
output  [3:0] m_axi_input_im_r_AWCACHE;
output  [2:0] m_axi_input_im_r_AWPROT;
output  [3:0] m_axi_input_im_r_AWQOS;
output  [3:0] m_axi_input_im_r_AWREGION;
output  [C_M_AXI_INPUT_IM_R_AWUSER_WIDTH - 1:0] m_axi_input_im_r_AWUSER;
output   m_axi_input_im_r_WVALID;
input   m_axi_input_im_r_WREADY;
output  [C_M_AXI_INPUT_IM_R_DATA_WIDTH - 1:0] m_axi_input_im_r_WDATA;
output  [C_M_AXI_INPUT_IM_R_WSTRB_WIDTH - 1:0] m_axi_input_im_r_WSTRB;
output   m_axi_input_im_r_WLAST;
output  [C_M_AXI_INPUT_IM_R_ID_WIDTH - 1:0] m_axi_input_im_r_WID;
output  [C_M_AXI_INPUT_IM_R_WUSER_WIDTH - 1:0] m_axi_input_im_r_WUSER;
output   m_axi_input_im_r_ARVALID;
input   m_axi_input_im_r_ARREADY;
output  [C_M_AXI_INPUT_IM_R_ADDR_WIDTH - 1:0] m_axi_input_im_r_ARADDR;
output  [C_M_AXI_INPUT_IM_R_ID_WIDTH - 1:0] m_axi_input_im_r_ARID;
output  [7:0] m_axi_input_im_r_ARLEN;
output  [2:0] m_axi_input_im_r_ARSIZE;
output  [1:0] m_axi_input_im_r_ARBURST;
output  [1:0] m_axi_input_im_r_ARLOCK;
output  [3:0] m_axi_input_im_r_ARCACHE;
output  [2:0] m_axi_input_im_r_ARPROT;
output  [3:0] m_axi_input_im_r_ARQOS;
output  [3:0] m_axi_input_im_r_ARREGION;
output  [C_M_AXI_INPUT_IM_R_ARUSER_WIDTH - 1:0] m_axi_input_im_r_ARUSER;
input   m_axi_input_im_r_RVALID;
output   m_axi_input_im_r_RREADY;
input  [C_M_AXI_INPUT_IM_R_DATA_WIDTH - 1:0] m_axi_input_im_r_RDATA;
input   m_axi_input_im_r_RLAST;
input  [C_M_AXI_INPUT_IM_R_ID_WIDTH - 1:0] m_axi_input_im_r_RID;
input  [C_M_AXI_INPUT_IM_R_RUSER_WIDTH - 1:0] m_axi_input_im_r_RUSER;
input  [1:0] m_axi_input_im_r_RRESP;
input   m_axi_input_im_r_BVALID;
output   m_axi_input_im_r_BREADY;
input  [1:0] m_axi_input_im_r_BRESP;
input  [C_M_AXI_INPUT_IM_R_ID_WIDTH - 1:0] m_axi_input_im_r_BID;
input  [C_M_AXI_INPUT_IM_R_BUSER_WIDTH - 1:0] m_axi_input_im_r_BUSER;
output   m_axi_output_re_r_AWVALID;
input   m_axi_output_re_r_AWREADY;
output  [C_M_AXI_OUTPUT_RE_R_ADDR_WIDTH - 1:0] m_axi_output_re_r_AWADDR;
output  [C_M_AXI_OUTPUT_RE_R_ID_WIDTH - 1:0] m_axi_output_re_r_AWID;
output  [7:0] m_axi_output_re_r_AWLEN;
output  [2:0] m_axi_output_re_r_AWSIZE;
output  [1:0] m_axi_output_re_r_AWBURST;
output  [1:0] m_axi_output_re_r_AWLOCK;
output  [3:0] m_axi_output_re_r_AWCACHE;
output  [2:0] m_axi_output_re_r_AWPROT;
output  [3:0] m_axi_output_re_r_AWQOS;
output  [3:0] m_axi_output_re_r_AWREGION;
output  [C_M_AXI_OUTPUT_RE_R_AWUSER_WIDTH - 1:0] m_axi_output_re_r_AWUSER;
output   m_axi_output_re_r_WVALID;
input   m_axi_output_re_r_WREADY;
output  [C_M_AXI_OUTPUT_RE_R_DATA_WIDTH - 1:0] m_axi_output_re_r_WDATA;
output  [C_M_AXI_OUTPUT_RE_R_WSTRB_WIDTH - 1:0] m_axi_output_re_r_WSTRB;
output   m_axi_output_re_r_WLAST;
output  [C_M_AXI_OUTPUT_RE_R_ID_WIDTH - 1:0] m_axi_output_re_r_WID;
output  [C_M_AXI_OUTPUT_RE_R_WUSER_WIDTH - 1:0] m_axi_output_re_r_WUSER;
output   m_axi_output_re_r_ARVALID;
input   m_axi_output_re_r_ARREADY;
output  [C_M_AXI_OUTPUT_RE_R_ADDR_WIDTH - 1:0] m_axi_output_re_r_ARADDR;
output  [C_M_AXI_OUTPUT_RE_R_ID_WIDTH - 1:0] m_axi_output_re_r_ARID;
output  [7:0] m_axi_output_re_r_ARLEN;
output  [2:0] m_axi_output_re_r_ARSIZE;
output  [1:0] m_axi_output_re_r_ARBURST;
output  [1:0] m_axi_output_re_r_ARLOCK;
output  [3:0] m_axi_output_re_r_ARCACHE;
output  [2:0] m_axi_output_re_r_ARPROT;
output  [3:0] m_axi_output_re_r_ARQOS;
output  [3:0] m_axi_output_re_r_ARREGION;
output  [C_M_AXI_OUTPUT_RE_R_ARUSER_WIDTH - 1:0] m_axi_output_re_r_ARUSER;
input   m_axi_output_re_r_RVALID;
output   m_axi_output_re_r_RREADY;
input  [C_M_AXI_OUTPUT_RE_R_DATA_WIDTH - 1:0] m_axi_output_re_r_RDATA;
input   m_axi_output_re_r_RLAST;
input  [C_M_AXI_OUTPUT_RE_R_ID_WIDTH - 1:0] m_axi_output_re_r_RID;
input  [C_M_AXI_OUTPUT_RE_R_RUSER_WIDTH - 1:0] m_axi_output_re_r_RUSER;
input  [1:0] m_axi_output_re_r_RRESP;
input   m_axi_output_re_r_BVALID;
output   m_axi_output_re_r_BREADY;
input  [1:0] m_axi_output_re_r_BRESP;
input  [C_M_AXI_OUTPUT_RE_R_ID_WIDTH - 1:0] m_axi_output_re_r_BID;
input  [C_M_AXI_OUTPUT_RE_R_BUSER_WIDTH - 1:0] m_axi_output_re_r_BUSER;
output   m_axi_output_im_r_AWVALID;
input   m_axi_output_im_r_AWREADY;
output  [C_M_AXI_OUTPUT_IM_R_ADDR_WIDTH - 1:0] m_axi_output_im_r_AWADDR;
output  [C_M_AXI_OUTPUT_IM_R_ID_WIDTH - 1:0] m_axi_output_im_r_AWID;
output  [7:0] m_axi_output_im_r_AWLEN;
output  [2:0] m_axi_output_im_r_AWSIZE;
output  [1:0] m_axi_output_im_r_AWBURST;
output  [1:0] m_axi_output_im_r_AWLOCK;
output  [3:0] m_axi_output_im_r_AWCACHE;
output  [2:0] m_axi_output_im_r_AWPROT;
output  [3:0] m_axi_output_im_r_AWQOS;
output  [3:0] m_axi_output_im_r_AWREGION;
output  [C_M_AXI_OUTPUT_IM_R_AWUSER_WIDTH - 1:0] m_axi_output_im_r_AWUSER;
output   m_axi_output_im_r_WVALID;
input   m_axi_output_im_r_WREADY;
output  [C_M_AXI_OUTPUT_IM_R_DATA_WIDTH - 1:0] m_axi_output_im_r_WDATA;
output  [C_M_AXI_OUTPUT_IM_R_WSTRB_WIDTH - 1:0] m_axi_output_im_r_WSTRB;
output   m_axi_output_im_r_WLAST;
output  [C_M_AXI_OUTPUT_IM_R_ID_WIDTH - 1:0] m_axi_output_im_r_WID;
output  [C_M_AXI_OUTPUT_IM_R_WUSER_WIDTH - 1:0] m_axi_output_im_r_WUSER;
output   m_axi_output_im_r_ARVALID;
input   m_axi_output_im_r_ARREADY;
output  [C_M_AXI_OUTPUT_IM_R_ADDR_WIDTH - 1:0] m_axi_output_im_r_ARADDR;
output  [C_M_AXI_OUTPUT_IM_R_ID_WIDTH - 1:0] m_axi_output_im_r_ARID;
output  [7:0] m_axi_output_im_r_ARLEN;
output  [2:0] m_axi_output_im_r_ARSIZE;
output  [1:0] m_axi_output_im_r_ARBURST;
output  [1:0] m_axi_output_im_r_ARLOCK;
output  [3:0] m_axi_output_im_r_ARCACHE;
output  [2:0] m_axi_output_im_r_ARPROT;
output  [3:0] m_axi_output_im_r_ARQOS;
output  [3:0] m_axi_output_im_r_ARREGION;
output  [C_M_AXI_OUTPUT_IM_R_ARUSER_WIDTH - 1:0] m_axi_output_im_r_ARUSER;
input   m_axi_output_im_r_RVALID;
output   m_axi_output_im_r_RREADY;
input  [C_M_AXI_OUTPUT_IM_R_DATA_WIDTH - 1:0] m_axi_output_im_r_RDATA;
input   m_axi_output_im_r_RLAST;
input  [C_M_AXI_OUTPUT_IM_R_ID_WIDTH - 1:0] m_axi_output_im_r_RID;
input  [C_M_AXI_OUTPUT_IM_R_RUSER_WIDTH - 1:0] m_axi_output_im_r_RUSER;
input  [1:0] m_axi_output_im_r_RRESP;
input   m_axi_output_im_r_BVALID;
output   m_axi_output_im_r_BREADY;
input  [1:0] m_axi_output_im_r_BRESP;
input  [C_M_AXI_OUTPUT_IM_R_ID_WIDTH - 1:0] m_axi_output_im_r_BID;
input  [C_M_AXI_OUTPUT_IM_R_BUSER_WIDTH - 1:0] m_axi_output_im_r_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] real_sample;
wire   [63:0] imag_sample;
wire   [63:0] real_op;
wire   [63:0] imag_op;
reg    input_re_r_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    input_im_r_blk_n_AR;
reg    output_re_r_blk_n_AW;
wire    ap_CS_fsm_state12;
reg    output_re_r_blk_n_B;
wire    ap_CS_fsm_state19;
reg    output_im_r_blk_n_AW;
reg    output_im_r_blk_n_B;
reg   [61:0] trunc_ln_reg_286;
reg   [61:0] trunc_ln1_reg_292;
reg   [61:0] trunc_ln2_reg_298;
reg   [61:0] trunc_ln4_reg_304;
reg   [9:0] re_sample_address0;
reg    re_sample_ce0;
reg    re_sample_we0;
wire   [31:0] re_sample_q0;
reg    re_sample_ce1;
wire   [31:0] re_sample_q1;
reg   [9:0] im_sample_address0;
reg    im_sample_ce0;
reg    im_sample_we0;
wire   [31:0] im_sample_q0;
reg    im_sample_ce1;
wire   [31:0] im_sample_q1;
reg   [9:0] re_buff_address0;
reg    re_buff_ce0;
reg    re_buff_we0;
wire   [31:0] re_buff_q0;
reg   [9:0] im_buff_address0;
reg    im_buff_ce0;
reg    im_buff_we0;
wire   [31:0] im_buff_q0;
wire    grp_dft_Pipeline_1_fu_162_ap_start;
wire    grp_dft_Pipeline_1_fu_162_ap_done;
wire    grp_dft_Pipeline_1_fu_162_ap_idle;
wire    grp_dft_Pipeline_1_fu_162_ap_ready;
wire    grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWVALID;
wire   [63:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWADDR;
wire   [0:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWID;
wire   [31:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWLEN;
wire   [2:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWSIZE;
wire   [1:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWBURST;
wire   [1:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWLOCK;
wire   [3:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWCACHE;
wire   [2:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWPROT;
wire   [3:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWQOS;
wire   [3:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWREGION;
wire   [0:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWUSER;
wire    grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WVALID;
wire   [31:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WDATA;
wire   [3:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WSTRB;
wire    grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WLAST;
wire   [0:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WID;
wire   [0:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WUSER;
wire    grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARVALID;
wire   [63:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARADDR;
wire   [0:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARID;
wire   [31:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARLEN;
wire   [2:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARSIZE;
wire   [1:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARBURST;
wire   [1:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARLOCK;
wire   [3:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARCACHE;
wire   [2:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARPROT;
wire   [3:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARQOS;
wire   [3:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARREGION;
wire   [0:0] grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARUSER;
wire    grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_RREADY;
wire    grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_BREADY;
wire   [9:0] grp_dft_Pipeline_1_fu_162_re_sample_address0;
wire    grp_dft_Pipeline_1_fu_162_re_sample_ce0;
wire    grp_dft_Pipeline_1_fu_162_re_sample_we0;
wire   [31:0] grp_dft_Pipeline_1_fu_162_re_sample_d0;
wire    grp_dft_Pipeline_2_fu_170_ap_start;
wire    grp_dft_Pipeline_2_fu_170_ap_done;
wire    grp_dft_Pipeline_2_fu_170_ap_idle;
wire    grp_dft_Pipeline_2_fu_170_ap_ready;
wire    grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWVALID;
wire   [63:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWADDR;
wire   [0:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWID;
wire   [31:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWLEN;
wire   [2:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWSIZE;
wire   [1:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWBURST;
wire   [1:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWLOCK;
wire   [3:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWCACHE;
wire   [2:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWPROT;
wire   [3:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWQOS;
wire   [3:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWREGION;
wire   [0:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWUSER;
wire    grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WVALID;
wire   [31:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WDATA;
wire   [3:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WSTRB;
wire    grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WLAST;
wire   [0:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WID;
wire   [0:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WUSER;
wire    grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARVALID;
wire   [63:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARADDR;
wire   [0:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARID;
wire   [31:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARLEN;
wire   [2:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARSIZE;
wire   [1:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARBURST;
wire   [1:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARLOCK;
wire   [3:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARCACHE;
wire   [2:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARPROT;
wire   [3:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARQOS;
wire   [3:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARREGION;
wire   [0:0] grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARUSER;
wire    grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_RREADY;
wire    grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_BREADY;
wire   [9:0] grp_dft_Pipeline_2_fu_170_im_sample_address0;
wire    grp_dft_Pipeline_2_fu_170_im_sample_ce0;
wire    grp_dft_Pipeline_2_fu_170_im_sample_we0;
wire   [31:0] grp_dft_Pipeline_2_fu_170_im_sample_d0;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_start;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_done;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_idle;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_ready;
wire   [9:0] grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_address0;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_ce0;
wire   [9:0] grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_address1;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_ce1;
wire   [9:0] grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_address0;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_ce0;
wire   [9:0] grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_address1;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_ce1;
wire   [9:0] grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_address0;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_ce0;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_we0;
wire   [31:0] grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_d0;
wire   [9:0] grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_address0;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_ce0;
wire    grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_we0;
wire   [31:0] grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_d0;
wire    grp_dft_Pipeline_4_fu_190_ap_start;
wire    grp_dft_Pipeline_4_fu_190_ap_done;
wire    grp_dft_Pipeline_4_fu_190_ap_idle;
wire    grp_dft_Pipeline_4_fu_190_ap_ready;
wire    grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWVALID;
wire   [63:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWADDR;
wire   [0:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWID;
wire   [31:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWLEN;
wire   [2:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWSIZE;
wire   [1:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWBURST;
wire   [1:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWLOCK;
wire   [3:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWCACHE;
wire   [2:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWPROT;
wire   [3:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWQOS;
wire   [3:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWREGION;
wire   [0:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWUSER;
wire    grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WVALID;
wire   [31:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WDATA;
wire   [3:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WSTRB;
wire    grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WLAST;
wire   [0:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WID;
wire   [0:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WUSER;
wire    grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARVALID;
wire   [63:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARADDR;
wire   [0:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARID;
wire   [31:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARLEN;
wire   [2:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARSIZE;
wire   [1:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARBURST;
wire   [1:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARLOCK;
wire   [3:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARCACHE;
wire   [2:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARPROT;
wire   [3:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARQOS;
wire   [3:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARREGION;
wire   [0:0] grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARUSER;
wire    grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_RREADY;
wire    grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_BREADY;
wire   [9:0] grp_dft_Pipeline_4_fu_190_re_buff_address0;
wire    grp_dft_Pipeline_4_fu_190_re_buff_ce0;
wire    grp_dft_Pipeline_5_fu_198_ap_start;
wire    grp_dft_Pipeline_5_fu_198_ap_done;
wire    grp_dft_Pipeline_5_fu_198_ap_idle;
wire    grp_dft_Pipeline_5_fu_198_ap_ready;
wire    grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWVALID;
wire   [63:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWADDR;
wire   [0:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWID;
wire   [31:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWLEN;
wire   [2:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWSIZE;
wire   [1:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWBURST;
wire   [1:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWLOCK;
wire   [3:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWCACHE;
wire   [2:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWPROT;
wire   [3:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWQOS;
wire   [3:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWREGION;
wire   [0:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWUSER;
wire    grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WVALID;
wire   [31:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WDATA;
wire   [3:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WSTRB;
wire    grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WLAST;
wire   [0:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WID;
wire   [0:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WUSER;
wire    grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARVALID;
wire   [63:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARADDR;
wire   [0:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARID;
wire   [31:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARLEN;
wire   [2:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARSIZE;
wire   [1:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARBURST;
wire   [1:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARLOCK;
wire   [3:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARCACHE;
wire   [2:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARPROT;
wire   [3:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARQOS;
wire   [3:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARREGION;
wire   [0:0] grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARUSER;
wire    grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_RREADY;
wire    grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_BREADY;
wire   [9:0] grp_dft_Pipeline_5_fu_198_im_buff_address0;
wire    grp_dft_Pipeline_5_fu_198_im_buff_ce0;
wire    input_re_r_AWREADY;
wire    input_re_r_WREADY;
reg    input_re_r_ARVALID;
wire    input_re_r_ARREADY;
reg   [63:0] input_re_r_ARADDR;
reg   [0:0] input_re_r_ARID;
reg   [31:0] input_re_r_ARLEN;
reg   [2:0] input_re_r_ARSIZE;
reg   [1:0] input_re_r_ARBURST;
reg   [1:0] input_re_r_ARLOCK;
reg   [3:0] input_re_r_ARCACHE;
reg   [2:0] input_re_r_ARPROT;
reg   [3:0] input_re_r_ARQOS;
reg   [3:0] input_re_r_ARREGION;
reg   [0:0] input_re_r_ARUSER;
wire    input_re_r_RVALID;
reg    input_re_r_RREADY;
wire   [31:0] input_re_r_RDATA;
wire    input_re_r_RLAST;
wire   [0:0] input_re_r_RID;
wire   [0:0] input_re_r_RUSER;
wire   [1:0] input_re_r_RRESP;
wire    input_re_r_BVALID;
wire   [1:0] input_re_r_BRESP;
wire   [0:0] input_re_r_BID;
wire   [0:0] input_re_r_BUSER;
wire    input_im_r_AWREADY;
wire    input_im_r_WREADY;
reg    input_im_r_ARVALID;
wire    input_im_r_ARREADY;
reg   [63:0] input_im_r_ARADDR;
reg   [0:0] input_im_r_ARID;
reg   [31:0] input_im_r_ARLEN;
reg   [2:0] input_im_r_ARSIZE;
reg   [1:0] input_im_r_ARBURST;
reg   [1:0] input_im_r_ARLOCK;
reg   [3:0] input_im_r_ARCACHE;
reg   [2:0] input_im_r_ARPROT;
reg   [3:0] input_im_r_ARQOS;
reg   [3:0] input_im_r_ARREGION;
reg   [0:0] input_im_r_ARUSER;
wire    input_im_r_RVALID;
reg    input_im_r_RREADY;
wire   [31:0] input_im_r_RDATA;
wire    input_im_r_RLAST;
wire   [0:0] input_im_r_RID;
wire   [0:0] input_im_r_RUSER;
wire   [1:0] input_im_r_RRESP;
wire    input_im_r_BVALID;
wire   [1:0] input_im_r_BRESP;
wire   [0:0] input_im_r_BID;
wire   [0:0] input_im_r_BUSER;
reg    output_re_r_AWVALID;
wire    output_re_r_AWREADY;
reg   [63:0] output_re_r_AWADDR;
reg   [0:0] output_re_r_AWID;
reg   [31:0] output_re_r_AWLEN;
reg   [2:0] output_re_r_AWSIZE;
reg   [1:0] output_re_r_AWBURST;
reg   [1:0] output_re_r_AWLOCK;
reg   [3:0] output_re_r_AWCACHE;
reg   [2:0] output_re_r_AWPROT;
reg   [3:0] output_re_r_AWQOS;
reg   [3:0] output_re_r_AWREGION;
reg   [0:0] output_re_r_AWUSER;
reg    output_re_r_WVALID;
wire    output_re_r_WREADY;
wire    output_re_r_ARREADY;
wire    output_re_r_RVALID;
wire   [31:0] output_re_r_RDATA;
wire    output_re_r_RLAST;
wire   [0:0] output_re_r_RID;
wire   [0:0] output_re_r_RUSER;
wire   [1:0] output_re_r_RRESP;
wire    output_re_r_BVALID;
reg    output_re_r_BREADY;
wire   [1:0] output_re_r_BRESP;
wire   [0:0] output_re_r_BID;
wire   [0:0] output_re_r_BUSER;
reg    output_im_r_AWVALID;
wire    output_im_r_AWREADY;
reg   [63:0] output_im_r_AWADDR;
reg   [0:0] output_im_r_AWID;
reg   [31:0] output_im_r_AWLEN;
reg   [2:0] output_im_r_AWSIZE;
reg   [1:0] output_im_r_AWBURST;
reg   [1:0] output_im_r_AWLOCK;
reg   [3:0] output_im_r_AWCACHE;
reg   [2:0] output_im_r_AWPROT;
reg   [3:0] output_im_r_AWQOS;
reg   [3:0] output_im_r_AWREGION;
reg   [0:0] output_im_r_AWUSER;
reg    output_im_r_WVALID;
wire    output_im_r_WREADY;
wire    output_im_r_ARREADY;
wire    output_im_r_RVALID;
wire   [31:0] output_im_r_RDATA;
wire    output_im_r_RLAST;
wire   [0:0] output_im_r_RID;
wire   [0:0] output_im_r_RUSER;
wire   [1:0] output_im_r_RRESP;
wire    output_im_r_BVALID;
reg    output_im_r_BREADY;
wire   [1:0] output_im_r_BRESP;
wire   [0:0] output_im_r_BID;
wire   [0:0] output_im_r_BUSER;
reg    grp_dft_Pipeline_1_fu_162_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_dft_Pipeline_2_fu_170_ap_start_reg;
reg    grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_start_reg;
reg   [18:0] ap_NS_fsm;
wire    ap_NS_fsm_state11;
reg    grp_dft_Pipeline_4_fu_190_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_dft_Pipeline_5_fu_198_ap_start_reg;
wire  signed [63:0] sext_ln31_fu_246_p1;
wire  signed [63:0] sext_ln32_fu_256_p1;
wire  signed [63:0] sext_ln56_fu_266_p1;
wire  signed [63:0] sext_ln57_fu_276_p1;
reg    ap_block_state2_io;
reg    ap_block_state12_io;
reg    ap_block_state19;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_block_state10_on_subcall_done;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
reg    ap_block_state14_on_subcall_done;
reg    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 grp_dft_Pipeline_1_fu_162_ap_start_reg = 1'b0;
#0 grp_dft_Pipeline_2_fu_170_ap_start_reg = 1'b0;
#0 grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_start_reg = 1'b0;
#0 grp_dft_Pipeline_4_fu_190_ap_start_reg = 1'b0;
#0 grp_dft_Pipeline_5_fu_198_ap_start_reg = 1'b0;
end

dft_re_sample #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
re_sample_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(re_sample_address0),
    .ce0(re_sample_ce0),
    .we0(re_sample_we0),
    .d0(grp_dft_Pipeline_1_fu_162_re_sample_d0),
    .q0(re_sample_q0),
    .address1(grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_address1),
    .ce1(re_sample_ce1),
    .q1(re_sample_q1)
);

dft_re_sample #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
im_sample_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(im_sample_address0),
    .ce0(im_sample_ce0),
    .we0(im_sample_we0),
    .d0(grp_dft_Pipeline_2_fu_170_im_sample_d0),
    .q0(im_sample_q0),
    .address1(grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_address1),
    .ce1(im_sample_ce1),
    .q1(im_sample_q1)
);

dft_re_buff #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
re_buff_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(re_buff_address0),
    .ce0(re_buff_ce0),
    .we0(re_buff_we0),
    .d0(grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_d0),
    .q0(re_buff_q0)
);

dft_re_buff #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
im_buff_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(im_buff_address0),
    .ce0(im_buff_ce0),
    .we0(im_buff_we0),
    .d0(grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_d0),
    .q0(im_buff_q0)
);

dft_dft_Pipeline_1 grp_dft_Pipeline_1_fu_162(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dft_Pipeline_1_fu_162_ap_start),
    .ap_done(grp_dft_Pipeline_1_fu_162_ap_done),
    .ap_idle(grp_dft_Pipeline_1_fu_162_ap_idle),
    .ap_ready(grp_dft_Pipeline_1_fu_162_ap_ready),
    .m_axi_input_re_r_AWVALID(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWVALID),
    .m_axi_input_re_r_AWREADY(1'b0),
    .m_axi_input_re_r_AWADDR(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWADDR),
    .m_axi_input_re_r_AWID(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWID),
    .m_axi_input_re_r_AWLEN(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWLEN),
    .m_axi_input_re_r_AWSIZE(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWSIZE),
    .m_axi_input_re_r_AWBURST(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWBURST),
    .m_axi_input_re_r_AWLOCK(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWLOCK),
    .m_axi_input_re_r_AWCACHE(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWCACHE),
    .m_axi_input_re_r_AWPROT(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWPROT),
    .m_axi_input_re_r_AWQOS(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWQOS),
    .m_axi_input_re_r_AWREGION(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWREGION),
    .m_axi_input_re_r_AWUSER(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_AWUSER),
    .m_axi_input_re_r_WVALID(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WVALID),
    .m_axi_input_re_r_WREADY(1'b0),
    .m_axi_input_re_r_WDATA(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WDATA),
    .m_axi_input_re_r_WSTRB(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WSTRB),
    .m_axi_input_re_r_WLAST(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WLAST),
    .m_axi_input_re_r_WID(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WID),
    .m_axi_input_re_r_WUSER(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_WUSER),
    .m_axi_input_re_r_ARVALID(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARVALID),
    .m_axi_input_re_r_ARREADY(input_re_r_ARREADY),
    .m_axi_input_re_r_ARADDR(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARADDR),
    .m_axi_input_re_r_ARID(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARID),
    .m_axi_input_re_r_ARLEN(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARLEN),
    .m_axi_input_re_r_ARSIZE(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARSIZE),
    .m_axi_input_re_r_ARBURST(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARBURST),
    .m_axi_input_re_r_ARLOCK(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARLOCK),
    .m_axi_input_re_r_ARCACHE(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARCACHE),
    .m_axi_input_re_r_ARPROT(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARPROT),
    .m_axi_input_re_r_ARQOS(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARQOS),
    .m_axi_input_re_r_ARREGION(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARREGION),
    .m_axi_input_re_r_ARUSER(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARUSER),
    .m_axi_input_re_r_RVALID(input_re_r_RVALID),
    .m_axi_input_re_r_RREADY(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_RREADY),
    .m_axi_input_re_r_RDATA(input_re_r_RDATA),
    .m_axi_input_re_r_RLAST(input_re_r_RLAST),
    .m_axi_input_re_r_RID(input_re_r_RID),
    .m_axi_input_re_r_RUSER(input_re_r_RUSER),
    .m_axi_input_re_r_RRESP(input_re_r_RRESP),
    .m_axi_input_re_r_BVALID(1'b0),
    .m_axi_input_re_r_BREADY(grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_BREADY),
    .m_axi_input_re_r_BRESP(2'd0),
    .m_axi_input_re_r_BID(1'd0),
    .m_axi_input_re_r_BUSER(1'd0),
    .sext_ln31(trunc_ln_reg_286),
    .re_sample_address0(grp_dft_Pipeline_1_fu_162_re_sample_address0),
    .re_sample_ce0(grp_dft_Pipeline_1_fu_162_re_sample_ce0),
    .re_sample_we0(grp_dft_Pipeline_1_fu_162_re_sample_we0),
    .re_sample_d0(grp_dft_Pipeline_1_fu_162_re_sample_d0)
);

dft_dft_Pipeline_2 grp_dft_Pipeline_2_fu_170(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dft_Pipeline_2_fu_170_ap_start),
    .ap_done(grp_dft_Pipeline_2_fu_170_ap_done),
    .ap_idle(grp_dft_Pipeline_2_fu_170_ap_idle),
    .ap_ready(grp_dft_Pipeline_2_fu_170_ap_ready),
    .m_axi_input_im_r_AWVALID(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWVALID),
    .m_axi_input_im_r_AWREADY(1'b0),
    .m_axi_input_im_r_AWADDR(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWADDR),
    .m_axi_input_im_r_AWID(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWID),
    .m_axi_input_im_r_AWLEN(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWLEN),
    .m_axi_input_im_r_AWSIZE(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWSIZE),
    .m_axi_input_im_r_AWBURST(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWBURST),
    .m_axi_input_im_r_AWLOCK(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWLOCK),
    .m_axi_input_im_r_AWCACHE(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWCACHE),
    .m_axi_input_im_r_AWPROT(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWPROT),
    .m_axi_input_im_r_AWQOS(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWQOS),
    .m_axi_input_im_r_AWREGION(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWREGION),
    .m_axi_input_im_r_AWUSER(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_AWUSER),
    .m_axi_input_im_r_WVALID(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WVALID),
    .m_axi_input_im_r_WREADY(1'b0),
    .m_axi_input_im_r_WDATA(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WDATA),
    .m_axi_input_im_r_WSTRB(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WSTRB),
    .m_axi_input_im_r_WLAST(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WLAST),
    .m_axi_input_im_r_WID(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WID),
    .m_axi_input_im_r_WUSER(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_WUSER),
    .m_axi_input_im_r_ARVALID(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARVALID),
    .m_axi_input_im_r_ARREADY(input_im_r_ARREADY),
    .m_axi_input_im_r_ARADDR(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARADDR),
    .m_axi_input_im_r_ARID(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARID),
    .m_axi_input_im_r_ARLEN(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARLEN),
    .m_axi_input_im_r_ARSIZE(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARSIZE),
    .m_axi_input_im_r_ARBURST(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARBURST),
    .m_axi_input_im_r_ARLOCK(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARLOCK),
    .m_axi_input_im_r_ARCACHE(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARCACHE),
    .m_axi_input_im_r_ARPROT(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARPROT),
    .m_axi_input_im_r_ARQOS(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARQOS),
    .m_axi_input_im_r_ARREGION(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARREGION),
    .m_axi_input_im_r_ARUSER(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARUSER),
    .m_axi_input_im_r_RVALID(input_im_r_RVALID),
    .m_axi_input_im_r_RREADY(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_RREADY),
    .m_axi_input_im_r_RDATA(input_im_r_RDATA),
    .m_axi_input_im_r_RLAST(input_im_r_RLAST),
    .m_axi_input_im_r_RID(input_im_r_RID),
    .m_axi_input_im_r_RUSER(input_im_r_RUSER),
    .m_axi_input_im_r_RRESP(input_im_r_RRESP),
    .m_axi_input_im_r_BVALID(1'b0),
    .m_axi_input_im_r_BREADY(grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_BREADY),
    .m_axi_input_im_r_BRESP(2'd0),
    .m_axi_input_im_r_BID(1'd0),
    .m_axi_input_im_r_BUSER(1'd0),
    .sext_ln32(trunc_ln1_reg_292),
    .im_sample_address0(grp_dft_Pipeline_2_fu_170_im_sample_address0),
    .im_sample_ce0(grp_dft_Pipeline_2_fu_170_im_sample_ce0),
    .im_sample_we0(grp_dft_Pipeline_2_fu_170_im_sample_we0),
    .im_sample_d0(grp_dft_Pipeline_2_fu_170_im_sample_d0)
);

dft_dft_Pipeline_loop_k_loop_n grp_dft_Pipeline_loop_k_loop_n_fu_178(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_start),
    .ap_done(grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_done),
    .ap_idle(grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_idle),
    .ap_ready(grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_ready),
    .re_sample_address0(grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_address0),
    .re_sample_ce0(grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_ce0),
    .re_sample_q0(re_sample_q0),
    .re_sample_address1(grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_address1),
    .re_sample_ce1(grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_ce1),
    .re_sample_q1(re_sample_q1),
    .im_sample_address0(grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_address0),
    .im_sample_ce0(grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_ce0),
    .im_sample_q0(im_sample_q0),
    .im_sample_address1(grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_address1),
    .im_sample_ce1(grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_ce1),
    .im_sample_q1(im_sample_q1),
    .re_buff_address0(grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_address0),
    .re_buff_ce0(grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_ce0),
    .re_buff_we0(grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_we0),
    .re_buff_d0(grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_d0),
    .im_buff_address0(grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_address0),
    .im_buff_ce0(grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_ce0),
    .im_buff_we0(grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_we0),
    .im_buff_d0(grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_d0)
);

dft_dft_Pipeline_4 grp_dft_Pipeline_4_fu_190(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dft_Pipeline_4_fu_190_ap_start),
    .ap_done(grp_dft_Pipeline_4_fu_190_ap_done),
    .ap_idle(grp_dft_Pipeline_4_fu_190_ap_idle),
    .ap_ready(grp_dft_Pipeline_4_fu_190_ap_ready),
    .m_axi_output_re_r_AWVALID(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWVALID),
    .m_axi_output_re_r_AWREADY(output_re_r_AWREADY),
    .m_axi_output_re_r_AWADDR(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWADDR),
    .m_axi_output_re_r_AWID(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWID),
    .m_axi_output_re_r_AWLEN(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWLEN),
    .m_axi_output_re_r_AWSIZE(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWSIZE),
    .m_axi_output_re_r_AWBURST(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWBURST),
    .m_axi_output_re_r_AWLOCK(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWLOCK),
    .m_axi_output_re_r_AWCACHE(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWCACHE),
    .m_axi_output_re_r_AWPROT(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWPROT),
    .m_axi_output_re_r_AWQOS(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWQOS),
    .m_axi_output_re_r_AWREGION(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWREGION),
    .m_axi_output_re_r_AWUSER(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWUSER),
    .m_axi_output_re_r_WVALID(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WVALID),
    .m_axi_output_re_r_WREADY(output_re_r_WREADY),
    .m_axi_output_re_r_WDATA(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WDATA),
    .m_axi_output_re_r_WSTRB(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WSTRB),
    .m_axi_output_re_r_WLAST(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WLAST),
    .m_axi_output_re_r_WID(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WID),
    .m_axi_output_re_r_WUSER(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WUSER),
    .m_axi_output_re_r_ARVALID(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARVALID),
    .m_axi_output_re_r_ARREADY(1'b0),
    .m_axi_output_re_r_ARADDR(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARADDR),
    .m_axi_output_re_r_ARID(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARID),
    .m_axi_output_re_r_ARLEN(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARLEN),
    .m_axi_output_re_r_ARSIZE(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARSIZE),
    .m_axi_output_re_r_ARBURST(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARBURST),
    .m_axi_output_re_r_ARLOCK(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARLOCK),
    .m_axi_output_re_r_ARCACHE(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARCACHE),
    .m_axi_output_re_r_ARPROT(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARPROT),
    .m_axi_output_re_r_ARQOS(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARQOS),
    .m_axi_output_re_r_ARREGION(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARREGION),
    .m_axi_output_re_r_ARUSER(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_ARUSER),
    .m_axi_output_re_r_RVALID(1'b0),
    .m_axi_output_re_r_RREADY(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_RREADY),
    .m_axi_output_re_r_RDATA(32'd0),
    .m_axi_output_re_r_RLAST(1'b0),
    .m_axi_output_re_r_RID(1'd0),
    .m_axi_output_re_r_RUSER(1'd0),
    .m_axi_output_re_r_RRESP(2'd0),
    .m_axi_output_re_r_BVALID(output_re_r_BVALID),
    .m_axi_output_re_r_BREADY(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_BREADY),
    .m_axi_output_re_r_BRESP(output_re_r_BRESP),
    .m_axi_output_re_r_BID(output_re_r_BID),
    .m_axi_output_re_r_BUSER(output_re_r_BUSER),
    .sext_ln56(trunc_ln2_reg_298),
    .re_buff_address0(grp_dft_Pipeline_4_fu_190_re_buff_address0),
    .re_buff_ce0(grp_dft_Pipeline_4_fu_190_re_buff_ce0),
    .re_buff_q0(re_buff_q0)
);

dft_dft_Pipeline_5 grp_dft_Pipeline_5_fu_198(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_dft_Pipeline_5_fu_198_ap_start),
    .ap_done(grp_dft_Pipeline_5_fu_198_ap_done),
    .ap_idle(grp_dft_Pipeline_5_fu_198_ap_idle),
    .ap_ready(grp_dft_Pipeline_5_fu_198_ap_ready),
    .m_axi_output_im_r_AWVALID(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWVALID),
    .m_axi_output_im_r_AWREADY(output_im_r_AWREADY),
    .m_axi_output_im_r_AWADDR(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWADDR),
    .m_axi_output_im_r_AWID(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWID),
    .m_axi_output_im_r_AWLEN(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWLEN),
    .m_axi_output_im_r_AWSIZE(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWSIZE),
    .m_axi_output_im_r_AWBURST(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWBURST),
    .m_axi_output_im_r_AWLOCK(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWLOCK),
    .m_axi_output_im_r_AWCACHE(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWCACHE),
    .m_axi_output_im_r_AWPROT(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWPROT),
    .m_axi_output_im_r_AWQOS(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWQOS),
    .m_axi_output_im_r_AWREGION(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWREGION),
    .m_axi_output_im_r_AWUSER(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWUSER),
    .m_axi_output_im_r_WVALID(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WVALID),
    .m_axi_output_im_r_WREADY(output_im_r_WREADY),
    .m_axi_output_im_r_WDATA(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WDATA),
    .m_axi_output_im_r_WSTRB(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WSTRB),
    .m_axi_output_im_r_WLAST(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WLAST),
    .m_axi_output_im_r_WID(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WID),
    .m_axi_output_im_r_WUSER(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WUSER),
    .m_axi_output_im_r_ARVALID(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARVALID),
    .m_axi_output_im_r_ARREADY(1'b0),
    .m_axi_output_im_r_ARADDR(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARADDR),
    .m_axi_output_im_r_ARID(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARID),
    .m_axi_output_im_r_ARLEN(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARLEN),
    .m_axi_output_im_r_ARSIZE(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARSIZE),
    .m_axi_output_im_r_ARBURST(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARBURST),
    .m_axi_output_im_r_ARLOCK(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARLOCK),
    .m_axi_output_im_r_ARCACHE(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARCACHE),
    .m_axi_output_im_r_ARPROT(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARPROT),
    .m_axi_output_im_r_ARQOS(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARQOS),
    .m_axi_output_im_r_ARREGION(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARREGION),
    .m_axi_output_im_r_ARUSER(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_ARUSER),
    .m_axi_output_im_r_RVALID(1'b0),
    .m_axi_output_im_r_RREADY(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_RREADY),
    .m_axi_output_im_r_RDATA(32'd0),
    .m_axi_output_im_r_RLAST(1'b0),
    .m_axi_output_im_r_RID(1'd0),
    .m_axi_output_im_r_RUSER(1'd0),
    .m_axi_output_im_r_RRESP(2'd0),
    .m_axi_output_im_r_BVALID(output_im_r_BVALID),
    .m_axi_output_im_r_BREADY(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_BREADY),
    .m_axi_output_im_r_BRESP(output_im_r_BRESP),
    .m_axi_output_im_r_BID(output_im_r_BID),
    .m_axi_output_im_r_BUSER(output_im_r_BUSER),
    .sext_ln57(trunc_ln4_reg_304),
    .im_buff_address0(grp_dft_Pipeline_5_fu_198_im_buff_address0),
    .im_buff_ce0(grp_dft_Pipeline_5_fu_198_im_buff_ce0),
    .im_buff_q0(im_buff_q0)
);

dft_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .real_sample(real_sample),
    .imag_sample(imag_sample),
    .real_op(real_op),
    .imag_op(imag_op),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

dft_input_re_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_INPUT_RE_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_INPUT_RE_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_INPUT_RE_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_INPUT_RE_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_INPUT_RE_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_INPUT_RE_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_INPUT_RE_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_INPUT_RE_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_INPUT_RE_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_INPUT_RE_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_INPUT_RE_R_CACHE_VALUE ))
input_re_r_m_axi_U(
    .AWVALID(m_axi_input_re_r_AWVALID),
    .AWREADY(m_axi_input_re_r_AWREADY),
    .AWADDR(m_axi_input_re_r_AWADDR),
    .AWID(m_axi_input_re_r_AWID),
    .AWLEN(m_axi_input_re_r_AWLEN),
    .AWSIZE(m_axi_input_re_r_AWSIZE),
    .AWBURST(m_axi_input_re_r_AWBURST),
    .AWLOCK(m_axi_input_re_r_AWLOCK),
    .AWCACHE(m_axi_input_re_r_AWCACHE),
    .AWPROT(m_axi_input_re_r_AWPROT),
    .AWQOS(m_axi_input_re_r_AWQOS),
    .AWREGION(m_axi_input_re_r_AWREGION),
    .AWUSER(m_axi_input_re_r_AWUSER),
    .WVALID(m_axi_input_re_r_WVALID),
    .WREADY(m_axi_input_re_r_WREADY),
    .WDATA(m_axi_input_re_r_WDATA),
    .WSTRB(m_axi_input_re_r_WSTRB),
    .WLAST(m_axi_input_re_r_WLAST),
    .WID(m_axi_input_re_r_WID),
    .WUSER(m_axi_input_re_r_WUSER),
    .ARVALID(m_axi_input_re_r_ARVALID),
    .ARREADY(m_axi_input_re_r_ARREADY),
    .ARADDR(m_axi_input_re_r_ARADDR),
    .ARID(m_axi_input_re_r_ARID),
    .ARLEN(m_axi_input_re_r_ARLEN),
    .ARSIZE(m_axi_input_re_r_ARSIZE),
    .ARBURST(m_axi_input_re_r_ARBURST),
    .ARLOCK(m_axi_input_re_r_ARLOCK),
    .ARCACHE(m_axi_input_re_r_ARCACHE),
    .ARPROT(m_axi_input_re_r_ARPROT),
    .ARQOS(m_axi_input_re_r_ARQOS),
    .ARREGION(m_axi_input_re_r_ARREGION),
    .ARUSER(m_axi_input_re_r_ARUSER),
    .RVALID(m_axi_input_re_r_RVALID),
    .RREADY(m_axi_input_re_r_RREADY),
    .RDATA(m_axi_input_re_r_RDATA),
    .RLAST(m_axi_input_re_r_RLAST),
    .RID(m_axi_input_re_r_RID),
    .RUSER(m_axi_input_re_r_RUSER),
    .RRESP(m_axi_input_re_r_RRESP),
    .BVALID(m_axi_input_re_r_BVALID),
    .BREADY(m_axi_input_re_r_BREADY),
    .BRESP(m_axi_input_re_r_BRESP),
    .BID(m_axi_input_re_r_BID),
    .BUSER(m_axi_input_re_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(input_re_r_ARVALID),
    .I_ARREADY(input_re_r_ARREADY),
    .I_ARADDR(input_re_r_ARADDR),
    .I_ARID(input_re_r_ARID),
    .I_ARLEN(input_re_r_ARLEN),
    .I_ARSIZE(input_re_r_ARSIZE),
    .I_ARLOCK(input_re_r_ARLOCK),
    .I_ARCACHE(input_re_r_ARCACHE),
    .I_ARQOS(input_re_r_ARQOS),
    .I_ARPROT(input_re_r_ARPROT),
    .I_ARUSER(input_re_r_ARUSER),
    .I_ARBURST(input_re_r_ARBURST),
    .I_ARREGION(input_re_r_ARREGION),
    .I_RVALID(input_re_r_RVALID),
    .I_RREADY(input_re_r_RREADY),
    .I_RDATA(input_re_r_RDATA),
    .I_RID(input_re_r_RID),
    .I_RUSER(input_re_r_RUSER),
    .I_RRESP(input_re_r_RRESP),
    .I_RLAST(input_re_r_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(input_re_r_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(input_re_r_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(input_re_r_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(input_re_r_BRESP),
    .I_BID(input_re_r_BID),
    .I_BUSER(input_re_r_BUSER)
);

dft_input_im_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_INPUT_IM_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_INPUT_IM_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_INPUT_IM_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_INPUT_IM_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_INPUT_IM_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_INPUT_IM_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_INPUT_IM_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_INPUT_IM_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_INPUT_IM_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_INPUT_IM_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_INPUT_IM_R_CACHE_VALUE ))
input_im_r_m_axi_U(
    .AWVALID(m_axi_input_im_r_AWVALID),
    .AWREADY(m_axi_input_im_r_AWREADY),
    .AWADDR(m_axi_input_im_r_AWADDR),
    .AWID(m_axi_input_im_r_AWID),
    .AWLEN(m_axi_input_im_r_AWLEN),
    .AWSIZE(m_axi_input_im_r_AWSIZE),
    .AWBURST(m_axi_input_im_r_AWBURST),
    .AWLOCK(m_axi_input_im_r_AWLOCK),
    .AWCACHE(m_axi_input_im_r_AWCACHE),
    .AWPROT(m_axi_input_im_r_AWPROT),
    .AWQOS(m_axi_input_im_r_AWQOS),
    .AWREGION(m_axi_input_im_r_AWREGION),
    .AWUSER(m_axi_input_im_r_AWUSER),
    .WVALID(m_axi_input_im_r_WVALID),
    .WREADY(m_axi_input_im_r_WREADY),
    .WDATA(m_axi_input_im_r_WDATA),
    .WSTRB(m_axi_input_im_r_WSTRB),
    .WLAST(m_axi_input_im_r_WLAST),
    .WID(m_axi_input_im_r_WID),
    .WUSER(m_axi_input_im_r_WUSER),
    .ARVALID(m_axi_input_im_r_ARVALID),
    .ARREADY(m_axi_input_im_r_ARREADY),
    .ARADDR(m_axi_input_im_r_ARADDR),
    .ARID(m_axi_input_im_r_ARID),
    .ARLEN(m_axi_input_im_r_ARLEN),
    .ARSIZE(m_axi_input_im_r_ARSIZE),
    .ARBURST(m_axi_input_im_r_ARBURST),
    .ARLOCK(m_axi_input_im_r_ARLOCK),
    .ARCACHE(m_axi_input_im_r_ARCACHE),
    .ARPROT(m_axi_input_im_r_ARPROT),
    .ARQOS(m_axi_input_im_r_ARQOS),
    .ARREGION(m_axi_input_im_r_ARREGION),
    .ARUSER(m_axi_input_im_r_ARUSER),
    .RVALID(m_axi_input_im_r_RVALID),
    .RREADY(m_axi_input_im_r_RREADY),
    .RDATA(m_axi_input_im_r_RDATA),
    .RLAST(m_axi_input_im_r_RLAST),
    .RID(m_axi_input_im_r_RID),
    .RUSER(m_axi_input_im_r_RUSER),
    .RRESP(m_axi_input_im_r_RRESP),
    .BVALID(m_axi_input_im_r_BVALID),
    .BREADY(m_axi_input_im_r_BREADY),
    .BRESP(m_axi_input_im_r_BRESP),
    .BID(m_axi_input_im_r_BID),
    .BUSER(m_axi_input_im_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(input_im_r_ARVALID),
    .I_ARREADY(input_im_r_ARREADY),
    .I_ARADDR(input_im_r_ARADDR),
    .I_ARID(input_im_r_ARID),
    .I_ARLEN(input_im_r_ARLEN),
    .I_ARSIZE(input_im_r_ARSIZE),
    .I_ARLOCK(input_im_r_ARLOCK),
    .I_ARCACHE(input_im_r_ARCACHE),
    .I_ARQOS(input_im_r_ARQOS),
    .I_ARPROT(input_im_r_ARPROT),
    .I_ARUSER(input_im_r_ARUSER),
    .I_ARBURST(input_im_r_ARBURST),
    .I_ARREGION(input_im_r_ARREGION),
    .I_RVALID(input_im_r_RVALID),
    .I_RREADY(input_im_r_RREADY),
    .I_RDATA(input_im_r_RDATA),
    .I_RID(input_im_r_RID),
    .I_RUSER(input_im_r_RUSER),
    .I_RRESP(input_im_r_RRESP),
    .I_RLAST(input_im_r_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(input_im_r_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(input_im_r_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(input_im_r_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(input_im_r_BRESP),
    .I_BID(input_im_r_BID),
    .I_BUSER(input_im_r_BUSER)
);

dft_output_re_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUTPUT_RE_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUTPUT_RE_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUTPUT_RE_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUTPUT_RE_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUTPUT_RE_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUTPUT_RE_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUTPUT_RE_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUTPUT_RE_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_OUTPUT_RE_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUTPUT_RE_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUTPUT_RE_R_CACHE_VALUE ))
output_re_r_m_axi_U(
    .AWVALID(m_axi_output_re_r_AWVALID),
    .AWREADY(m_axi_output_re_r_AWREADY),
    .AWADDR(m_axi_output_re_r_AWADDR),
    .AWID(m_axi_output_re_r_AWID),
    .AWLEN(m_axi_output_re_r_AWLEN),
    .AWSIZE(m_axi_output_re_r_AWSIZE),
    .AWBURST(m_axi_output_re_r_AWBURST),
    .AWLOCK(m_axi_output_re_r_AWLOCK),
    .AWCACHE(m_axi_output_re_r_AWCACHE),
    .AWPROT(m_axi_output_re_r_AWPROT),
    .AWQOS(m_axi_output_re_r_AWQOS),
    .AWREGION(m_axi_output_re_r_AWREGION),
    .AWUSER(m_axi_output_re_r_AWUSER),
    .WVALID(m_axi_output_re_r_WVALID),
    .WREADY(m_axi_output_re_r_WREADY),
    .WDATA(m_axi_output_re_r_WDATA),
    .WSTRB(m_axi_output_re_r_WSTRB),
    .WLAST(m_axi_output_re_r_WLAST),
    .WID(m_axi_output_re_r_WID),
    .WUSER(m_axi_output_re_r_WUSER),
    .ARVALID(m_axi_output_re_r_ARVALID),
    .ARREADY(m_axi_output_re_r_ARREADY),
    .ARADDR(m_axi_output_re_r_ARADDR),
    .ARID(m_axi_output_re_r_ARID),
    .ARLEN(m_axi_output_re_r_ARLEN),
    .ARSIZE(m_axi_output_re_r_ARSIZE),
    .ARBURST(m_axi_output_re_r_ARBURST),
    .ARLOCK(m_axi_output_re_r_ARLOCK),
    .ARCACHE(m_axi_output_re_r_ARCACHE),
    .ARPROT(m_axi_output_re_r_ARPROT),
    .ARQOS(m_axi_output_re_r_ARQOS),
    .ARREGION(m_axi_output_re_r_ARREGION),
    .ARUSER(m_axi_output_re_r_ARUSER),
    .RVALID(m_axi_output_re_r_RVALID),
    .RREADY(m_axi_output_re_r_RREADY),
    .RDATA(m_axi_output_re_r_RDATA),
    .RLAST(m_axi_output_re_r_RLAST),
    .RID(m_axi_output_re_r_RID),
    .RUSER(m_axi_output_re_r_RUSER),
    .RRESP(m_axi_output_re_r_RRESP),
    .BVALID(m_axi_output_re_r_BVALID),
    .BREADY(m_axi_output_re_r_BREADY),
    .BRESP(m_axi_output_re_r_BRESP),
    .BID(m_axi_output_re_r_BID),
    .BUSER(m_axi_output_re_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(output_re_r_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(output_re_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(output_re_r_RDATA),
    .I_RID(output_re_r_RID),
    .I_RUSER(output_re_r_RUSER),
    .I_RRESP(output_re_r_RRESP),
    .I_RLAST(output_re_r_RLAST),
    .I_AWVALID(output_re_r_AWVALID),
    .I_AWREADY(output_re_r_AWREADY),
    .I_AWADDR(output_re_r_AWADDR),
    .I_AWID(output_re_r_AWID),
    .I_AWLEN(output_re_r_AWLEN),
    .I_AWSIZE(output_re_r_AWSIZE),
    .I_AWLOCK(output_re_r_AWLOCK),
    .I_AWCACHE(output_re_r_AWCACHE),
    .I_AWQOS(output_re_r_AWQOS),
    .I_AWPROT(output_re_r_AWPROT),
    .I_AWUSER(output_re_r_AWUSER),
    .I_AWBURST(output_re_r_AWBURST),
    .I_AWREGION(output_re_r_AWREGION),
    .I_WVALID(output_re_r_WVALID),
    .I_WREADY(output_re_r_WREADY),
    .I_WDATA(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WDATA),
    .I_WID(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WID),
    .I_WUSER(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WUSER),
    .I_WLAST(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WLAST),
    .I_WSTRB(grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WSTRB),
    .I_BVALID(output_re_r_BVALID),
    .I_BREADY(output_re_r_BREADY),
    .I_BRESP(output_re_r_BRESP),
    .I_BID(output_re_r_BID),
    .I_BUSER(output_re_r_BUSER)
);

dft_output_im_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUTPUT_IM_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUTPUT_IM_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUTPUT_IM_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUTPUT_IM_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUTPUT_IM_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUTPUT_IM_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUTPUT_IM_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUTPUT_IM_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_OUTPUT_IM_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUTPUT_IM_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUTPUT_IM_R_CACHE_VALUE ))
output_im_r_m_axi_U(
    .AWVALID(m_axi_output_im_r_AWVALID),
    .AWREADY(m_axi_output_im_r_AWREADY),
    .AWADDR(m_axi_output_im_r_AWADDR),
    .AWID(m_axi_output_im_r_AWID),
    .AWLEN(m_axi_output_im_r_AWLEN),
    .AWSIZE(m_axi_output_im_r_AWSIZE),
    .AWBURST(m_axi_output_im_r_AWBURST),
    .AWLOCK(m_axi_output_im_r_AWLOCK),
    .AWCACHE(m_axi_output_im_r_AWCACHE),
    .AWPROT(m_axi_output_im_r_AWPROT),
    .AWQOS(m_axi_output_im_r_AWQOS),
    .AWREGION(m_axi_output_im_r_AWREGION),
    .AWUSER(m_axi_output_im_r_AWUSER),
    .WVALID(m_axi_output_im_r_WVALID),
    .WREADY(m_axi_output_im_r_WREADY),
    .WDATA(m_axi_output_im_r_WDATA),
    .WSTRB(m_axi_output_im_r_WSTRB),
    .WLAST(m_axi_output_im_r_WLAST),
    .WID(m_axi_output_im_r_WID),
    .WUSER(m_axi_output_im_r_WUSER),
    .ARVALID(m_axi_output_im_r_ARVALID),
    .ARREADY(m_axi_output_im_r_ARREADY),
    .ARADDR(m_axi_output_im_r_ARADDR),
    .ARID(m_axi_output_im_r_ARID),
    .ARLEN(m_axi_output_im_r_ARLEN),
    .ARSIZE(m_axi_output_im_r_ARSIZE),
    .ARBURST(m_axi_output_im_r_ARBURST),
    .ARLOCK(m_axi_output_im_r_ARLOCK),
    .ARCACHE(m_axi_output_im_r_ARCACHE),
    .ARPROT(m_axi_output_im_r_ARPROT),
    .ARQOS(m_axi_output_im_r_ARQOS),
    .ARREGION(m_axi_output_im_r_ARREGION),
    .ARUSER(m_axi_output_im_r_ARUSER),
    .RVALID(m_axi_output_im_r_RVALID),
    .RREADY(m_axi_output_im_r_RREADY),
    .RDATA(m_axi_output_im_r_RDATA),
    .RLAST(m_axi_output_im_r_RLAST),
    .RID(m_axi_output_im_r_RID),
    .RUSER(m_axi_output_im_r_RUSER),
    .RRESP(m_axi_output_im_r_RRESP),
    .BVALID(m_axi_output_im_r_BVALID),
    .BREADY(m_axi_output_im_r_BREADY),
    .BRESP(m_axi_output_im_r_BRESP),
    .BID(m_axi_output_im_r_BID),
    .BUSER(m_axi_output_im_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(output_im_r_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(output_im_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(output_im_r_RDATA),
    .I_RID(output_im_r_RID),
    .I_RUSER(output_im_r_RUSER),
    .I_RRESP(output_im_r_RRESP),
    .I_RLAST(output_im_r_RLAST),
    .I_AWVALID(output_im_r_AWVALID),
    .I_AWREADY(output_im_r_AWREADY),
    .I_AWADDR(output_im_r_AWADDR),
    .I_AWID(output_im_r_AWID),
    .I_AWLEN(output_im_r_AWLEN),
    .I_AWSIZE(output_im_r_AWSIZE),
    .I_AWLOCK(output_im_r_AWLOCK),
    .I_AWCACHE(output_im_r_AWCACHE),
    .I_AWQOS(output_im_r_AWQOS),
    .I_AWPROT(output_im_r_AWPROT),
    .I_AWUSER(output_im_r_AWUSER),
    .I_AWBURST(output_im_r_AWBURST),
    .I_AWREGION(output_im_r_AWREGION),
    .I_WVALID(output_im_r_WVALID),
    .I_WREADY(output_im_r_WREADY),
    .I_WDATA(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WDATA),
    .I_WID(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WID),
    .I_WUSER(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WUSER),
    .I_WLAST(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WLAST),
    .I_WSTRB(grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WSTRB),
    .I_BVALID(output_im_r_BVALID),
    .I_BREADY(output_im_r_BREADY),
    .I_BRESP(output_im_r_BRESP),
    .I_BID(output_im_r_BID),
    .I_BUSER(output_im_r_BUSER)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dft_Pipeline_1_fu_162_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_dft_Pipeline_1_fu_162_ap_start_reg <= 1'b1;
        end else if ((grp_dft_Pipeline_1_fu_162_ap_ready == 1'b1)) begin
            grp_dft_Pipeline_1_fu_162_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dft_Pipeline_2_fu_170_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_dft_Pipeline_2_fu_170_ap_start_reg <= 1'b1;
        end else if ((grp_dft_Pipeline_2_fu_170_ap_ready == 1'b1)) begin
            grp_dft_Pipeline_2_fu_170_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dft_Pipeline_4_fu_190_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_dft_Pipeline_4_fu_190_ap_start_reg <= 1'b1;
        end else if ((grp_dft_Pipeline_4_fu_190_ap_ready == 1'b1)) begin
            grp_dft_Pipeline_4_fu_190_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dft_Pipeline_5_fu_198_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_dft_Pipeline_5_fu_198_ap_start_reg <= 1'b1;
        end else if ((grp_dft_Pipeline_5_fu_198_ap_ready == 1'b1)) begin
            grp_dft_Pipeline_5_fu_198_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state11) & (1'b1 == ap_CS_fsm_state10))) begin
            grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_start_reg <= 1'b1;
        end else if ((grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_ready == 1'b1)) begin
            grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        trunc_ln1_reg_292 <= {{imag_sample[63:2]}};
        trunc_ln2_reg_298 <= {{real_op[63:2]}};
        trunc_ln4_reg_304 <= {{imag_op[63:2]}};
        trunc_ln_reg_286 <= {{real_sample[63:2]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state10_on_subcall_done)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if (((grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_done == 1'b0) | (1'b1 == ap_block_state12_io))) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state14_on_subcall_done)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if (((output_im_r_BVALID == 1'b0) | (output_re_r_BVALID == 1'b0))) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_io)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((output_im_r_BVALID == 1'b0) | (output_re_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((output_im_r_BVALID == 1'b0) | (output_re_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        im_buff_address0 = grp_dft_Pipeline_5_fu_198_im_buff_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        im_buff_address0 = grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_address0;
    end else begin
        im_buff_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        im_buff_ce0 = grp_dft_Pipeline_5_fu_198_im_buff_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        im_buff_ce0 = grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_ce0;
    end else begin
        im_buff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        im_buff_we0 = grp_dft_Pipeline_loop_k_loop_n_fu_178_im_buff_we0;
    end else begin
        im_buff_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        im_sample_address0 = grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        im_sample_address0 = grp_dft_Pipeline_2_fu_170_im_sample_address0;
    end else begin
        im_sample_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        im_sample_ce0 = grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        im_sample_ce0 = grp_dft_Pipeline_2_fu_170_im_sample_ce0;
    end else begin
        im_sample_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        im_sample_ce1 = grp_dft_Pipeline_loop_k_loop_n_fu_178_im_sample_ce1;
    end else begin
        im_sample_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        im_sample_we0 = grp_dft_Pipeline_2_fu_170_im_sample_we0;
    end else begin
        im_sample_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2))) begin
        input_im_r_ARADDR = sext_ln32_fu_256_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARADDR = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARADDR;
    end else begin
        input_im_r_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARBURST = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARBURST;
    end else begin
        input_im_r_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARCACHE = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARCACHE;
    end else begin
        input_im_r_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARID = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARID;
    end else begin
        input_im_r_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2))) begin
        input_im_r_ARLEN = 32'd1024;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARLEN = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARLEN;
    end else begin
        input_im_r_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARLOCK = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARLOCK;
    end else begin
        input_im_r_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARPROT = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARPROT;
    end else begin
        input_im_r_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARQOS = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARQOS;
    end else begin
        input_im_r_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARREGION = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARREGION;
    end else begin
        input_im_r_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARSIZE = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARSIZE;
    end else begin
        input_im_r_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARUSER = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARUSER;
    end else begin
        input_im_r_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2))) begin
        input_im_r_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_ARVALID = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_ARVALID;
    end else begin
        input_im_r_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_im_r_RREADY = grp_dft_Pipeline_2_fu_170_m_axi_input_im_r_RREADY;
    end else begin
        input_im_r_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        input_im_r_blk_n_AR = m_axi_input_im_r_ARREADY;
    end else begin
        input_im_r_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2))) begin
        input_re_r_ARADDR = sext_ln31_fu_246_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARADDR = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARADDR;
    end else begin
        input_re_r_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARBURST = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARBURST;
    end else begin
        input_re_r_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARCACHE = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARCACHE;
    end else begin
        input_re_r_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARID = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARID;
    end else begin
        input_re_r_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2))) begin
        input_re_r_ARLEN = 32'd1024;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARLEN = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARLEN;
    end else begin
        input_re_r_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARLOCK = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARLOCK;
    end else begin
        input_re_r_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARPROT = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARPROT;
    end else begin
        input_re_r_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARQOS = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARQOS;
    end else begin
        input_re_r_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARREGION = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARREGION;
    end else begin
        input_re_r_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARSIZE = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARSIZE;
    end else begin
        input_re_r_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARUSER = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARUSER;
    end else begin
        input_re_r_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2))) begin
        input_re_r_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_ARVALID = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_ARVALID;
    end else begin
        input_re_r_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        input_re_r_RREADY = grp_dft_Pipeline_1_fu_162_m_axi_input_re_r_RREADY;
    end else begin
        input_re_r_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        input_re_r_blk_n_AR = m_axi_input_re_r_ARREADY;
    end else begin
        input_re_r_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_im_r_AWADDR = sext_ln57_fu_276_p1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWADDR = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWADDR;
    end else begin
        output_im_r_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWBURST = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWBURST;
    end else begin
        output_im_r_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWCACHE = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWCACHE;
    end else begin
        output_im_r_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWID = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWID;
    end else begin
        output_im_r_AWID = 1'd0;
    end
end

always @ (*) begin
    if ((~((grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_im_r_AWLEN = 32'd1024;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWLEN = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWLEN;
    end else begin
        output_im_r_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWLOCK = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWLOCK;
    end else begin
        output_im_r_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWPROT = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWPROT;
    end else begin
        output_im_r_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWQOS = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWQOS;
    end else begin
        output_im_r_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWREGION = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWREGION;
    end else begin
        output_im_r_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWSIZE = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWSIZE;
    end else begin
        output_im_r_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWUSER = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWUSER;
    end else begin
        output_im_r_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if ((~((grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_im_r_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_AWVALID = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_AWVALID;
    end else begin
        output_im_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((output_im_r_BVALID == 1'b0) | (output_re_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        output_im_r_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_BREADY = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_BREADY;
    end else begin
        output_im_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_im_r_WVALID = grp_dft_Pipeline_5_fu_198_m_axi_output_im_r_WVALID;
    end else begin
        output_im_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_im_r_blk_n_AW = m_axi_output_im_r_AWREADY;
    end else begin
        output_im_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        output_im_r_blk_n_B = m_axi_output_im_r_BVALID;
    end else begin
        output_im_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_re_r_AWADDR = sext_ln56_fu_266_p1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWADDR = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWADDR;
    end else begin
        output_re_r_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWBURST = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWBURST;
    end else begin
        output_re_r_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWCACHE = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWCACHE;
    end else begin
        output_re_r_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWID = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWID;
    end else begin
        output_re_r_AWID = 1'd0;
    end
end

always @ (*) begin
    if ((~((grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_re_r_AWLEN = 32'd1024;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWLEN = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWLEN;
    end else begin
        output_re_r_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWLOCK = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWLOCK;
    end else begin
        output_re_r_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWPROT = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWPROT;
    end else begin
        output_re_r_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWQOS = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWQOS;
    end else begin
        output_re_r_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWREGION = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWREGION;
    end else begin
        output_re_r_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWSIZE = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWSIZE;
    end else begin
        output_re_r_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWUSER = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWUSER;
    end else begin
        output_re_r_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if ((~((grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
        output_re_r_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_AWVALID = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_AWVALID;
    end else begin
        output_re_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((output_im_r_BVALID == 1'b0) | (output_re_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
        output_re_r_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_BREADY = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_BREADY;
    end else begin
        output_re_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        output_re_r_WVALID = grp_dft_Pipeline_4_fu_190_m_axi_output_re_r_WVALID;
    end else begin
        output_re_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        output_re_r_blk_n_AW = m_axi_output_re_r_AWREADY;
    end else begin
        output_re_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        output_re_r_blk_n_B = m_axi_output_re_r_BVALID;
    end else begin
        output_re_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        re_buff_address0 = grp_dft_Pipeline_4_fu_190_re_buff_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        re_buff_address0 = grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_address0;
    end else begin
        re_buff_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        re_buff_ce0 = grp_dft_Pipeline_4_fu_190_re_buff_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        re_buff_ce0 = grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_ce0;
    end else begin
        re_buff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        re_buff_we0 = grp_dft_Pipeline_loop_k_loop_n_fu_178_re_buff_we0;
    end else begin
        re_buff_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        re_sample_address0 = grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        re_sample_address0 = grp_dft_Pipeline_1_fu_162_re_sample_address0;
    end else begin
        re_sample_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        re_sample_ce0 = grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        re_sample_ce0 = grp_dft_Pipeline_1_fu_162_re_sample_ce0;
    end else begin
        re_sample_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        re_sample_ce1 = grp_dft_Pipeline_loop_k_loop_n_fu_178_re_sample_ce1;
    end else begin
        re_sample_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        re_sample_we0 = grp_dft_Pipeline_1_fu_162_re_sample_we0;
    end else begin
        re_sample_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if ((~((grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_done == 1'b0) | (1'b1 == ap_block_state12_io)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if ((~((output_im_r_BVALID == 1'b0) | (output_re_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state11 = ap_NS_fsm[32'd10];

always @ (*) begin
    ap_block_state10_on_subcall_done = ((grp_dft_Pipeline_2_fu_170_ap_done == 1'b0) | (grp_dft_Pipeline_1_fu_162_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state12_io = ((output_im_r_AWREADY == 1'b0) | (output_re_r_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_dft_Pipeline_5_fu_198_ap_done == 1'b0) | (grp_dft_Pipeline_4_fu_190_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state19 = ((output_im_r_BVALID == 1'b0) | (output_re_r_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state2_io = ((input_im_r_ARREADY == 1'b0) | (input_re_r_ARREADY == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_dft_Pipeline_1_fu_162_ap_start = grp_dft_Pipeline_1_fu_162_ap_start_reg;

assign grp_dft_Pipeline_2_fu_170_ap_start = grp_dft_Pipeline_2_fu_170_ap_start_reg;

assign grp_dft_Pipeline_4_fu_190_ap_start = grp_dft_Pipeline_4_fu_190_ap_start_reg;

assign grp_dft_Pipeline_5_fu_198_ap_start = grp_dft_Pipeline_5_fu_198_ap_start_reg;

assign grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_start = grp_dft_Pipeline_loop_k_loop_n_fu_178_ap_start_reg;

assign sext_ln31_fu_246_p1 = $signed(trunc_ln_reg_286);

assign sext_ln32_fu_256_p1 = $signed(trunc_ln1_reg_292);

assign sext_ln56_fu_266_p1 = $signed(trunc_ln2_reg_298);

assign sext_ln57_fu_276_p1 = $signed(trunc_ln4_reg_304);

endmodule //dft
