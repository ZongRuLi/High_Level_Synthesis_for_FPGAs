#-----------------------------------------------------------
# Vivado v2020.2 (64-bit)
# SW Build 3064766 on Wed Nov 18 09:12:45 MST 2020
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
# Start of session at: Tue Sep 21 18:23:35 2021
# Process ID: 28592
# Current directory: C:/Xilinx/DFT_v
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent52704 C:\Xilinx\DFT_v\DFT_v.xpr
# Log file: C:/Xilinx/DFT_v/vivado.log
# Journal file: C:/Xilinx/DFT_v\vivado.jou
#-----------------------------------------------------------
start_gui
open_project C:/Xilinx/DFT_v/DFT_v.xpr
update_compile_order -fileset sources_1
open_bd_design {C:/Xilinx/DFT_v/DFT_v.srcs/sources_1/bd/design_1/design_1.bd}
validate_bd_design -force
close_bd_design [get_bd_designs design_1]
close_project
open_project C:/Xilinx/project_1/project_1.xpr
open_bd_design {C:/Xilinx/project_1/project_1.srcs/sources_1/bd/design_1/design_1.bd}
update_compile_order -fileset sources_1
close_bd_design [get_bd_designs design_1]
close_project
open_project C:/Xilinx/project_3/project_3.xpr
open_bd_design {C:/Xilinx/project_3/project_3.srcs/sources_1/bd/design_1/design_1.bd}
update_compile_order -fileset sources_1
close_project
open_project C:/Xilinx/project_2/project_2.xpr
open_bd_design {C:/Xilinx/project_2/project_2.srcs/sources_1/bd/design_1/design_1.bd}
update_compile_order -fileset sources_1
close_project
open_project C:/Xilinx/DFT_v/DFT_v.xpr
open_bd_design {C:/Xilinx/DFT_v/DFT_v.srcs/sources_1/bd/design_1/design_1.bd}
update_compile_order -fileset sources_1
delete_bd_objs [get_bd_intf_nets ps7_0_axi_periph_M02_AXI] [get_bd_intf_nets dma_re_M_AXI_MM2S] [get_bd_intf_nets dma_re_M_AXI_S2MM] [get_bd_intf_nets dma_re_M_AXIS_MM2S] [get_bd_intf_nets dft_0_real_op] [get_bd_cells dma_re]
delete_bd_objs [get_bd_intf_nets ps7_0_axi_periph_M01_AXI] [get_bd_intf_nets dma_im_M_AXI_MM2S] [get_bd_intf_nets dma_im_M_AXI_S2MM] [get_bd_intf_nets dma_im_M_AXIS_MM2S] [get_bd_intf_nets dft_0_imag_op] [get_bd_cells dma_im]
delete_bd_objs [get_bd_nets processing_system7_0_FCLK_RESET0_N] [get_bd_intf_nets processing_system7_0_FIXED_IO] [get_bd_intf_nets processing_system7_0_M_AXI_GP0] [get_bd_intf_nets processing_system7_0_DDR] [get_bd_intf_nets axi_mem_intercon_M00_AXI] [get_bd_intf_nets axi_mem_intercon_1_M00_AXI] [get_bd_intf_nets axi_mem_intercon_2_M00_AXI] [get_bd_intf_nets axi_mem_intercon_3_M00_AXI] [get_bd_cells processing_system7_0]
delete_bd_objs [get_bd_cells rst_ps7_0_100M]
delete_bd_objs [get_bd_intf_nets ps7_0_axi_periph_M00_AXI] [get_bd_cells ps7_0_axi_periph]
delete_bd_objs [get_bd_cells axi_mem_intercon]
delete_bd_objs [get_bd_cells axi_mem_intercon_2]
delete_bd_objs [get_bd_cells axi_mem_intercon_1]
delete_bd_objs [get_bd_nets processing_system7_0_FCLK_CLK0] [get_bd_nets rst_ps7_0_100M_peripheral_aresetn] [get_bd_cells axi_mem_intercon_3]
delete_bd_objs [get_bd_intf_ports DDR]
delete_bd_objs [get_bd_intf_ports FIXED_IO]
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 processing_system7_0
endgroup
set_property location {2.5 1361 -260} [get_bd_cells processing_system7_0]
save_bd_design
apply_bd_automation -rule xilinx.com:bd_rule:processing_system7 -config {make_external "FIXED_IO, DDR" apply_board_preset "1" Master "Disable" Slave "Disable" }  [get_bd_cells processing_system7_0]
startgroup
set_property -dict [list CONFIG.PCW_USE_S_AXI_HP0 {1} CONFIG.PCW_USE_S_AXI_HP1 {1}] [get_bd_cells processing_system7_0]
endgroup
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_0
endgroup
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_1
endgroup
set_property name dma_re [get_bd_cells axi_dma_0]
set_property name dma_im [get_bd_cells axi_dma_1]
set_property -dict [list CONFIG.c_include_sg {0} CONFIG.c_sg_length_width {23} CONFIG.c_sg_include_stscntrl_strm {0}] [get_bd_cells dma_re]
set_property -dict [list CONFIG.c_include_sg {0} CONFIG.c_sg_length_width {23} CONFIG.c_sg_include_stscntrl_strm {0}] [get_bd_cells dma_im]
connect_bd_intf_net [get_bd_intf_pins dft_0/real_op] [get_bd_intf_pins dma_re/S_AXIS_S2MM]
connect_bd_intf_net [get_bd_intf_pins dft_0/real_sample] [get_bd_intf_pins dma_re/M_AXIS_MM2S]
connect_bd_intf_net [get_bd_intf_pins dft_0/imag_op] [get_bd_intf_pins dma_im/S_AXIS_S2MM]
connect_bd_intf_net [get_bd_intf_pins dft_0/imag_sample] [get_bd_intf_pins dma_im/M_AXIS_MM2S]
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/processing_system7_0/M_AXI_GP0} Slave {/dft_0/s_axi_CTRL} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins dft_0/s_axi_CTRL]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/processing_system7_0/M_AXI_GP0} Slave {/dma_im/S_AXI_LITE} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins dma_im/S_AXI_LITE]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/processing_system7_0/M_AXI_GP0} Slave {/dma_re/S_AXI_LITE} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins dma_re/S_AXI_LITE]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/dma_re/M_AXI_MM2S} Slave {/processing_system7_0/S_AXI_HP0} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins processing_system7_0/S_AXI_HP0]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/dma_re/M_AXI_MM2S} Slave {/processing_system7_0/S_AXI_HP1} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins processing_system7_0/S_AXI_HP1]
endgroup
undo
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/processing_system7_0/M_AXI_GP0} Slave {/dft_0/s_axi_CTRL} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins dft_0/s_axi_CTRL]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/processing_system7_0/M_AXI_GP0} Slave {/dma_im/S_AXI_LITE} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins dma_im/S_AXI_LITE]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/processing_system7_0/M_AXI_GP0} Slave {/dma_re/S_AXI_LITE} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins dma_re/S_AXI_LITE]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/dma_re/M_AXI_MM2S} Slave {/processing_system7_0/S_AXI_HP0} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins processing_system7_0/S_AXI_HP0]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/dma_im/M_AXI_MM2S} Slave {/processing_system7_0/S_AXI_HP1} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins processing_system7_0/S_AXI_HP1]
endgroup
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/dma_im/M_AXI_S2MM} Slave {/processing_system7_0/S_AXI_HP0} ddr_seg {Auto} intc_ip {/axi_mem_intercon} master_apm {0}}  [get_bd_intf_pins dma_im/M_AXI_S2MM]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/dma_re/M_AXI_S2MM} Slave {/processing_system7_0/S_AXI_HP0} ddr_seg {Auto} intc_ip {/axi_mem_intercon} master_apm {0}}  [get_bd_intf_pins dma_re/M_AXI_S2MM]
endgroup
undo
undo
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/processing_system7_0/M_AXI_GP0} Slave {/dft_0/s_axi_CTRL} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins dft_0/s_axi_CTRL]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/processing_system7_0/M_AXI_GP0} Slave {/dma_im/S_AXI_LITE} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins dma_im/S_AXI_LITE]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/processing_system7_0/M_AXI_GP0} Slave {/dma_re/S_AXI_LITE} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins dma_re/S_AXI_LITE]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/dma_re/M_AXI_MM2S} Slave {/processing_system7_0/S_AXI_HP0} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins processing_system7_0/S_AXI_HP0]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {Auto} Clk_xbar {Auto} Master {/dma_im/M_AXI_MM2S} Slave {/processing_system7_0/S_AXI_HP1} ddr_seg {Auto} intc_ip {New AXI Interconnect} master_apm {0}}  [get_bd_intf_pins processing_system7_0/S_AXI_HP1]
endgroup
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/dma_im/M_AXI_S2MM} Slave {/processing_system7_0/S_AXI_HP0} ddr_seg {Auto} intc_ip {/axi_mem_intercon} master_apm {0}}  [get_bd_intf_pins dma_im/M_AXI_S2MM]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/dma_re/M_AXI_S2MM} Slave {/processing_system7_0/S_AXI_HP0} ddr_seg {Auto} intc_ip {/axi_mem_intercon} master_apm {0}}  [get_bd_intf_pins dma_re/M_AXI_S2MM]
endgroup
validate_bd_design
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 12
wait_on_run impl_1
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
set_property  ip_repo_paths  {} [current_project]
update_ip_catalog
set_property  ip_repo_paths  C:/Xilinx/DFT/dft_32_precomputed [current_project]
update_ip_catalog
open_bd_design {C:/Xilinx/DFT_v/DFT_v.srcs/sources_1/bd/design_1/design_1.bd}
delete_bd_objs [get_bd_intf_nets dft_0_real_op] [get_bd_intf_nets ps7_0_axi_periph_M00_AXI] [get_bd_intf_nets dma_re_M_AXIS_MM2S] [get_bd_intf_nets dma_im_M_AXIS_MM2S] [get_bd_intf_nets dft_0_imag_op] [get_bd_cells dft_0]
startgroup
create_bd_cell -type ip -vlnv xilinx.com:hls:dft:1.0 dft_0
endgroup
report_ip_status -name ip_status 
connect_bd_intf_net [get_bd_intf_pins dft_0/real_op] [get_bd_intf_pins dma_re/S_AXIS_S2MM]
set_property location {1.5 184 -193} [get_bd_cells dft_0]
undo
connect_bd_intf_net [get_bd_intf_pins dft_0/imag_op] [get_bd_intf_pins dma_im/S_AXIS_S2MM]
connect_bd_intf_net [get_bd_intf_pins dft_0/imag_sample] [get_bd_intf_pins dma_im/M_AXIS_MM2S]
connect_bd_intf_net [get_bd_intf_pins dft_0/real_sample] [get_bd_intf_pins dma_re/M_AXIS_MM2S]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_slave {Auto} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/processing_system7_0/M_AXI_GP0} Slave {/dft_0/s_axi_CTRL} ddr_seg {Auto} intc_ip {/ps7_0_axi_periph} master_apm {0}}  [get_bd_intf_pins dft_0/s_axi_CTRL]
validate_bd_design
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 12
wait_on_run impl_1
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
upgrade_ip -vlnv xilinx.com:hls:dft:1.0 [get_ips  design_1_dft_0_2] -log ip_upgrade.log
export_ip_user_files -of_objects [get_ips design_1_dft_0_2] -no_script -sync -force -quiet
generate_target all [get_files  C:/Xilinx/DFT_v/DFT_v.srcs/sources_1/bd/design_1/design_1.bd]
catch { config_ip_cache -export [get_ips -all design_1_dft_0_2] }
catch { config_ip_cache -export [get_ips -all design_1_auto_pc_0] }
catch { config_ip_cache -export [get_ips -all design_1_auto_us_0] }
catch { config_ip_cache -export [get_ips -all design_1_auto_us_1] }
catch { config_ip_cache -export [get_ips -all design_1_auto_us_2] }
catch { config_ip_cache -export [get_ips -all design_1_auto_pc_1] }
catch { config_ip_cache -export [get_ips -all design_1_auto_pc_2] }
catch { config_ip_cache -export [get_ips -all design_1_auto_us_3] }
export_ip_user_files -of_objects [get_files C:/Xilinx/DFT_v/DFT_v.srcs/sources_1/bd/design_1/design_1.bd] -no_script -sync -force -quiet
create_ip_run [get_files -of_objects [get_fileset sources_1] C:/Xilinx/DFT_v/DFT_v.srcs/sources_1/bd/design_1/design_1.bd]
launch_runs design_1_dft_0_2_synth_1 -jobs 12
wait_on_run design_1_dft_0_2_synth_1
export_simulation -of_objects [get_files C:/Xilinx/DFT_v/DFT_v.srcs/sources_1/bd/design_1/design_1.bd] -directory C:/Xilinx/DFT_v/DFT_v.ip_user_files/sim_scripts -ip_user_files_dir C:/Xilinx/DFT_v/DFT_v.ip_user_files -ipstatic_source_dir C:/Xilinx/DFT_v/DFT_v.ip_user_files/ipstatic -lib_map_path [list {modelsim=C:/Xilinx/DFT_v/DFT_v.cache/compile_simlib/modelsim} {questa=C:/Xilinx/DFT_v/DFT_v.cache/compile_simlib/questa} {riviera=C:/Xilinx/DFT_v/DFT_v.cache/compile_simlib/riviera} {activehdl=C:/Xilinx/DFT_v/DFT_v.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
report_ip_status -name ip_status 
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 12
wait_on_run impl_1
