// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dft_dft_Pipeline_loop_n (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        real_op_TREADY,
        imag_op_TREADY,
        tmp_1,
        tmp,
        trunc_ln1,
        re_sample_0_address0,
        re_sample_0_ce0,
        re_sample_0_q0,
        re_sample_1_address0,
        re_sample_1_ce0,
        re_sample_1_q0,
        re_sample_2_address0,
        re_sample_2_ce0,
        re_sample_2_q0,
        re_sample_3_address0,
        re_sample_3_ce0,
        re_sample_3_q0,
        re_sample_4_address0,
        re_sample_4_ce0,
        re_sample_4_q0,
        re_sample_5_address0,
        re_sample_5_ce0,
        re_sample_5_q0,
        re_sample_6_address0,
        re_sample_6_ce0,
        re_sample_6_q0,
        re_sample_7_address0,
        re_sample_7_ce0,
        re_sample_7_q0,
        re_sample_8_address0,
        re_sample_8_ce0,
        re_sample_8_q0,
        re_sample_9_address0,
        re_sample_9_ce0,
        re_sample_9_q0,
        re_sample_10_address0,
        re_sample_10_ce0,
        re_sample_10_q0,
        re_sample_11_address0,
        re_sample_11_ce0,
        re_sample_11_q0,
        re_sample_12_address0,
        re_sample_12_ce0,
        re_sample_12_q0,
        re_sample_13_address0,
        re_sample_13_ce0,
        re_sample_13_q0,
        re_sample_14_address0,
        re_sample_14_ce0,
        re_sample_14_q0,
        re_sample_15_address0,
        re_sample_15_ce0,
        re_sample_15_q0,
        re_sample_16_address0,
        re_sample_16_ce0,
        re_sample_16_q0,
        re_sample_17_address0,
        re_sample_17_ce0,
        re_sample_17_q0,
        re_sample_18_address0,
        re_sample_18_ce0,
        re_sample_18_q0,
        re_sample_19_address0,
        re_sample_19_ce0,
        re_sample_19_q0,
        re_sample_20_address0,
        re_sample_20_ce0,
        re_sample_20_q0,
        re_sample_21_address0,
        re_sample_21_ce0,
        re_sample_21_q0,
        re_sample_22_address0,
        re_sample_22_ce0,
        re_sample_22_q0,
        re_sample_23_address0,
        re_sample_23_ce0,
        re_sample_23_q0,
        re_sample_24_address0,
        re_sample_24_ce0,
        re_sample_24_q0,
        re_sample_25_address0,
        re_sample_25_ce0,
        re_sample_25_q0,
        re_sample_26_address0,
        re_sample_26_ce0,
        re_sample_26_q0,
        re_sample_27_address0,
        re_sample_27_ce0,
        re_sample_27_q0,
        re_sample_28_address0,
        re_sample_28_ce0,
        re_sample_28_q0,
        re_sample_29_address0,
        re_sample_29_ce0,
        re_sample_29_q0,
        re_sample_30_address0,
        re_sample_30_ce0,
        re_sample_30_q0,
        re_sample_31_address0,
        re_sample_31_ce0,
        re_sample_31_q0,
        re_sample_32_address0,
        re_sample_32_ce0,
        re_sample_32_q0,
        re_sample_33_address0,
        re_sample_33_ce0,
        re_sample_33_q0,
        re_sample_34_address0,
        re_sample_34_ce0,
        re_sample_34_q0,
        re_sample_35_address0,
        re_sample_35_ce0,
        re_sample_35_q0,
        re_sample_36_address0,
        re_sample_36_ce0,
        re_sample_36_q0,
        re_sample_37_address0,
        re_sample_37_ce0,
        re_sample_37_q0,
        re_sample_38_address0,
        re_sample_38_ce0,
        re_sample_38_q0,
        re_sample_39_address0,
        re_sample_39_ce0,
        re_sample_39_q0,
        re_sample_40_address0,
        re_sample_40_ce0,
        re_sample_40_q0,
        re_sample_41_address0,
        re_sample_41_ce0,
        re_sample_41_q0,
        re_sample_42_address0,
        re_sample_42_ce0,
        re_sample_42_q0,
        re_sample_43_address0,
        re_sample_43_ce0,
        re_sample_43_q0,
        re_sample_44_address0,
        re_sample_44_ce0,
        re_sample_44_q0,
        re_sample_45_address0,
        re_sample_45_ce0,
        re_sample_45_q0,
        re_sample_46_address0,
        re_sample_46_ce0,
        re_sample_46_q0,
        re_sample_47_address0,
        re_sample_47_ce0,
        re_sample_47_q0,
        re_sample_48_address0,
        re_sample_48_ce0,
        re_sample_48_q0,
        re_sample_49_address0,
        re_sample_49_ce0,
        re_sample_49_q0,
        re_sample_50_address0,
        re_sample_50_ce0,
        re_sample_50_q0,
        re_sample_51_address0,
        re_sample_51_ce0,
        re_sample_51_q0,
        re_sample_52_address0,
        re_sample_52_ce0,
        re_sample_52_q0,
        re_sample_53_address0,
        re_sample_53_ce0,
        re_sample_53_q0,
        re_sample_54_address0,
        re_sample_54_ce0,
        re_sample_54_q0,
        re_sample_55_address0,
        re_sample_55_ce0,
        re_sample_55_q0,
        re_sample_56_address0,
        re_sample_56_ce0,
        re_sample_56_q0,
        re_sample_57_address0,
        re_sample_57_ce0,
        re_sample_57_q0,
        re_sample_58_address0,
        re_sample_58_ce0,
        re_sample_58_q0,
        re_sample_59_address0,
        re_sample_59_ce0,
        re_sample_59_q0,
        re_sample_60_address0,
        re_sample_60_ce0,
        re_sample_60_q0,
        re_sample_61_address0,
        re_sample_61_ce0,
        re_sample_61_q0,
        re_sample_62_address0,
        re_sample_62_ce0,
        re_sample_62_q0,
        re_sample_63_address0,
        re_sample_63_ce0,
        re_sample_63_q0,
        im_sample_0_address0,
        im_sample_0_ce0,
        im_sample_0_q0,
        im_sample_1_address0,
        im_sample_1_ce0,
        im_sample_1_q0,
        im_sample_2_address0,
        im_sample_2_ce0,
        im_sample_2_q0,
        im_sample_3_address0,
        im_sample_3_ce0,
        im_sample_3_q0,
        im_sample_4_address0,
        im_sample_4_ce0,
        im_sample_4_q0,
        im_sample_5_address0,
        im_sample_5_ce0,
        im_sample_5_q0,
        im_sample_6_address0,
        im_sample_6_ce0,
        im_sample_6_q0,
        im_sample_7_address0,
        im_sample_7_ce0,
        im_sample_7_q0,
        im_sample_8_address0,
        im_sample_8_ce0,
        im_sample_8_q0,
        im_sample_9_address0,
        im_sample_9_ce0,
        im_sample_9_q0,
        im_sample_10_address0,
        im_sample_10_ce0,
        im_sample_10_q0,
        im_sample_11_address0,
        im_sample_11_ce0,
        im_sample_11_q0,
        im_sample_12_address0,
        im_sample_12_ce0,
        im_sample_12_q0,
        im_sample_13_address0,
        im_sample_13_ce0,
        im_sample_13_q0,
        im_sample_14_address0,
        im_sample_14_ce0,
        im_sample_14_q0,
        im_sample_15_address0,
        im_sample_15_ce0,
        im_sample_15_q0,
        im_sample_16_address0,
        im_sample_16_ce0,
        im_sample_16_q0,
        im_sample_17_address0,
        im_sample_17_ce0,
        im_sample_17_q0,
        im_sample_18_address0,
        im_sample_18_ce0,
        im_sample_18_q0,
        im_sample_19_address0,
        im_sample_19_ce0,
        im_sample_19_q0,
        im_sample_20_address0,
        im_sample_20_ce0,
        im_sample_20_q0,
        im_sample_21_address0,
        im_sample_21_ce0,
        im_sample_21_q0,
        im_sample_22_address0,
        im_sample_22_ce0,
        im_sample_22_q0,
        im_sample_23_address0,
        im_sample_23_ce0,
        im_sample_23_q0,
        im_sample_24_address0,
        im_sample_24_ce0,
        im_sample_24_q0,
        im_sample_25_address0,
        im_sample_25_ce0,
        im_sample_25_q0,
        im_sample_26_address0,
        im_sample_26_ce0,
        im_sample_26_q0,
        im_sample_27_address0,
        im_sample_27_ce0,
        im_sample_27_q0,
        im_sample_28_address0,
        im_sample_28_ce0,
        im_sample_28_q0,
        im_sample_29_address0,
        im_sample_29_ce0,
        im_sample_29_q0,
        im_sample_30_address0,
        im_sample_30_ce0,
        im_sample_30_q0,
        im_sample_31_address0,
        im_sample_31_ce0,
        im_sample_31_q0,
        im_sample_32_address0,
        im_sample_32_ce0,
        im_sample_32_q0,
        im_sample_33_address0,
        im_sample_33_ce0,
        im_sample_33_q0,
        im_sample_34_address0,
        im_sample_34_ce0,
        im_sample_34_q0,
        im_sample_35_address0,
        im_sample_35_ce0,
        im_sample_35_q0,
        im_sample_36_address0,
        im_sample_36_ce0,
        im_sample_36_q0,
        im_sample_37_address0,
        im_sample_37_ce0,
        im_sample_37_q0,
        im_sample_38_address0,
        im_sample_38_ce0,
        im_sample_38_q0,
        im_sample_39_address0,
        im_sample_39_ce0,
        im_sample_39_q0,
        im_sample_40_address0,
        im_sample_40_ce0,
        im_sample_40_q0,
        im_sample_41_address0,
        im_sample_41_ce0,
        im_sample_41_q0,
        im_sample_42_address0,
        im_sample_42_ce0,
        im_sample_42_q0,
        im_sample_43_address0,
        im_sample_43_ce0,
        im_sample_43_q0,
        im_sample_44_address0,
        im_sample_44_ce0,
        im_sample_44_q0,
        im_sample_45_address0,
        im_sample_45_ce0,
        im_sample_45_q0,
        im_sample_46_address0,
        im_sample_46_ce0,
        im_sample_46_q0,
        im_sample_47_address0,
        im_sample_47_ce0,
        im_sample_47_q0,
        im_sample_48_address0,
        im_sample_48_ce0,
        im_sample_48_q0,
        im_sample_49_address0,
        im_sample_49_ce0,
        im_sample_49_q0,
        im_sample_50_address0,
        im_sample_50_ce0,
        im_sample_50_q0,
        im_sample_51_address0,
        im_sample_51_ce0,
        im_sample_51_q0,
        im_sample_52_address0,
        im_sample_52_ce0,
        im_sample_52_q0,
        im_sample_53_address0,
        im_sample_53_ce0,
        im_sample_53_q0,
        im_sample_54_address0,
        im_sample_54_ce0,
        im_sample_54_q0,
        im_sample_55_address0,
        im_sample_55_ce0,
        im_sample_55_q0,
        im_sample_56_address0,
        im_sample_56_ce0,
        im_sample_56_q0,
        im_sample_57_address0,
        im_sample_57_ce0,
        im_sample_57_q0,
        im_sample_58_address0,
        im_sample_58_ce0,
        im_sample_58_q0,
        im_sample_59_address0,
        im_sample_59_ce0,
        im_sample_59_q0,
        im_sample_60_address0,
        im_sample_60_ce0,
        im_sample_60_q0,
        im_sample_61_address0,
        im_sample_61_ce0,
        im_sample_61_q0,
        im_sample_62_address0,
        im_sample_62_ce0,
        im_sample_62_q0,
        im_sample_63_address0,
        im_sample_63_ce0,
        im_sample_63_q0,
        real_op_TDATA,
        real_op_TVALID,
        real_op_TKEEP,
        real_op_TSTRB,
        real_op_TLAST,
        imag_op_TDATA,
        imag_op_TVALID,
        imag_op_TKEEP,
        imag_op_TSTRB,
        imag_op_TLAST,
        p_out,
        p_out_ap_vld,
        p_out1,
        p_out1_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   real_op_TREADY;
input   imag_op_TREADY;
input  [31:0] tmp_1;
input  [31:0] tmp;
input  [9:0] trunc_ln1;
output  [3:0] re_sample_0_address0;
output   re_sample_0_ce0;
input  [31:0] re_sample_0_q0;
output  [3:0] re_sample_1_address0;
output   re_sample_1_ce0;
input  [31:0] re_sample_1_q0;
output  [3:0] re_sample_2_address0;
output   re_sample_2_ce0;
input  [31:0] re_sample_2_q0;
output  [3:0] re_sample_3_address0;
output   re_sample_3_ce0;
input  [31:0] re_sample_3_q0;
output  [3:0] re_sample_4_address0;
output   re_sample_4_ce0;
input  [31:0] re_sample_4_q0;
output  [3:0] re_sample_5_address0;
output   re_sample_5_ce0;
input  [31:0] re_sample_5_q0;
output  [3:0] re_sample_6_address0;
output   re_sample_6_ce0;
input  [31:0] re_sample_6_q0;
output  [3:0] re_sample_7_address0;
output   re_sample_7_ce0;
input  [31:0] re_sample_7_q0;
output  [3:0] re_sample_8_address0;
output   re_sample_8_ce0;
input  [31:0] re_sample_8_q0;
output  [3:0] re_sample_9_address0;
output   re_sample_9_ce0;
input  [31:0] re_sample_9_q0;
output  [3:0] re_sample_10_address0;
output   re_sample_10_ce0;
input  [31:0] re_sample_10_q0;
output  [3:0] re_sample_11_address0;
output   re_sample_11_ce0;
input  [31:0] re_sample_11_q0;
output  [3:0] re_sample_12_address0;
output   re_sample_12_ce0;
input  [31:0] re_sample_12_q0;
output  [3:0] re_sample_13_address0;
output   re_sample_13_ce0;
input  [31:0] re_sample_13_q0;
output  [3:0] re_sample_14_address0;
output   re_sample_14_ce0;
input  [31:0] re_sample_14_q0;
output  [3:0] re_sample_15_address0;
output   re_sample_15_ce0;
input  [31:0] re_sample_15_q0;
output  [3:0] re_sample_16_address0;
output   re_sample_16_ce0;
input  [31:0] re_sample_16_q0;
output  [3:0] re_sample_17_address0;
output   re_sample_17_ce0;
input  [31:0] re_sample_17_q0;
output  [3:0] re_sample_18_address0;
output   re_sample_18_ce0;
input  [31:0] re_sample_18_q0;
output  [3:0] re_sample_19_address0;
output   re_sample_19_ce0;
input  [31:0] re_sample_19_q0;
output  [3:0] re_sample_20_address0;
output   re_sample_20_ce0;
input  [31:0] re_sample_20_q0;
output  [3:0] re_sample_21_address0;
output   re_sample_21_ce0;
input  [31:0] re_sample_21_q0;
output  [3:0] re_sample_22_address0;
output   re_sample_22_ce0;
input  [31:0] re_sample_22_q0;
output  [3:0] re_sample_23_address0;
output   re_sample_23_ce0;
input  [31:0] re_sample_23_q0;
output  [3:0] re_sample_24_address0;
output   re_sample_24_ce0;
input  [31:0] re_sample_24_q0;
output  [3:0] re_sample_25_address0;
output   re_sample_25_ce0;
input  [31:0] re_sample_25_q0;
output  [3:0] re_sample_26_address0;
output   re_sample_26_ce0;
input  [31:0] re_sample_26_q0;
output  [3:0] re_sample_27_address0;
output   re_sample_27_ce0;
input  [31:0] re_sample_27_q0;
output  [3:0] re_sample_28_address0;
output   re_sample_28_ce0;
input  [31:0] re_sample_28_q0;
output  [3:0] re_sample_29_address0;
output   re_sample_29_ce0;
input  [31:0] re_sample_29_q0;
output  [3:0] re_sample_30_address0;
output   re_sample_30_ce0;
input  [31:0] re_sample_30_q0;
output  [3:0] re_sample_31_address0;
output   re_sample_31_ce0;
input  [31:0] re_sample_31_q0;
output  [3:0] re_sample_32_address0;
output   re_sample_32_ce0;
input  [31:0] re_sample_32_q0;
output  [3:0] re_sample_33_address0;
output   re_sample_33_ce0;
input  [31:0] re_sample_33_q0;
output  [3:0] re_sample_34_address0;
output   re_sample_34_ce0;
input  [31:0] re_sample_34_q0;
output  [3:0] re_sample_35_address0;
output   re_sample_35_ce0;
input  [31:0] re_sample_35_q0;
output  [3:0] re_sample_36_address0;
output   re_sample_36_ce0;
input  [31:0] re_sample_36_q0;
output  [3:0] re_sample_37_address0;
output   re_sample_37_ce0;
input  [31:0] re_sample_37_q0;
output  [3:0] re_sample_38_address0;
output   re_sample_38_ce0;
input  [31:0] re_sample_38_q0;
output  [3:0] re_sample_39_address0;
output   re_sample_39_ce0;
input  [31:0] re_sample_39_q0;
output  [3:0] re_sample_40_address0;
output   re_sample_40_ce0;
input  [31:0] re_sample_40_q0;
output  [3:0] re_sample_41_address0;
output   re_sample_41_ce0;
input  [31:0] re_sample_41_q0;
output  [3:0] re_sample_42_address0;
output   re_sample_42_ce0;
input  [31:0] re_sample_42_q0;
output  [3:0] re_sample_43_address0;
output   re_sample_43_ce0;
input  [31:0] re_sample_43_q0;
output  [3:0] re_sample_44_address0;
output   re_sample_44_ce0;
input  [31:0] re_sample_44_q0;
output  [3:0] re_sample_45_address0;
output   re_sample_45_ce0;
input  [31:0] re_sample_45_q0;
output  [3:0] re_sample_46_address0;
output   re_sample_46_ce0;
input  [31:0] re_sample_46_q0;
output  [3:0] re_sample_47_address0;
output   re_sample_47_ce0;
input  [31:0] re_sample_47_q0;
output  [3:0] re_sample_48_address0;
output   re_sample_48_ce0;
input  [31:0] re_sample_48_q0;
output  [3:0] re_sample_49_address0;
output   re_sample_49_ce0;
input  [31:0] re_sample_49_q0;
output  [3:0] re_sample_50_address0;
output   re_sample_50_ce0;
input  [31:0] re_sample_50_q0;
output  [3:0] re_sample_51_address0;
output   re_sample_51_ce0;
input  [31:0] re_sample_51_q0;
output  [3:0] re_sample_52_address0;
output   re_sample_52_ce0;
input  [31:0] re_sample_52_q0;
output  [3:0] re_sample_53_address0;
output   re_sample_53_ce0;
input  [31:0] re_sample_53_q0;
output  [3:0] re_sample_54_address0;
output   re_sample_54_ce0;
input  [31:0] re_sample_54_q0;
output  [3:0] re_sample_55_address0;
output   re_sample_55_ce0;
input  [31:0] re_sample_55_q0;
output  [3:0] re_sample_56_address0;
output   re_sample_56_ce0;
input  [31:0] re_sample_56_q0;
output  [3:0] re_sample_57_address0;
output   re_sample_57_ce0;
input  [31:0] re_sample_57_q0;
output  [3:0] re_sample_58_address0;
output   re_sample_58_ce0;
input  [31:0] re_sample_58_q0;
output  [3:0] re_sample_59_address0;
output   re_sample_59_ce0;
input  [31:0] re_sample_59_q0;
output  [3:0] re_sample_60_address0;
output   re_sample_60_ce0;
input  [31:0] re_sample_60_q0;
output  [3:0] re_sample_61_address0;
output   re_sample_61_ce0;
input  [31:0] re_sample_61_q0;
output  [3:0] re_sample_62_address0;
output   re_sample_62_ce0;
input  [31:0] re_sample_62_q0;
output  [3:0] re_sample_63_address0;
output   re_sample_63_ce0;
input  [31:0] re_sample_63_q0;
output  [3:0] im_sample_0_address0;
output   im_sample_0_ce0;
input  [31:0] im_sample_0_q0;
output  [3:0] im_sample_1_address0;
output   im_sample_1_ce0;
input  [31:0] im_sample_1_q0;
output  [3:0] im_sample_2_address0;
output   im_sample_2_ce0;
input  [31:0] im_sample_2_q0;
output  [3:0] im_sample_3_address0;
output   im_sample_3_ce0;
input  [31:0] im_sample_3_q0;
output  [3:0] im_sample_4_address0;
output   im_sample_4_ce0;
input  [31:0] im_sample_4_q0;
output  [3:0] im_sample_5_address0;
output   im_sample_5_ce0;
input  [31:0] im_sample_5_q0;
output  [3:0] im_sample_6_address0;
output   im_sample_6_ce0;
input  [31:0] im_sample_6_q0;
output  [3:0] im_sample_7_address0;
output   im_sample_7_ce0;
input  [31:0] im_sample_7_q0;
output  [3:0] im_sample_8_address0;
output   im_sample_8_ce0;
input  [31:0] im_sample_8_q0;
output  [3:0] im_sample_9_address0;
output   im_sample_9_ce0;
input  [31:0] im_sample_9_q0;
output  [3:0] im_sample_10_address0;
output   im_sample_10_ce0;
input  [31:0] im_sample_10_q0;
output  [3:0] im_sample_11_address0;
output   im_sample_11_ce0;
input  [31:0] im_sample_11_q0;
output  [3:0] im_sample_12_address0;
output   im_sample_12_ce0;
input  [31:0] im_sample_12_q0;
output  [3:0] im_sample_13_address0;
output   im_sample_13_ce0;
input  [31:0] im_sample_13_q0;
output  [3:0] im_sample_14_address0;
output   im_sample_14_ce0;
input  [31:0] im_sample_14_q0;
output  [3:0] im_sample_15_address0;
output   im_sample_15_ce0;
input  [31:0] im_sample_15_q0;
output  [3:0] im_sample_16_address0;
output   im_sample_16_ce0;
input  [31:0] im_sample_16_q0;
output  [3:0] im_sample_17_address0;
output   im_sample_17_ce0;
input  [31:0] im_sample_17_q0;
output  [3:0] im_sample_18_address0;
output   im_sample_18_ce0;
input  [31:0] im_sample_18_q0;
output  [3:0] im_sample_19_address0;
output   im_sample_19_ce0;
input  [31:0] im_sample_19_q0;
output  [3:0] im_sample_20_address0;
output   im_sample_20_ce0;
input  [31:0] im_sample_20_q0;
output  [3:0] im_sample_21_address0;
output   im_sample_21_ce0;
input  [31:0] im_sample_21_q0;
output  [3:0] im_sample_22_address0;
output   im_sample_22_ce0;
input  [31:0] im_sample_22_q0;
output  [3:0] im_sample_23_address0;
output   im_sample_23_ce0;
input  [31:0] im_sample_23_q0;
output  [3:0] im_sample_24_address0;
output   im_sample_24_ce0;
input  [31:0] im_sample_24_q0;
output  [3:0] im_sample_25_address0;
output   im_sample_25_ce0;
input  [31:0] im_sample_25_q0;
output  [3:0] im_sample_26_address0;
output   im_sample_26_ce0;
input  [31:0] im_sample_26_q0;
output  [3:0] im_sample_27_address0;
output   im_sample_27_ce0;
input  [31:0] im_sample_27_q0;
output  [3:0] im_sample_28_address0;
output   im_sample_28_ce0;
input  [31:0] im_sample_28_q0;
output  [3:0] im_sample_29_address0;
output   im_sample_29_ce0;
input  [31:0] im_sample_29_q0;
output  [3:0] im_sample_30_address0;
output   im_sample_30_ce0;
input  [31:0] im_sample_30_q0;
output  [3:0] im_sample_31_address0;
output   im_sample_31_ce0;
input  [31:0] im_sample_31_q0;
output  [3:0] im_sample_32_address0;
output   im_sample_32_ce0;
input  [31:0] im_sample_32_q0;
output  [3:0] im_sample_33_address0;
output   im_sample_33_ce0;
input  [31:0] im_sample_33_q0;
output  [3:0] im_sample_34_address0;
output   im_sample_34_ce0;
input  [31:0] im_sample_34_q0;
output  [3:0] im_sample_35_address0;
output   im_sample_35_ce0;
input  [31:0] im_sample_35_q0;
output  [3:0] im_sample_36_address0;
output   im_sample_36_ce0;
input  [31:0] im_sample_36_q0;
output  [3:0] im_sample_37_address0;
output   im_sample_37_ce0;
input  [31:0] im_sample_37_q0;
output  [3:0] im_sample_38_address0;
output   im_sample_38_ce0;
input  [31:0] im_sample_38_q0;
output  [3:0] im_sample_39_address0;
output   im_sample_39_ce0;
input  [31:0] im_sample_39_q0;
output  [3:0] im_sample_40_address0;
output   im_sample_40_ce0;
input  [31:0] im_sample_40_q0;
output  [3:0] im_sample_41_address0;
output   im_sample_41_ce0;
input  [31:0] im_sample_41_q0;
output  [3:0] im_sample_42_address0;
output   im_sample_42_ce0;
input  [31:0] im_sample_42_q0;
output  [3:0] im_sample_43_address0;
output   im_sample_43_ce0;
input  [31:0] im_sample_43_q0;
output  [3:0] im_sample_44_address0;
output   im_sample_44_ce0;
input  [31:0] im_sample_44_q0;
output  [3:0] im_sample_45_address0;
output   im_sample_45_ce0;
input  [31:0] im_sample_45_q0;
output  [3:0] im_sample_46_address0;
output   im_sample_46_ce0;
input  [31:0] im_sample_46_q0;
output  [3:0] im_sample_47_address0;
output   im_sample_47_ce0;
input  [31:0] im_sample_47_q0;
output  [3:0] im_sample_48_address0;
output   im_sample_48_ce0;
input  [31:0] im_sample_48_q0;
output  [3:0] im_sample_49_address0;
output   im_sample_49_ce0;
input  [31:0] im_sample_49_q0;
output  [3:0] im_sample_50_address0;
output   im_sample_50_ce0;
input  [31:0] im_sample_50_q0;
output  [3:0] im_sample_51_address0;
output   im_sample_51_ce0;
input  [31:0] im_sample_51_q0;
output  [3:0] im_sample_52_address0;
output   im_sample_52_ce0;
input  [31:0] im_sample_52_q0;
output  [3:0] im_sample_53_address0;
output   im_sample_53_ce0;
input  [31:0] im_sample_53_q0;
output  [3:0] im_sample_54_address0;
output   im_sample_54_ce0;
input  [31:0] im_sample_54_q0;
output  [3:0] im_sample_55_address0;
output   im_sample_55_ce0;
input  [31:0] im_sample_55_q0;
output  [3:0] im_sample_56_address0;
output   im_sample_56_ce0;
input  [31:0] im_sample_56_q0;
output  [3:0] im_sample_57_address0;
output   im_sample_57_ce0;
input  [31:0] im_sample_57_q0;
output  [3:0] im_sample_58_address0;
output   im_sample_58_ce0;
input  [31:0] im_sample_58_q0;
output  [3:0] im_sample_59_address0;
output   im_sample_59_ce0;
input  [31:0] im_sample_59_q0;
output  [3:0] im_sample_60_address0;
output   im_sample_60_ce0;
input  [31:0] im_sample_60_q0;
output  [3:0] im_sample_61_address0;
output   im_sample_61_ce0;
input  [31:0] im_sample_61_q0;
output  [3:0] im_sample_62_address0;
output   im_sample_62_ce0;
input  [31:0] im_sample_62_q0;
output  [3:0] im_sample_63_address0;
output   im_sample_63_ce0;
input  [31:0] im_sample_63_q0;
output  [31:0] real_op_TDATA;
output   real_op_TVALID;
output  [3:0] real_op_TKEEP;
output  [3:0] real_op_TSTRB;
output  [0:0] real_op_TLAST;
output  [31:0] imag_op_TDATA;
output   imag_op_TVALID;
output  [3:0] imag_op_TKEEP;
output  [3:0] imag_op_TSTRB;
output  [0:0] imag_op_TLAST;
output  [31:0] p_out;
output   p_out_ap_vld;
output  [31:0] p_out1;
output   p_out1_ap_vld;

reg ap_idle;
reg re_sample_0_ce0;
reg re_sample_1_ce0;
reg re_sample_2_ce0;
reg re_sample_3_ce0;
reg re_sample_4_ce0;
reg re_sample_5_ce0;
reg re_sample_6_ce0;
reg re_sample_7_ce0;
reg re_sample_8_ce0;
reg re_sample_9_ce0;
reg re_sample_10_ce0;
reg re_sample_11_ce0;
reg re_sample_12_ce0;
reg re_sample_13_ce0;
reg re_sample_14_ce0;
reg re_sample_15_ce0;
reg re_sample_16_ce0;
reg re_sample_17_ce0;
reg re_sample_18_ce0;
reg re_sample_19_ce0;
reg re_sample_20_ce0;
reg re_sample_21_ce0;
reg re_sample_22_ce0;
reg re_sample_23_ce0;
reg re_sample_24_ce0;
reg re_sample_25_ce0;
reg re_sample_26_ce0;
reg re_sample_27_ce0;
reg re_sample_28_ce0;
reg re_sample_29_ce0;
reg re_sample_30_ce0;
reg re_sample_31_ce0;
reg re_sample_32_ce0;
reg re_sample_33_ce0;
reg re_sample_34_ce0;
reg re_sample_35_ce0;
reg re_sample_36_ce0;
reg re_sample_37_ce0;
reg re_sample_38_ce0;
reg re_sample_39_ce0;
reg re_sample_40_ce0;
reg re_sample_41_ce0;
reg re_sample_42_ce0;
reg re_sample_43_ce0;
reg re_sample_44_ce0;
reg re_sample_45_ce0;
reg re_sample_46_ce0;
reg re_sample_47_ce0;
reg re_sample_48_ce0;
reg re_sample_49_ce0;
reg re_sample_50_ce0;
reg re_sample_51_ce0;
reg re_sample_52_ce0;
reg re_sample_53_ce0;
reg re_sample_54_ce0;
reg re_sample_55_ce0;
reg re_sample_56_ce0;
reg re_sample_57_ce0;
reg re_sample_58_ce0;
reg re_sample_59_ce0;
reg re_sample_60_ce0;
reg re_sample_61_ce0;
reg re_sample_62_ce0;
reg re_sample_63_ce0;
reg im_sample_0_ce0;
reg im_sample_1_ce0;
reg im_sample_2_ce0;
reg im_sample_3_ce0;
reg im_sample_4_ce0;
reg im_sample_5_ce0;
reg im_sample_6_ce0;
reg im_sample_7_ce0;
reg im_sample_8_ce0;
reg im_sample_9_ce0;
reg im_sample_10_ce0;
reg im_sample_11_ce0;
reg im_sample_12_ce0;
reg im_sample_13_ce0;
reg im_sample_14_ce0;
reg im_sample_15_ce0;
reg im_sample_16_ce0;
reg im_sample_17_ce0;
reg im_sample_18_ce0;
reg im_sample_19_ce0;
reg im_sample_20_ce0;
reg im_sample_21_ce0;
reg im_sample_22_ce0;
reg im_sample_23_ce0;
reg im_sample_24_ce0;
reg im_sample_25_ce0;
reg im_sample_26_ce0;
reg im_sample_27_ce0;
reg im_sample_28_ce0;
reg im_sample_29_ce0;
reg im_sample_30_ce0;
reg im_sample_31_ce0;
reg im_sample_32_ce0;
reg im_sample_33_ce0;
reg im_sample_34_ce0;
reg im_sample_35_ce0;
reg im_sample_36_ce0;
reg im_sample_37_ce0;
reg im_sample_38_ce0;
reg im_sample_39_ce0;
reg im_sample_40_ce0;
reg im_sample_41_ce0;
reg im_sample_42_ce0;
reg im_sample_43_ce0;
reg im_sample_44_ce0;
reg im_sample_45_ce0;
reg im_sample_46_ce0;
reg im_sample_47_ce0;
reg im_sample_48_ce0;
reg im_sample_49_ce0;
reg im_sample_50_ce0;
reg im_sample_51_ce0;
reg im_sample_52_ce0;
reg im_sample_53_ce0;
reg im_sample_54_ce0;
reg im_sample_55_ce0;
reg im_sample_56_ce0;
reg im_sample_57_ce0;
reg im_sample_58_ce0;
reg im_sample_59_ce0;
reg im_sample_60_ce0;
reg im_sample_61_ce0;
reg im_sample_62_ce0;
reg im_sample_63_ce0;
reg real_op_TVALID;
reg imag_op_TVALID;
reg p_out_ap_vld;
reg p_out1_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
reg   [0:0] icmp_ln53_reg_3385;
reg   [0:0] icmp_ln53_reg_3385_pp0_iter1_reg;
reg    ap_block_state14_pp0_stage5_iter1;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage5_subdone;
reg   [0:0] icmp_ln36_reg_2720;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
wire   [9:0] cos_coefficients_table_address0;
reg    cos_coefficients_table_ce0;
wire   [31:0] cos_coefficients_table_q0;
wire   [9:0] sin_coefficients_table_address0;
reg    sin_coefficients_table_ce0;
wire   [31:0] sin_coefficients_table_q0;
reg    real_op_TDATA_blk_n;
wire    ap_block_pp0_stage5;
reg    imag_op_TDATA_blk_n;
wire   [31:0] grp_fu_2120_p2;
reg   [31:0] reg_2131;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire   [0:0] icmp_ln36_fu_2159_p2;
wire   [0:0] icmp_ln40_fu_2174_p2;
reg   [0:0] icmp_ln40_reg_2724;
wire   [5:0] trunc_ln46_fu_2192_p1;
reg   [5:0] trunc_ln46_reg_2740;
wire   [0:0] icmp_ln53_fu_2338_p2;
reg   [31:0] c_reg_3389;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] s_reg_3394;
wire   [31:0] re_sample_n_fu_2357_p66;
reg   [31:0] re_sample_n_reg_3399;
wire   [31:0] im_sample_n_fu_2492_p66;
reg   [31:0] im_sample_n_reg_3404;
wire   [31:0] select_ln40_1_fu_2629_p3;
wire   [31:0] im_sample_n_neg_fu_2646_p1;
wire   [31:0] grp_fu_2125_p2;
wire   [31:0] select_ln40_fu_2654_p3;
reg    ap_block_pp0_stage5_11001;
reg   [31:0] mul1_reg_3435;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] mul3_reg_3440;
wire    ap_block_pp0_stage7_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln44_fu_2186_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln46_1_fu_2206_p1;
reg   [9:0] phi_mul_fu_344;
wire    ap_loop_init;
reg   [9:0] ap_sig_allocacmp_phi_mul_load;
wire   [9:0] add_ln44_fu_2180_p2;
reg   [31:0] Xre_data_1_fu_348;
reg   [31:0] ap_sig_allocacmp_Xre_data_1_load_1;
wire    ap_block_pp0_stage4;
reg   [31:0] Xim_data_1_fu_352;
reg   [31:0] ap_sig_allocacmp_Xim_data_1_load_1;
reg   [10:0] n_fu_356;
reg   [10:0] ap_sig_allocacmp_n_1;
wire   [10:0] add_ln36_fu_2165_p2;
reg    ap_block_pp0_stage5_01001;
reg   [31:0] grp_fu_2120_p0;
reg   [31:0] grp_fu_2120_p1;
wire    ap_block_pp0_stage1;
reg   [31:0] grp_fu_2125_p0;
reg   [31:0] grp_fu_2125_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire   [3:0] lshr_ln1_fu_2196_p4;
wire   [63:0] zext_ln46_fu_2354_p1;
wire   [31:0] bitcast_ln48_fu_2637_p1;
wire   [31:0] xor_ln48_fu_2640_p2;
reg    grp_fu_2120_ce;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg    grp_fu_2125_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

dft_dft_Pipeline_loop_n_cos_coefficients_table #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
cos_coefficients_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cos_coefficients_table_address0),
    .ce0(cos_coefficients_table_ce0),
    .q0(cos_coefficients_table_q0)
);

dft_dft_Pipeline_loop_n_sin_coefficients_table #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
sin_coefficients_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sin_coefficients_table_address0),
    .ce0(sin_coefficients_table_ce0),
    .q0(sin_coefficients_table_q0)
);

dft_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U137(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2120_p0),
    .din1(grp_fu_2120_p1),
    .ce(grp_fu_2120_ce),
    .dout(grp_fu_2120_p2)
);

dft_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U138(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2125_p0),
    .din1(grp_fu_2125_p1),
    .ce(grp_fu_2125_ce),
    .dout(grp_fu_2125_p2)
);

dft_mux_6464_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_6464_32_1_1_U139(
    .din0(re_sample_0_q0),
    .din1(re_sample_1_q0),
    .din2(re_sample_2_q0),
    .din3(re_sample_3_q0),
    .din4(re_sample_4_q0),
    .din5(re_sample_5_q0),
    .din6(re_sample_6_q0),
    .din7(re_sample_7_q0),
    .din8(re_sample_8_q0),
    .din9(re_sample_9_q0),
    .din10(re_sample_10_q0),
    .din11(re_sample_11_q0),
    .din12(re_sample_12_q0),
    .din13(re_sample_13_q0),
    .din14(re_sample_14_q0),
    .din15(re_sample_15_q0),
    .din16(re_sample_16_q0),
    .din17(re_sample_17_q0),
    .din18(re_sample_18_q0),
    .din19(re_sample_19_q0),
    .din20(re_sample_20_q0),
    .din21(re_sample_21_q0),
    .din22(re_sample_22_q0),
    .din23(re_sample_23_q0),
    .din24(re_sample_24_q0),
    .din25(re_sample_25_q0),
    .din26(re_sample_26_q0),
    .din27(re_sample_27_q0),
    .din28(re_sample_28_q0),
    .din29(re_sample_29_q0),
    .din30(re_sample_30_q0),
    .din31(re_sample_31_q0),
    .din32(re_sample_32_q0),
    .din33(re_sample_33_q0),
    .din34(re_sample_34_q0),
    .din35(re_sample_35_q0),
    .din36(re_sample_36_q0),
    .din37(re_sample_37_q0),
    .din38(re_sample_38_q0),
    .din39(re_sample_39_q0),
    .din40(re_sample_40_q0),
    .din41(re_sample_41_q0),
    .din42(re_sample_42_q0),
    .din43(re_sample_43_q0),
    .din44(re_sample_44_q0),
    .din45(re_sample_45_q0),
    .din46(re_sample_46_q0),
    .din47(re_sample_47_q0),
    .din48(re_sample_48_q0),
    .din49(re_sample_49_q0),
    .din50(re_sample_50_q0),
    .din51(re_sample_51_q0),
    .din52(re_sample_52_q0),
    .din53(re_sample_53_q0),
    .din54(re_sample_54_q0),
    .din55(re_sample_55_q0),
    .din56(re_sample_56_q0),
    .din57(re_sample_57_q0),
    .din58(re_sample_58_q0),
    .din59(re_sample_59_q0),
    .din60(re_sample_60_q0),
    .din61(re_sample_61_q0),
    .din62(re_sample_62_q0),
    .din63(re_sample_63_q0),
    .din64(zext_ln46_fu_2354_p1),
    .dout(re_sample_n_fu_2357_p66)
);

dft_mux_6464_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 32 ),
    .din33_WIDTH( 32 ),
    .din34_WIDTH( 32 ),
    .din35_WIDTH( 32 ),
    .din36_WIDTH( 32 ),
    .din37_WIDTH( 32 ),
    .din38_WIDTH( 32 ),
    .din39_WIDTH( 32 ),
    .din40_WIDTH( 32 ),
    .din41_WIDTH( 32 ),
    .din42_WIDTH( 32 ),
    .din43_WIDTH( 32 ),
    .din44_WIDTH( 32 ),
    .din45_WIDTH( 32 ),
    .din46_WIDTH( 32 ),
    .din47_WIDTH( 32 ),
    .din48_WIDTH( 32 ),
    .din49_WIDTH( 32 ),
    .din50_WIDTH( 32 ),
    .din51_WIDTH( 32 ),
    .din52_WIDTH( 32 ),
    .din53_WIDTH( 32 ),
    .din54_WIDTH( 32 ),
    .din55_WIDTH( 32 ),
    .din56_WIDTH( 32 ),
    .din57_WIDTH( 32 ),
    .din58_WIDTH( 32 ),
    .din59_WIDTH( 32 ),
    .din60_WIDTH( 32 ),
    .din61_WIDTH( 32 ),
    .din62_WIDTH( 32 ),
    .din63_WIDTH( 32 ),
    .din64_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_6464_32_1_1_U140(
    .din0(im_sample_0_q0),
    .din1(im_sample_1_q0),
    .din2(im_sample_2_q0),
    .din3(im_sample_3_q0),
    .din4(im_sample_4_q0),
    .din5(im_sample_5_q0),
    .din6(im_sample_6_q0),
    .din7(im_sample_7_q0),
    .din8(im_sample_8_q0),
    .din9(im_sample_9_q0),
    .din10(im_sample_10_q0),
    .din11(im_sample_11_q0),
    .din12(im_sample_12_q0),
    .din13(im_sample_13_q0),
    .din14(im_sample_14_q0),
    .din15(im_sample_15_q0),
    .din16(im_sample_16_q0),
    .din17(im_sample_17_q0),
    .din18(im_sample_18_q0),
    .din19(im_sample_19_q0),
    .din20(im_sample_20_q0),
    .din21(im_sample_21_q0),
    .din22(im_sample_22_q0),
    .din23(im_sample_23_q0),
    .din24(im_sample_24_q0),
    .din25(im_sample_25_q0),
    .din26(im_sample_26_q0),
    .din27(im_sample_27_q0),
    .din28(im_sample_28_q0),
    .din29(im_sample_29_q0),
    .din30(im_sample_30_q0),
    .din31(im_sample_31_q0),
    .din32(im_sample_32_q0),
    .din33(im_sample_33_q0),
    .din34(im_sample_34_q0),
    .din35(im_sample_35_q0),
    .din36(im_sample_36_q0),
    .din37(im_sample_37_q0),
    .din38(im_sample_38_q0),
    .din39(im_sample_39_q0),
    .din40(im_sample_40_q0),
    .din41(im_sample_41_q0),
    .din42(im_sample_42_q0),
    .din43(im_sample_43_q0),
    .din44(im_sample_44_q0),
    .din45(im_sample_45_q0),
    .din46(im_sample_46_q0),
    .din47(im_sample_47_q0),
    .din48(im_sample_48_q0),
    .din49(im_sample_49_q0),
    .din50(im_sample_50_q0),
    .din51(im_sample_51_q0),
    .din52(im_sample_52_q0),
    .din53(im_sample_53_q0),
    .din54(im_sample_54_q0),
    .din55(im_sample_55_q0),
    .din56(im_sample_56_q0),
    .din57(im_sample_57_q0),
    .din58(im_sample_58_q0),
    .din59(im_sample_59_q0),
    .din60(im_sample_60_q0),
    .din61(im_sample_61_q0),
    .din62(im_sample_62_q0),
    .din63(im_sample_63_q0),
    .din64(zext_ln46_fu_2354_p1),
    .dout(im_sample_n_fu_2492_p66)
);

dft_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Xim_data_1_fu_352 <= tmp_1;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        Xim_data_1_fu_352 <= grp_fu_2120_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        Xre_data_1_fu_348 <= tmp;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        Xre_data_1_fu_348 <= grp_fu_2120_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln36_fu_2159_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            n_fu_356 <= add_ln36_fu_2165_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            n_fu_356 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln36_fu_2159_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            phi_mul_fu_344 <= add_ln44_fu_2180_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            phi_mul_fu_344 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_reg_2720 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        c_reg_3389 <= cos_coefficients_table_q0;
        im_sample_n_reg_3404 <= im_sample_n_fu_2492_p66;
        re_sample_n_reg_3399 <= re_sample_n_fu_2357_p66;
        s_reg_3394 <= sin_coefficients_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln36_reg_2720 <= icmp_ln36_fu_2159_p2;
        icmp_ln53_reg_3385_pp0_iter1_reg <= icmp_ln53_reg_3385;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_fu_2159_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln40_reg_2724 <= icmp_ln40_fu_2174_p2;
        icmp_ln53_reg_3385 <= icmp_ln53_fu_2338_p2;
        trunc_ln46_reg_2740 <= trunc_ln46_fu_2192_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_reg_2720 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul1_reg_3435 <= grp_fu_2125_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_reg_2720 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul3_reg_3440 <= grp_fu_2125_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_2131 <= grp_fu_2120_p2;
    end
end

always @ (*) begin
    if (((icmp_ln36_reg_2720 == 1'd1) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_sig_allocacmp_Xim_data_1_load_1 = grp_fu_2120_p2;
    end else begin
        ap_sig_allocacmp_Xim_data_1_load_1 = Xim_data_1_fu_352;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_sig_allocacmp_Xre_data_1_load_1 = grp_fu_2120_p2;
    end else begin
        ap_sig_allocacmp_Xre_data_1_load_1 = Xre_data_1_fu_348;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_n_1 = 11'd0;
    end else begin
        ap_sig_allocacmp_n_1 = n_fu_356;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_phi_mul_load = 10'd0;
    end else begin
        ap_sig_allocacmp_phi_mul_load = phi_mul_fu_344;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cos_coefficients_table_ce0 = 1'b1;
    end else begin
        cos_coefficients_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_2120_ce = 1'b1;
    end else begin
        grp_fu_2120_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_2120_p0 = grp_fu_2120_p2;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2120_p0 = select_ln40_fu_2654_p3;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2120_p0 = select_ln40_1_fu_2629_p3;
    end else begin
        grp_fu_2120_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2120_p1 = mul3_reg_3440;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2120_p1 = mul1_reg_3435;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_2120_p1 = grp_fu_2125_p2;
    end else begin
        grp_fu_2120_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_2125_ce = 1'b1;
    end else begin
        grp_fu_2125_ce = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_2125_p0 = im_sample_n_neg_fu_2646_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_2125_p0 = im_sample_n_reg_3404;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_2125_p0 = re_sample_n_reg_3399;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_2125_p0 = re_sample_n_fu_2357_p66;
        end else begin
            grp_fu_2125_p0 = 'bx;
        end
    end else begin
        grp_fu_2125_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2125_p1 = c_reg_3389;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_2125_p1 = s_reg_3394;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2125_p1 = cos_coefficients_table_q0;
    end else begin
        grp_fu_2125_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_0_ce0 = 1'b1;
    end else begin
        im_sample_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_10_ce0 = 1'b1;
    end else begin
        im_sample_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_11_ce0 = 1'b1;
    end else begin
        im_sample_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_12_ce0 = 1'b1;
    end else begin
        im_sample_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_13_ce0 = 1'b1;
    end else begin
        im_sample_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_14_ce0 = 1'b1;
    end else begin
        im_sample_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_15_ce0 = 1'b1;
    end else begin
        im_sample_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_16_ce0 = 1'b1;
    end else begin
        im_sample_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_17_ce0 = 1'b1;
    end else begin
        im_sample_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_18_ce0 = 1'b1;
    end else begin
        im_sample_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_19_ce0 = 1'b1;
    end else begin
        im_sample_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_1_ce0 = 1'b1;
    end else begin
        im_sample_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_20_ce0 = 1'b1;
    end else begin
        im_sample_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_21_ce0 = 1'b1;
    end else begin
        im_sample_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_22_ce0 = 1'b1;
    end else begin
        im_sample_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_23_ce0 = 1'b1;
    end else begin
        im_sample_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_24_ce0 = 1'b1;
    end else begin
        im_sample_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_25_ce0 = 1'b1;
    end else begin
        im_sample_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_26_ce0 = 1'b1;
    end else begin
        im_sample_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_27_ce0 = 1'b1;
    end else begin
        im_sample_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_28_ce0 = 1'b1;
    end else begin
        im_sample_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_29_ce0 = 1'b1;
    end else begin
        im_sample_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_2_ce0 = 1'b1;
    end else begin
        im_sample_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_30_ce0 = 1'b1;
    end else begin
        im_sample_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_31_ce0 = 1'b1;
    end else begin
        im_sample_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_32_ce0 = 1'b1;
    end else begin
        im_sample_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_33_ce0 = 1'b1;
    end else begin
        im_sample_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_34_ce0 = 1'b1;
    end else begin
        im_sample_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_35_ce0 = 1'b1;
    end else begin
        im_sample_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_36_ce0 = 1'b1;
    end else begin
        im_sample_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_37_ce0 = 1'b1;
    end else begin
        im_sample_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_38_ce0 = 1'b1;
    end else begin
        im_sample_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_39_ce0 = 1'b1;
    end else begin
        im_sample_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_3_ce0 = 1'b1;
    end else begin
        im_sample_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_40_ce0 = 1'b1;
    end else begin
        im_sample_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_41_ce0 = 1'b1;
    end else begin
        im_sample_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_42_ce0 = 1'b1;
    end else begin
        im_sample_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_43_ce0 = 1'b1;
    end else begin
        im_sample_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_44_ce0 = 1'b1;
    end else begin
        im_sample_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_45_ce0 = 1'b1;
    end else begin
        im_sample_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_46_ce0 = 1'b1;
    end else begin
        im_sample_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_47_ce0 = 1'b1;
    end else begin
        im_sample_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_48_ce0 = 1'b1;
    end else begin
        im_sample_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_49_ce0 = 1'b1;
    end else begin
        im_sample_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_4_ce0 = 1'b1;
    end else begin
        im_sample_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_50_ce0 = 1'b1;
    end else begin
        im_sample_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_51_ce0 = 1'b1;
    end else begin
        im_sample_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_52_ce0 = 1'b1;
    end else begin
        im_sample_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_53_ce0 = 1'b1;
    end else begin
        im_sample_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_54_ce0 = 1'b1;
    end else begin
        im_sample_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_55_ce0 = 1'b1;
    end else begin
        im_sample_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_56_ce0 = 1'b1;
    end else begin
        im_sample_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_57_ce0 = 1'b1;
    end else begin
        im_sample_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_58_ce0 = 1'b1;
    end else begin
        im_sample_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_59_ce0 = 1'b1;
    end else begin
        im_sample_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_5_ce0 = 1'b1;
    end else begin
        im_sample_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_60_ce0 = 1'b1;
    end else begin
        im_sample_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_61_ce0 = 1'b1;
    end else begin
        im_sample_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_62_ce0 = 1'b1;
    end else begin
        im_sample_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_63_ce0 = 1'b1;
    end else begin
        im_sample_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_6_ce0 = 1'b1;
    end else begin
        im_sample_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_7_ce0 = 1'b1;
    end else begin
        im_sample_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_8_ce0 = 1'b1;
    end else begin
        im_sample_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        im_sample_9_ce0 = 1'b1;
    end else begin
        im_sample_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        imag_op_TDATA_blk_n = imag_op_TREADY;
    end else begin
        imag_op_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        imag_op_TVALID = 1'b1;
    end else begin
        imag_op_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln36_reg_2720 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_out1_ap_vld = 1'b1;
    end else begin
        p_out1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln36_reg_2720 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_0_ce0 = 1'b1;
    end else begin
        re_sample_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_10_ce0 = 1'b1;
    end else begin
        re_sample_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_11_ce0 = 1'b1;
    end else begin
        re_sample_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_12_ce0 = 1'b1;
    end else begin
        re_sample_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_13_ce0 = 1'b1;
    end else begin
        re_sample_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_14_ce0 = 1'b1;
    end else begin
        re_sample_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_15_ce0 = 1'b1;
    end else begin
        re_sample_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_16_ce0 = 1'b1;
    end else begin
        re_sample_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_17_ce0 = 1'b1;
    end else begin
        re_sample_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_18_ce0 = 1'b1;
    end else begin
        re_sample_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_19_ce0 = 1'b1;
    end else begin
        re_sample_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_1_ce0 = 1'b1;
    end else begin
        re_sample_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_20_ce0 = 1'b1;
    end else begin
        re_sample_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_21_ce0 = 1'b1;
    end else begin
        re_sample_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_22_ce0 = 1'b1;
    end else begin
        re_sample_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_23_ce0 = 1'b1;
    end else begin
        re_sample_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_24_ce0 = 1'b1;
    end else begin
        re_sample_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_25_ce0 = 1'b1;
    end else begin
        re_sample_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_26_ce0 = 1'b1;
    end else begin
        re_sample_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_27_ce0 = 1'b1;
    end else begin
        re_sample_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_28_ce0 = 1'b1;
    end else begin
        re_sample_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_29_ce0 = 1'b1;
    end else begin
        re_sample_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_2_ce0 = 1'b1;
    end else begin
        re_sample_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_30_ce0 = 1'b1;
    end else begin
        re_sample_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_31_ce0 = 1'b1;
    end else begin
        re_sample_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_32_ce0 = 1'b1;
    end else begin
        re_sample_32_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_33_ce0 = 1'b1;
    end else begin
        re_sample_33_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_34_ce0 = 1'b1;
    end else begin
        re_sample_34_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_35_ce0 = 1'b1;
    end else begin
        re_sample_35_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_36_ce0 = 1'b1;
    end else begin
        re_sample_36_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_37_ce0 = 1'b1;
    end else begin
        re_sample_37_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_38_ce0 = 1'b1;
    end else begin
        re_sample_38_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_39_ce0 = 1'b1;
    end else begin
        re_sample_39_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_3_ce0 = 1'b1;
    end else begin
        re_sample_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_40_ce0 = 1'b1;
    end else begin
        re_sample_40_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_41_ce0 = 1'b1;
    end else begin
        re_sample_41_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_42_ce0 = 1'b1;
    end else begin
        re_sample_42_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_43_ce0 = 1'b1;
    end else begin
        re_sample_43_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_44_ce0 = 1'b1;
    end else begin
        re_sample_44_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_45_ce0 = 1'b1;
    end else begin
        re_sample_45_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_46_ce0 = 1'b1;
    end else begin
        re_sample_46_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_47_ce0 = 1'b1;
    end else begin
        re_sample_47_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_48_ce0 = 1'b1;
    end else begin
        re_sample_48_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_49_ce0 = 1'b1;
    end else begin
        re_sample_49_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_4_ce0 = 1'b1;
    end else begin
        re_sample_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_50_ce0 = 1'b1;
    end else begin
        re_sample_50_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_51_ce0 = 1'b1;
    end else begin
        re_sample_51_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_52_ce0 = 1'b1;
    end else begin
        re_sample_52_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_53_ce0 = 1'b1;
    end else begin
        re_sample_53_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_54_ce0 = 1'b1;
    end else begin
        re_sample_54_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_55_ce0 = 1'b1;
    end else begin
        re_sample_55_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_56_ce0 = 1'b1;
    end else begin
        re_sample_56_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_57_ce0 = 1'b1;
    end else begin
        re_sample_57_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_58_ce0 = 1'b1;
    end else begin
        re_sample_58_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_59_ce0 = 1'b1;
    end else begin
        re_sample_59_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_5_ce0 = 1'b1;
    end else begin
        re_sample_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_60_ce0 = 1'b1;
    end else begin
        re_sample_60_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_61_ce0 = 1'b1;
    end else begin
        re_sample_61_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_62_ce0 = 1'b1;
    end else begin
        re_sample_62_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_63_ce0 = 1'b1;
    end else begin
        re_sample_63_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_6_ce0 = 1'b1;
    end else begin
        re_sample_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_7_ce0 = 1'b1;
    end else begin
        re_sample_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_8_ce0 = 1'b1;
    end else begin
        re_sample_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        re_sample_9_ce0 = 1'b1;
    end else begin
        re_sample_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        real_op_TDATA_blk_n = real_op_TREADY;
    end else begin
        real_op_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        real_op_TVALID = 1'b1;
    end else begin
        real_op_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sin_coefficients_table_ce0 = 1'b1;
    end else begin
        sin_coefficients_table_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage5)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln36_fu_2165_p2 = (ap_sig_allocacmp_n_1 + 11'd1);

assign add_ln44_fu_2180_p2 = (ap_sig_allocacmp_phi_mul_load + trunc_ln1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((imag_op_TREADY == 1'b0) & (icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1)) | ((icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1) & (real_op_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((imag_op_TREADY == 1'b0) & (icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1)) | ((icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1) & (real_op_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((imag_op_TREADY == 1'b0) & (icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1)) | ((icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1) & (real_op_TREADY == 1'b0))));
end

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_io = (((imag_op_TREADY == 1'b0) & (icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1)) | ((icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1) & (real_op_TREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state14_pp0_stage5_iter1 = (((imag_op_TREADY == 1'b0) & (icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1)) | ((icmp_ln53_reg_3385_pp0_iter1_reg == 1'd1) & (real_op_TREADY == 1'b0)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign bitcast_ln48_fu_2637_p1 = im_sample_n_reg_3404;

assign cos_coefficients_table_address0 = zext_ln44_fu_2186_p1;

assign icmp_ln36_fu_2159_p2 = ((ap_sig_allocacmp_n_1 == 11'd1024) ? 1'b1 : 1'b0);

assign icmp_ln40_fu_2174_p2 = ((ap_sig_allocacmp_n_1 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_2338_p2 = ((ap_sig_allocacmp_n_1 == 11'd1023) ? 1'b1 : 1'b0);

assign im_sample_0_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_10_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_11_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_12_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_13_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_14_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_15_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_16_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_17_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_18_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_19_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_1_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_20_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_21_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_22_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_23_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_24_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_25_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_26_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_27_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_28_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_29_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_2_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_30_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_31_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_32_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_33_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_34_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_35_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_36_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_37_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_38_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_39_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_3_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_40_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_41_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_42_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_43_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_44_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_45_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_46_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_47_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_48_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_49_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_4_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_50_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_51_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_52_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_53_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_54_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_55_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_56_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_57_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_58_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_59_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_5_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_60_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_61_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_62_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_63_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_6_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_7_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_8_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_9_address0 = zext_ln46_1_fu_2206_p1;

assign im_sample_n_neg_fu_2646_p1 = xor_ln48_fu_2640_p2;

assign imag_op_TDATA = grp_fu_2120_p2;

assign imag_op_TKEEP = 4'd0;

assign imag_op_TLAST = 1'd0;

assign imag_op_TSTRB = 4'd0;

assign lshr_ln1_fu_2196_p4 = {{ap_sig_allocacmp_n_1[9:6]}};

assign p_out = Xim_data_1_fu_352;

assign p_out1 = Xre_data_1_fu_348;

assign re_sample_0_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_10_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_11_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_12_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_13_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_14_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_15_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_16_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_17_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_18_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_19_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_1_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_20_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_21_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_22_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_23_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_24_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_25_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_26_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_27_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_28_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_29_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_2_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_30_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_31_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_32_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_33_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_34_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_35_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_36_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_37_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_38_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_39_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_3_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_40_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_41_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_42_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_43_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_44_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_45_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_46_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_47_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_48_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_49_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_4_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_50_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_51_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_52_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_53_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_54_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_55_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_56_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_57_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_58_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_59_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_5_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_60_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_61_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_62_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_63_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_6_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_7_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_8_address0 = zext_ln46_1_fu_2206_p1;

assign re_sample_9_address0 = zext_ln46_1_fu_2206_p1;

assign real_op_TDATA = reg_2131;

assign real_op_TKEEP = 4'd0;

assign real_op_TLAST = 1'd0;

assign real_op_TSTRB = 4'd0;

assign select_ln40_1_fu_2629_p3 = ((icmp_ln40_reg_2724[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_Xre_data_1_load_1);

assign select_ln40_fu_2654_p3 = ((icmp_ln40_reg_2724[0:0] == 1'b1) ? 32'd0 : ap_sig_allocacmp_Xim_data_1_load_1);

assign sin_coefficients_table_address0 = zext_ln44_fu_2186_p1;

assign trunc_ln46_fu_2192_p1 = ap_sig_allocacmp_n_1[5:0];

assign xor_ln48_fu_2640_p2 = (bitcast_ln48_fu_2637_p1 ^ 32'd2147483648);

assign zext_ln44_fu_2186_p1 = ap_sig_allocacmp_phi_mul_load;

assign zext_ln46_1_fu_2206_p1 = lshr_ln1_fu_2196_p4;

assign zext_ln46_fu_2354_p1 = trunc_ln46_reg_2740;

endmodule //dft_dft_Pipeline_loop_n
