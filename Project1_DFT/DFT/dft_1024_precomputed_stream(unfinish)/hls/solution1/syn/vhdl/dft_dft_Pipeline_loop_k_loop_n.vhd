-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dft_dft_Pipeline_loop_k_loop_n is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    real_op_TREADY : IN STD_LOGIC;
    imag_op_TREADY : IN STD_LOGIC;
    re_sample_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_0_ce0 : OUT STD_LOGIC;
    re_sample_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_1_ce0 : OUT STD_LOGIC;
    re_sample_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_2_ce0 : OUT STD_LOGIC;
    re_sample_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_3_ce0 : OUT STD_LOGIC;
    re_sample_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_4_ce0 : OUT STD_LOGIC;
    re_sample_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_5_ce0 : OUT STD_LOGIC;
    re_sample_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_6_ce0 : OUT STD_LOGIC;
    re_sample_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_7_ce0 : OUT STD_LOGIC;
    re_sample_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_8_ce0 : OUT STD_LOGIC;
    re_sample_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_9_ce0 : OUT STD_LOGIC;
    re_sample_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_10_ce0 : OUT STD_LOGIC;
    re_sample_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_11_ce0 : OUT STD_LOGIC;
    re_sample_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_12_ce0 : OUT STD_LOGIC;
    re_sample_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_13_ce0 : OUT STD_LOGIC;
    re_sample_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_14_ce0 : OUT STD_LOGIC;
    re_sample_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_15_ce0 : OUT STD_LOGIC;
    re_sample_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_16_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_16_ce0 : OUT STD_LOGIC;
    re_sample_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_17_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_17_ce0 : OUT STD_LOGIC;
    re_sample_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_18_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_18_ce0 : OUT STD_LOGIC;
    re_sample_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_19_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_19_ce0 : OUT STD_LOGIC;
    re_sample_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_20_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_20_ce0 : OUT STD_LOGIC;
    re_sample_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_21_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_21_ce0 : OUT STD_LOGIC;
    re_sample_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_22_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_22_ce0 : OUT STD_LOGIC;
    re_sample_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_23_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_23_ce0 : OUT STD_LOGIC;
    re_sample_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_24_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_24_ce0 : OUT STD_LOGIC;
    re_sample_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_25_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_25_ce0 : OUT STD_LOGIC;
    re_sample_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_26_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_26_ce0 : OUT STD_LOGIC;
    re_sample_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_27_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_27_ce0 : OUT STD_LOGIC;
    re_sample_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_28_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_28_ce0 : OUT STD_LOGIC;
    re_sample_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_29_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_29_ce0 : OUT STD_LOGIC;
    re_sample_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_30_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_30_ce0 : OUT STD_LOGIC;
    re_sample_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_31_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_31_ce0 : OUT STD_LOGIC;
    re_sample_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_32_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_32_ce0 : OUT STD_LOGIC;
    re_sample_32_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_33_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_33_ce0 : OUT STD_LOGIC;
    re_sample_33_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_34_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_34_ce0 : OUT STD_LOGIC;
    re_sample_34_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_35_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_35_ce0 : OUT STD_LOGIC;
    re_sample_35_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_36_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_36_ce0 : OUT STD_LOGIC;
    re_sample_36_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_37_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_37_ce0 : OUT STD_LOGIC;
    re_sample_37_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_38_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_38_ce0 : OUT STD_LOGIC;
    re_sample_38_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_39_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_39_ce0 : OUT STD_LOGIC;
    re_sample_39_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_40_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_40_ce0 : OUT STD_LOGIC;
    re_sample_40_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_41_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_41_ce0 : OUT STD_LOGIC;
    re_sample_41_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_42_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_42_ce0 : OUT STD_LOGIC;
    re_sample_42_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_43_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_43_ce0 : OUT STD_LOGIC;
    re_sample_43_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_44_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_44_ce0 : OUT STD_LOGIC;
    re_sample_44_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_45_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_45_ce0 : OUT STD_LOGIC;
    re_sample_45_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_46_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_46_ce0 : OUT STD_LOGIC;
    re_sample_46_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_47_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_47_ce0 : OUT STD_LOGIC;
    re_sample_47_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_48_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_48_ce0 : OUT STD_LOGIC;
    re_sample_48_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_49_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_49_ce0 : OUT STD_LOGIC;
    re_sample_49_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_50_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_50_ce0 : OUT STD_LOGIC;
    re_sample_50_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_51_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_51_ce0 : OUT STD_LOGIC;
    re_sample_51_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_52_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_52_ce0 : OUT STD_LOGIC;
    re_sample_52_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_53_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_53_ce0 : OUT STD_LOGIC;
    re_sample_53_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_54_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_54_ce0 : OUT STD_LOGIC;
    re_sample_54_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_55_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_55_ce0 : OUT STD_LOGIC;
    re_sample_55_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_56_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_56_ce0 : OUT STD_LOGIC;
    re_sample_56_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_57_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_57_ce0 : OUT STD_LOGIC;
    re_sample_57_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_58_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_58_ce0 : OUT STD_LOGIC;
    re_sample_58_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_59_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_59_ce0 : OUT STD_LOGIC;
    re_sample_59_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_60_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_60_ce0 : OUT STD_LOGIC;
    re_sample_60_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_61_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_61_ce0 : OUT STD_LOGIC;
    re_sample_61_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_62_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_62_ce0 : OUT STD_LOGIC;
    re_sample_62_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    re_sample_63_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    re_sample_63_ce0 : OUT STD_LOGIC;
    re_sample_63_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_0_ce0 : OUT STD_LOGIC;
    im_sample_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_1_ce0 : OUT STD_LOGIC;
    im_sample_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_2_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_2_ce0 : OUT STD_LOGIC;
    im_sample_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_3_ce0 : OUT STD_LOGIC;
    im_sample_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_4_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_4_ce0 : OUT STD_LOGIC;
    im_sample_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_5_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_5_ce0 : OUT STD_LOGIC;
    im_sample_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_6_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_6_ce0 : OUT STD_LOGIC;
    im_sample_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_7_ce0 : OUT STD_LOGIC;
    im_sample_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_8_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_8_ce0 : OUT STD_LOGIC;
    im_sample_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_9_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_9_ce0 : OUT STD_LOGIC;
    im_sample_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_10_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_10_ce0 : OUT STD_LOGIC;
    im_sample_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_11_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_11_ce0 : OUT STD_LOGIC;
    im_sample_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_12_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_12_ce0 : OUT STD_LOGIC;
    im_sample_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_13_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_13_ce0 : OUT STD_LOGIC;
    im_sample_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_14_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_14_ce0 : OUT STD_LOGIC;
    im_sample_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_15_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_15_ce0 : OUT STD_LOGIC;
    im_sample_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_16_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_16_ce0 : OUT STD_LOGIC;
    im_sample_16_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_17_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_17_ce0 : OUT STD_LOGIC;
    im_sample_17_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_18_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_18_ce0 : OUT STD_LOGIC;
    im_sample_18_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_19_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_19_ce0 : OUT STD_LOGIC;
    im_sample_19_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_20_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_20_ce0 : OUT STD_LOGIC;
    im_sample_20_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_21_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_21_ce0 : OUT STD_LOGIC;
    im_sample_21_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_22_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_22_ce0 : OUT STD_LOGIC;
    im_sample_22_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_23_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_23_ce0 : OUT STD_LOGIC;
    im_sample_23_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_24_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_24_ce0 : OUT STD_LOGIC;
    im_sample_24_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_25_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_25_ce0 : OUT STD_LOGIC;
    im_sample_25_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_26_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_26_ce0 : OUT STD_LOGIC;
    im_sample_26_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_27_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_27_ce0 : OUT STD_LOGIC;
    im_sample_27_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_28_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_28_ce0 : OUT STD_LOGIC;
    im_sample_28_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_29_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_29_ce0 : OUT STD_LOGIC;
    im_sample_29_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_30_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_30_ce0 : OUT STD_LOGIC;
    im_sample_30_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_31_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_31_ce0 : OUT STD_LOGIC;
    im_sample_31_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_32_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_32_ce0 : OUT STD_LOGIC;
    im_sample_32_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_33_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_33_ce0 : OUT STD_LOGIC;
    im_sample_33_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_34_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_34_ce0 : OUT STD_LOGIC;
    im_sample_34_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_35_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_35_ce0 : OUT STD_LOGIC;
    im_sample_35_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_36_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_36_ce0 : OUT STD_LOGIC;
    im_sample_36_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_37_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_37_ce0 : OUT STD_LOGIC;
    im_sample_37_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_38_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_38_ce0 : OUT STD_LOGIC;
    im_sample_38_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_39_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_39_ce0 : OUT STD_LOGIC;
    im_sample_39_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_40_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_40_ce0 : OUT STD_LOGIC;
    im_sample_40_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_41_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_41_ce0 : OUT STD_LOGIC;
    im_sample_41_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_42_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_42_ce0 : OUT STD_LOGIC;
    im_sample_42_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_43_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_43_ce0 : OUT STD_LOGIC;
    im_sample_43_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_44_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_44_ce0 : OUT STD_LOGIC;
    im_sample_44_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_45_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_45_ce0 : OUT STD_LOGIC;
    im_sample_45_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_46_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_46_ce0 : OUT STD_LOGIC;
    im_sample_46_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_47_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_47_ce0 : OUT STD_LOGIC;
    im_sample_47_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_48_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_48_ce0 : OUT STD_LOGIC;
    im_sample_48_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_49_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_49_ce0 : OUT STD_LOGIC;
    im_sample_49_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_50_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_50_ce0 : OUT STD_LOGIC;
    im_sample_50_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_51_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_51_ce0 : OUT STD_LOGIC;
    im_sample_51_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_52_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_52_ce0 : OUT STD_LOGIC;
    im_sample_52_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_53_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_53_ce0 : OUT STD_LOGIC;
    im_sample_53_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_54_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_54_ce0 : OUT STD_LOGIC;
    im_sample_54_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_55_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_55_ce0 : OUT STD_LOGIC;
    im_sample_55_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_56_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_56_ce0 : OUT STD_LOGIC;
    im_sample_56_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_57_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_57_ce0 : OUT STD_LOGIC;
    im_sample_57_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_58_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_58_ce0 : OUT STD_LOGIC;
    im_sample_58_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_59_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_59_ce0 : OUT STD_LOGIC;
    im_sample_59_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_60_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_60_ce0 : OUT STD_LOGIC;
    im_sample_60_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_61_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_61_ce0 : OUT STD_LOGIC;
    im_sample_61_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_62_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_62_ce0 : OUT STD_LOGIC;
    im_sample_62_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    im_sample_63_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    im_sample_63_ce0 : OUT STD_LOGIC;
    im_sample_63_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_op_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    real_op_TVALID : OUT STD_LOGIC;
    real_op_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_op_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    real_op_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    imag_op_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    imag_op_TVALID : OUT STD_LOGIC;
    imag_op_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    imag_op_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    imag_op_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of dft_dft_Pipeline_loop_k_loop_n is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv21_100000 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_lv21_1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_const_lv11_400 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal icmp_ln50_reg_3379 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln50_reg_3379_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state19_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state19_io : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal icmp_ln28_reg_2719 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage6 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal cos_coefficients_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal cos_coefficients_table_ce0 : STD_LOGIC;
    signal cos_coefficients_table_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sin_coefficients_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal sin_coefficients_table_ce0 : STD_LOGIC;
    signal sin_coefficients_table_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal real_op_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal imag_op_TDATA_blk_n : STD_LOGIC;
    signal grp_fu_2086_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2094 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal icmp_ln28_fu_2117_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln37_fu_2171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_2723 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln41_fu_2177_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln41_reg_2729 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln43_fu_2183_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln43_reg_2734 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln50_fu_2329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal re_sample_n_fu_2364_p66 : STD_LOGIC_VECTOR (31 downto 0);
    signal re_sample_n_reg_3393 : STD_LOGIC_VECTOR (31 downto 0);
    signal im_sample_n_fu_2498_p66 : STD_LOGIC_VECTOR (31 downto 0);
    signal im_sample_n_reg_3398 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_reg_3404 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal s_reg_3409 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_re_2_fu_2635_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_re_2_reg_3414 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal im_sample_n_neg_fu_2651_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2090_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_3424 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_im_2_fu_2659_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal buff_im_2_reg_3429 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal mul2_reg_3434 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul1_reg_3439 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal mul3_reg_3444 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal buff_im_3_reg_3449 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal zext_ln43_1_fu_2197_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln41_fu_2356_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal buff_re_1_fu_338 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal buff_im_1_fu_342 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal n_fu_346 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln32_fu_2335_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal k_1_fu_350 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln41_1_fu_2155_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_flatten_fu_354 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln28_fu_2123_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_2086_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2086_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal grp_fu_2090_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2090_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal icmp_ln32_fu_2135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln28_1_fu_2149_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln41_fu_2141_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln41_fu_2177_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln41_fu_2177_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln1_fu_2187_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln43_fu_2361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln45_fu_2642_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln45_fu_2645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2086_ce : STD_LOGIC;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal grp_fu_2090_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component dft_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_mul_10s_10s_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component dft_mux_6464_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        din41_WIDTH : INTEGER;
        din42_WIDTH : INTEGER;
        din43_WIDTH : INTEGER;
        din44_WIDTH : INTEGER;
        din45_WIDTH : INTEGER;
        din46_WIDTH : INTEGER;
        din47_WIDTH : INTEGER;
        din48_WIDTH : INTEGER;
        din49_WIDTH : INTEGER;
        din50_WIDTH : INTEGER;
        din51_WIDTH : INTEGER;
        din52_WIDTH : INTEGER;
        din53_WIDTH : INTEGER;
        din54_WIDTH : INTEGER;
        din55_WIDTH : INTEGER;
        din56_WIDTH : INTEGER;
        din57_WIDTH : INTEGER;
        din58_WIDTH : INTEGER;
        din59_WIDTH : INTEGER;
        din60_WIDTH : INTEGER;
        din61_WIDTH : INTEGER;
        din62_WIDTH : INTEGER;
        din63_WIDTH : INTEGER;
        din64_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (31 downto 0);
        din33 : IN STD_LOGIC_VECTOR (31 downto 0);
        din34 : IN STD_LOGIC_VECTOR (31 downto 0);
        din35 : IN STD_LOGIC_VECTOR (31 downto 0);
        din36 : IN STD_LOGIC_VECTOR (31 downto 0);
        din37 : IN STD_LOGIC_VECTOR (31 downto 0);
        din38 : IN STD_LOGIC_VECTOR (31 downto 0);
        din39 : IN STD_LOGIC_VECTOR (31 downto 0);
        din40 : IN STD_LOGIC_VECTOR (31 downto 0);
        din41 : IN STD_LOGIC_VECTOR (31 downto 0);
        din42 : IN STD_LOGIC_VECTOR (31 downto 0);
        din43 : IN STD_LOGIC_VECTOR (31 downto 0);
        din44 : IN STD_LOGIC_VECTOR (31 downto 0);
        din45 : IN STD_LOGIC_VECTOR (31 downto 0);
        din46 : IN STD_LOGIC_VECTOR (31 downto 0);
        din47 : IN STD_LOGIC_VECTOR (31 downto 0);
        din48 : IN STD_LOGIC_VECTOR (31 downto 0);
        din49 : IN STD_LOGIC_VECTOR (31 downto 0);
        din50 : IN STD_LOGIC_VECTOR (31 downto 0);
        din51 : IN STD_LOGIC_VECTOR (31 downto 0);
        din52 : IN STD_LOGIC_VECTOR (31 downto 0);
        din53 : IN STD_LOGIC_VECTOR (31 downto 0);
        din54 : IN STD_LOGIC_VECTOR (31 downto 0);
        din55 : IN STD_LOGIC_VECTOR (31 downto 0);
        din56 : IN STD_LOGIC_VECTOR (31 downto 0);
        din57 : IN STD_LOGIC_VECTOR (31 downto 0);
        din58 : IN STD_LOGIC_VECTOR (31 downto 0);
        din59 : IN STD_LOGIC_VECTOR (31 downto 0);
        din60 : IN STD_LOGIC_VECTOR (31 downto 0);
        din61 : IN STD_LOGIC_VECTOR (31 downto 0);
        din62 : IN STD_LOGIC_VECTOR (31 downto 0);
        din63 : IN STD_LOGIC_VECTOR (31 downto 0);
        din64 : IN STD_LOGIC_VECTOR (63 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_dft_Pipeline_loop_k_loop_n_cos_coefficients_table IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_dft_Pipeline_loop_k_loop_n_sin_coefficients_table IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    cos_coefficients_table_U : component dft_dft_Pipeline_loop_k_loop_n_cos_coefficients_table
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cos_coefficients_table_address0,
        ce0 => cos_coefficients_table_ce0,
        q0 => cos_coefficients_table_q0);

    sin_coefficients_table_U : component dft_dft_Pipeline_loop_k_loop_n_sin_coefficients_table
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sin_coefficients_table_address0,
        ce0 => sin_coefficients_table_ce0,
        q0 => sin_coefficients_table_q0);

    fadd_32ns_32ns_32_5_full_dsp_1_U137 : component dft_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2086_p0,
        din1 => grp_fu_2086_p1,
        ce => grp_fu_2086_ce,
        dout => grp_fu_2086_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U138 : component dft_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2090_p0,
        din1 => grp_fu_2090_p1,
        ce => grp_fu_2090_ce,
        dout => grp_fu_2090_p2);

    mul_10s_10s_10_1_1_U139 : component dft_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => mul_ln41_fu_2177_p0,
        din1 => mul_ln41_fu_2177_p1,
        dout => mul_ln41_fu_2177_p2);

    mux_6464_32_1_1_U140 : component dft_mux_6464_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 32,
        din62_WIDTH => 32,
        din63_WIDTH => 32,
        din64_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        din0 => re_sample_0_q0,
        din1 => re_sample_1_q0,
        din2 => re_sample_2_q0,
        din3 => re_sample_3_q0,
        din4 => re_sample_4_q0,
        din5 => re_sample_5_q0,
        din6 => re_sample_6_q0,
        din7 => re_sample_7_q0,
        din8 => re_sample_8_q0,
        din9 => re_sample_9_q0,
        din10 => re_sample_10_q0,
        din11 => re_sample_11_q0,
        din12 => re_sample_12_q0,
        din13 => re_sample_13_q0,
        din14 => re_sample_14_q0,
        din15 => re_sample_15_q0,
        din16 => re_sample_16_q0,
        din17 => re_sample_17_q0,
        din18 => re_sample_18_q0,
        din19 => re_sample_19_q0,
        din20 => re_sample_20_q0,
        din21 => re_sample_21_q0,
        din22 => re_sample_22_q0,
        din23 => re_sample_23_q0,
        din24 => re_sample_24_q0,
        din25 => re_sample_25_q0,
        din26 => re_sample_26_q0,
        din27 => re_sample_27_q0,
        din28 => re_sample_28_q0,
        din29 => re_sample_29_q0,
        din30 => re_sample_30_q0,
        din31 => re_sample_31_q0,
        din32 => re_sample_32_q0,
        din33 => re_sample_33_q0,
        din34 => re_sample_34_q0,
        din35 => re_sample_35_q0,
        din36 => re_sample_36_q0,
        din37 => re_sample_37_q0,
        din38 => re_sample_38_q0,
        din39 => re_sample_39_q0,
        din40 => re_sample_40_q0,
        din41 => re_sample_41_q0,
        din42 => re_sample_42_q0,
        din43 => re_sample_43_q0,
        din44 => re_sample_44_q0,
        din45 => re_sample_45_q0,
        din46 => re_sample_46_q0,
        din47 => re_sample_47_q0,
        din48 => re_sample_48_q0,
        din49 => re_sample_49_q0,
        din50 => re_sample_50_q0,
        din51 => re_sample_51_q0,
        din52 => re_sample_52_q0,
        din53 => re_sample_53_q0,
        din54 => re_sample_54_q0,
        din55 => re_sample_55_q0,
        din56 => re_sample_56_q0,
        din57 => re_sample_57_q0,
        din58 => re_sample_58_q0,
        din59 => re_sample_59_q0,
        din60 => re_sample_60_q0,
        din61 => re_sample_61_q0,
        din62 => re_sample_62_q0,
        din63 => re_sample_63_q0,
        din64 => zext_ln43_fu_2361_p1,
        dout => re_sample_n_fu_2364_p66);

    mux_6464_32_1_1_U141 : component dft_mux_6464_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 32,
        din33_WIDTH => 32,
        din34_WIDTH => 32,
        din35_WIDTH => 32,
        din36_WIDTH => 32,
        din37_WIDTH => 32,
        din38_WIDTH => 32,
        din39_WIDTH => 32,
        din40_WIDTH => 32,
        din41_WIDTH => 32,
        din42_WIDTH => 32,
        din43_WIDTH => 32,
        din44_WIDTH => 32,
        din45_WIDTH => 32,
        din46_WIDTH => 32,
        din47_WIDTH => 32,
        din48_WIDTH => 32,
        din49_WIDTH => 32,
        din50_WIDTH => 32,
        din51_WIDTH => 32,
        din52_WIDTH => 32,
        din53_WIDTH => 32,
        din54_WIDTH => 32,
        din55_WIDTH => 32,
        din56_WIDTH => 32,
        din57_WIDTH => 32,
        din58_WIDTH => 32,
        din59_WIDTH => 32,
        din60_WIDTH => 32,
        din61_WIDTH => 32,
        din62_WIDTH => 32,
        din63_WIDTH => 32,
        din64_WIDTH => 64,
        dout_WIDTH => 32)
    port map (
        din0 => im_sample_0_q0,
        din1 => im_sample_1_q0,
        din2 => im_sample_2_q0,
        din3 => im_sample_3_q0,
        din4 => im_sample_4_q0,
        din5 => im_sample_5_q0,
        din6 => im_sample_6_q0,
        din7 => im_sample_7_q0,
        din8 => im_sample_8_q0,
        din9 => im_sample_9_q0,
        din10 => im_sample_10_q0,
        din11 => im_sample_11_q0,
        din12 => im_sample_12_q0,
        din13 => im_sample_13_q0,
        din14 => im_sample_14_q0,
        din15 => im_sample_15_q0,
        din16 => im_sample_16_q0,
        din17 => im_sample_17_q0,
        din18 => im_sample_18_q0,
        din19 => im_sample_19_q0,
        din20 => im_sample_20_q0,
        din21 => im_sample_21_q0,
        din22 => im_sample_22_q0,
        din23 => im_sample_23_q0,
        din24 => im_sample_24_q0,
        din25 => im_sample_25_q0,
        din26 => im_sample_26_q0,
        din27 => im_sample_27_q0,
        din28 => im_sample_28_q0,
        din29 => im_sample_29_q0,
        din30 => im_sample_30_q0,
        din31 => im_sample_31_q0,
        din32 => im_sample_32_q0,
        din33 => im_sample_33_q0,
        din34 => im_sample_34_q0,
        din35 => im_sample_35_q0,
        din36 => im_sample_36_q0,
        din37 => im_sample_37_q0,
        din38 => im_sample_38_q0,
        din39 => im_sample_39_q0,
        din40 => im_sample_40_q0,
        din41 => im_sample_41_q0,
        din42 => im_sample_42_q0,
        din43 => im_sample_43_q0,
        din44 => im_sample_44_q0,
        din45 => im_sample_45_q0,
        din46 => im_sample_46_q0,
        din47 => im_sample_47_q0,
        din48 => im_sample_48_q0,
        din49 => im_sample_49_q0,
        din50 => im_sample_50_q0,
        din51 => im_sample_51_q0,
        din52 => im_sample_52_q0,
        din53 => im_sample_53_q0,
        din54 => im_sample_54_q0,
        din55 => im_sample_55_q0,
        din56 => im_sample_56_q0,
        din57 => im_sample_57_q0,
        din58 => im_sample_58_q0,
        din59 => im_sample_59_q0,
        din60 => im_sample_60_q0,
        din61 => im_sample_61_q0,
        din62 => im_sample_62_q0,
        din63 => im_sample_63_q0,
        din64 => zext_ln43_fu_2361_p1,
        dout => im_sample_n_fu_2498_p66);

    flow_control_loop_pipe_sequential_init_U : component dft_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage6,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage6)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                indvar_flatten_fu_354 <= ap_const_lv21_0;
            elsif (((icmp_ln28_fu_2117_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                indvar_flatten_fu_354 <= add_ln28_fu_2123_p2;
            end if; 
        end if;
    end process;

    k_1_fu_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                k_1_fu_350 <= ap_const_lv11_0;
            elsif (((icmp_ln28_fu_2117_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                k_1_fu_350 <= select_ln41_1_fu_2155_p3;
            end if; 
        end if;
    end process;

    n_fu_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                n_fu_346 <= ap_const_lv11_0;
            elsif (((icmp_ln28_fu_2117_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                n_fu_346 <= add_ln32_fu_2335_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                buff_im_1_fu_342 <= grp_fu_2086_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_reg_2719 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                buff_im_2_reg_3429 <= buff_im_2_fu_2659_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                buff_im_3_reg_3449 <= grp_fu_2086_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                buff_re_1_fu_338 <= grp_fu_2086_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_reg_2719 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                buff_re_2_reg_3414 <= buff_re_2_fu_2635_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_reg_2719 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                c_reg_3404 <= cos_coefficients_table_q0;
                s_reg_3409 <= sin_coefficients_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                icmp_ln28_reg_2719 <= icmp_ln28_fu_2117_p2;
                icmp_ln50_reg_3379_pp0_iter1_reg <= icmp_ln50_reg_3379;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_fu_2117_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                icmp_ln37_reg_2723 <= icmp_ln37_fu_2171_p2;
                icmp_ln50_reg_3379 <= icmp_ln50_fu_2329_p2;
                mul_ln41_reg_2729 <= mul_ln41_fu_2177_p2;
                trunc_ln43_reg_2734 <= trunc_ln43_fu_2183_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_reg_2719 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                im_sample_n_reg_3398 <= im_sample_n_fu_2498_p66;
                re_sample_n_reg_3393 <= re_sample_n_fu_2364_p66;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_reg_2719 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                mul1_reg_3439 <= grp_fu_2090_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_reg_2719 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                mul2_reg_3434 <= grp_fu_2090_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_reg_2719 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                mul3_reg_3444 <= grp_fu_2090_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln28_reg_2719 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_reg_3424 <= grp_fu_2090_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln28_reg_2719 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_2094 <= grp_fu_2086_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage6_subdone, ap_condition_exit_pp0_iter0_stage6, ap_block_pp0_stage11_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage6)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln28_1_fu_2149_p2 <= std_logic_vector(unsigned(k_1_fu_350) + unsigned(ap_const_lv11_1));
    add_ln28_fu_2123_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_354) + unsigned(ap_const_lv21_1));
    add_ln32_fu_2335_p2 <= std_logic_vector(unsigned(select_ln41_fu_2141_p3) + unsigned(ap_const_lv11_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_01001_assign_proc : process(ap_enable_reg_pp0_iter1, real_op_TREADY, icmp_ln50_reg_3379_pp0_iter1_reg, imag_op_TREADY)
    begin
                ap_block_pp0_stage6_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((imag_op_TREADY = ap_const_logic_0) and (icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1)) or ((icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1) and (real_op_TREADY = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter1, real_op_TREADY, icmp_ln50_reg_3379_pp0_iter1_reg, imag_op_TREADY, ap_block_state19_io)
    begin
                ap_block_pp0_stage6_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state19_io) or ((imag_op_TREADY = ap_const_logic_0) and (icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1)) or ((icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1) and (real_op_TREADY = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, real_op_TREADY, icmp_ln50_reg_3379_pp0_iter1_reg, imag_op_TREADY, ap_block_state19_io)
    begin
                ap_block_pp0_stage6_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state19_io) or ((imag_op_TREADY = ap_const_logic_0) and (icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1)) or ((icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1) and (real_op_TREADY = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_io_assign_proc : process(real_op_TREADY, icmp_ln50_reg_3379_pp0_iter1_reg, imag_op_TREADY)
    begin
                ap_block_state19_io <= (((imag_op_TREADY = ap_const_logic_0) and (icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1)) or ((icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1) and (real_op_TREADY = ap_const_logic_0)));
    end process;


    ap_block_state19_pp0_stage6_iter1_assign_proc : process(real_op_TREADY, icmp_ln50_reg_3379_pp0_iter1_reg, imag_op_TREADY)
    begin
                ap_block_state19_pp0_stage6_iter1 <= (((imag_op_TREADY = ap_const_logic_0) and (icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1)) or ((icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1) and (real_op_TREADY = ap_const_logic_0)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone, icmp_ln28_reg_2719)
    begin
        if (((icmp_ln28_reg_2719 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage6;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln45_fu_2642_p1 <= im_sample_n_reg_3398;
    buff_im_2_fu_2659_p3 <= 
        ap_const_lv32_0 when (icmp_ln37_reg_2723(0) = '1') else 
        buff_im_1_fu_342;
    buff_re_2_fu_2635_p3 <= 
        ap_const_lv32_0 when (icmp_ln37_reg_2723(0) = '1') else 
        buff_re_1_fu_338;
    cos_coefficients_table_address0 <= zext_ln41_fu_2356_p1(10 - 1 downto 0);

    cos_coefficients_table_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            cos_coefficients_table_ce0 <= ap_const_logic_1;
        else 
            cos_coefficients_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2086_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2086_ce <= ap_const_logic_1;
        else 
            grp_fu_2086_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2086_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, reg_2094, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, buff_re_2_reg_3414, buff_im_2_reg_3429, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, buff_im_3_reg_3449, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2086_p0 <= buff_im_3_reg_3449;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2086_p0 <= reg_2094;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_2086_p0 <= buff_im_2_reg_3429;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_2086_p0 <= buff_re_2_reg_3414;
        else 
            grp_fu_2086_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2086_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, mul_reg_3424, ap_CS_fsm_pp0_stage8, mul2_reg_3434, mul1_reg_3439, ap_CS_fsm_pp0_stage9, mul3_reg_3444, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage8, ap_block_pp0_stage9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2086_p1 <= mul3_reg_3444;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2086_p1 <= mul1_reg_3439;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
            grp_fu_2086_p1 <= mul2_reg_3434;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
            grp_fu_2086_p1 <= mul_reg_3424;
        else 
            grp_fu_2086_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2090_ce_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_2090_ce <= ap_const_logic_1;
        else 
            grp_fu_2090_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_2090_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage5, re_sample_n_reg_3393, im_sample_n_reg_3398, ap_CS_fsm_pp0_stage7, im_sample_n_neg_fu_2651_p1, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2090_p0 <= im_sample_n_neg_fu_2651_p1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2090_p0 <= im_sample_n_reg_3398;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_2090_p0 <= re_sample_n_reg_3393;
        else 
            grp_fu_2090_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2090_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_CS_fsm_pp0_stage5, c_reg_3404, s_reg_3409, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2090_p1 <= s_reg_3409;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_2090_p1 <= c_reg_3404;
        else 
            grp_fu_2090_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln28_fu_2117_p2 <= "1" when (indvar_flatten_fu_354 = ap_const_lv21_100000) else "0";
    icmp_ln32_fu_2135_p2 <= "1" when (n_fu_346 = ap_const_lv11_400) else "0";
    icmp_ln37_fu_2171_p2 <= "1" when (select_ln41_fu_2141_p3 = ap_const_lv11_0) else "0";
    icmp_ln50_fu_2329_p2 <= "1" when (select_ln41_fu_2141_p3 = ap_const_lv11_3FF) else "0";
    im_sample_0_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_0_ce0 <= ap_const_logic_1;
        else 
            im_sample_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_10_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_10_ce0 <= ap_const_logic_1;
        else 
            im_sample_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_11_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_11_ce0 <= ap_const_logic_1;
        else 
            im_sample_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_12_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_12_ce0 <= ap_const_logic_1;
        else 
            im_sample_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_13_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_13_ce0 <= ap_const_logic_1;
        else 
            im_sample_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_14_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_14_ce0 <= ap_const_logic_1;
        else 
            im_sample_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_15_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_15_ce0 <= ap_const_logic_1;
        else 
            im_sample_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_16_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_16_ce0 <= ap_const_logic_1;
        else 
            im_sample_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_17_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_17_ce0 <= ap_const_logic_1;
        else 
            im_sample_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_18_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_18_ce0 <= ap_const_logic_1;
        else 
            im_sample_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_19_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_19_ce0 <= ap_const_logic_1;
        else 
            im_sample_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_1_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_1_ce0 <= ap_const_logic_1;
        else 
            im_sample_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_20_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_20_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_20_ce0 <= ap_const_logic_1;
        else 
            im_sample_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_21_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_21_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_21_ce0 <= ap_const_logic_1;
        else 
            im_sample_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_22_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_22_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_22_ce0 <= ap_const_logic_1;
        else 
            im_sample_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_23_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_23_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_23_ce0 <= ap_const_logic_1;
        else 
            im_sample_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_24_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_24_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_24_ce0 <= ap_const_logic_1;
        else 
            im_sample_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_25_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_25_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_25_ce0 <= ap_const_logic_1;
        else 
            im_sample_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_26_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_26_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_26_ce0 <= ap_const_logic_1;
        else 
            im_sample_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_27_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_27_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_27_ce0 <= ap_const_logic_1;
        else 
            im_sample_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_28_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_28_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_28_ce0 <= ap_const_logic_1;
        else 
            im_sample_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_29_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_29_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_29_ce0 <= ap_const_logic_1;
        else 
            im_sample_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_2_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_2_ce0 <= ap_const_logic_1;
        else 
            im_sample_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_30_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_30_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_30_ce0 <= ap_const_logic_1;
        else 
            im_sample_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_31_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_31_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_31_ce0 <= ap_const_logic_1;
        else 
            im_sample_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_32_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_32_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_32_ce0 <= ap_const_logic_1;
        else 
            im_sample_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_33_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_33_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_33_ce0 <= ap_const_logic_1;
        else 
            im_sample_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_34_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_34_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_34_ce0 <= ap_const_logic_1;
        else 
            im_sample_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_35_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_35_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_35_ce0 <= ap_const_logic_1;
        else 
            im_sample_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_36_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_36_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_36_ce0 <= ap_const_logic_1;
        else 
            im_sample_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_37_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_37_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_37_ce0 <= ap_const_logic_1;
        else 
            im_sample_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_38_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_38_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_38_ce0 <= ap_const_logic_1;
        else 
            im_sample_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_39_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_39_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_39_ce0 <= ap_const_logic_1;
        else 
            im_sample_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_3_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_3_ce0 <= ap_const_logic_1;
        else 
            im_sample_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_40_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_40_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_40_ce0 <= ap_const_logic_1;
        else 
            im_sample_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_41_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_41_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_41_ce0 <= ap_const_logic_1;
        else 
            im_sample_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_42_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_42_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_42_ce0 <= ap_const_logic_1;
        else 
            im_sample_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_43_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_43_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_43_ce0 <= ap_const_logic_1;
        else 
            im_sample_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_44_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_44_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_44_ce0 <= ap_const_logic_1;
        else 
            im_sample_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_45_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_45_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_45_ce0 <= ap_const_logic_1;
        else 
            im_sample_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_46_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_46_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_46_ce0 <= ap_const_logic_1;
        else 
            im_sample_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_47_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_47_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_47_ce0 <= ap_const_logic_1;
        else 
            im_sample_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_48_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_48_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_48_ce0 <= ap_const_logic_1;
        else 
            im_sample_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_49_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_49_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_49_ce0 <= ap_const_logic_1;
        else 
            im_sample_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_4_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_4_ce0 <= ap_const_logic_1;
        else 
            im_sample_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_50_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_50_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_50_ce0 <= ap_const_logic_1;
        else 
            im_sample_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_51_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_51_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_51_ce0 <= ap_const_logic_1;
        else 
            im_sample_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_52_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_52_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_52_ce0 <= ap_const_logic_1;
        else 
            im_sample_52_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_53_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_53_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_53_ce0 <= ap_const_logic_1;
        else 
            im_sample_53_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_54_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_54_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_54_ce0 <= ap_const_logic_1;
        else 
            im_sample_54_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_55_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_55_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_55_ce0 <= ap_const_logic_1;
        else 
            im_sample_55_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_56_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_56_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_56_ce0 <= ap_const_logic_1;
        else 
            im_sample_56_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_57_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_57_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_57_ce0 <= ap_const_logic_1;
        else 
            im_sample_57_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_58_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_58_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_58_ce0 <= ap_const_logic_1;
        else 
            im_sample_58_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_59_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_59_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_59_ce0 <= ap_const_logic_1;
        else 
            im_sample_59_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_5_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_5_ce0 <= ap_const_logic_1;
        else 
            im_sample_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_60_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_60_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_60_ce0 <= ap_const_logic_1;
        else 
            im_sample_60_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_61_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_61_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_61_ce0 <= ap_const_logic_1;
        else 
            im_sample_61_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_62_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_62_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_62_ce0 <= ap_const_logic_1;
        else 
            im_sample_62_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_63_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_63_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_63_ce0 <= ap_const_logic_1;
        else 
            im_sample_63_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_6_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_6_ce0 <= ap_const_logic_1;
        else 
            im_sample_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_7_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_7_ce0 <= ap_const_logic_1;
        else 
            im_sample_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_8_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_8_ce0 <= ap_const_logic_1;
        else 
            im_sample_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_9_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    im_sample_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            im_sample_9_ce0 <= ap_const_logic_1;
        else 
            im_sample_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    im_sample_n_neg_fu_2651_p1 <= xor_ln45_fu_2645_p2;
    imag_op_TDATA <= grp_fu_2086_p2;

    imag_op_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, icmp_ln50_reg_3379_pp0_iter1_reg, imag_op_TREADY, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            imag_op_TDATA_blk_n <= imag_op_TREADY;
        else 
            imag_op_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imag_op_TKEEP <= ap_const_lv4_0;
    imag_op_TLAST <= ap_const_lv1_0;
    imag_op_TSTRB <= ap_const_lv4_0;

    imag_op_TVALID_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, icmp_ln50_reg_3379_pp0_iter1_reg, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            imag_op_TVALID <= ap_const_logic_1;
        else 
            imag_op_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln1_fu_2187_p4 <= select_ln41_fu_2141_p3(9 downto 6);
    mul_ln41_fu_2177_p0 <= select_ln41_fu_2141_p3(10 - 1 downto 0);
    mul_ln41_fu_2177_p1 <= select_ln41_1_fu_2155_p3(10 - 1 downto 0);
    re_sample_0_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_0_ce0 <= ap_const_logic_1;
        else 
            re_sample_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_10_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_10_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_10_ce0 <= ap_const_logic_1;
        else 
            re_sample_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_11_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_11_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_11_ce0 <= ap_const_logic_1;
        else 
            re_sample_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_12_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_12_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_12_ce0 <= ap_const_logic_1;
        else 
            re_sample_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_13_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_13_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_13_ce0 <= ap_const_logic_1;
        else 
            re_sample_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_14_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_14_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_14_ce0 <= ap_const_logic_1;
        else 
            re_sample_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_15_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_15_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_15_ce0 <= ap_const_logic_1;
        else 
            re_sample_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_16_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_16_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_16_ce0 <= ap_const_logic_1;
        else 
            re_sample_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_17_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_17_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_17_ce0 <= ap_const_logic_1;
        else 
            re_sample_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_18_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_18_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_18_ce0 <= ap_const_logic_1;
        else 
            re_sample_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_19_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_19_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_19_ce0 <= ap_const_logic_1;
        else 
            re_sample_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_1_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_1_ce0 <= ap_const_logic_1;
        else 
            re_sample_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_20_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_20_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_20_ce0 <= ap_const_logic_1;
        else 
            re_sample_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_21_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_21_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_21_ce0 <= ap_const_logic_1;
        else 
            re_sample_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_22_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_22_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_22_ce0 <= ap_const_logic_1;
        else 
            re_sample_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_23_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_23_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_23_ce0 <= ap_const_logic_1;
        else 
            re_sample_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_24_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_24_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_24_ce0 <= ap_const_logic_1;
        else 
            re_sample_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_25_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_25_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_25_ce0 <= ap_const_logic_1;
        else 
            re_sample_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_26_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_26_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_26_ce0 <= ap_const_logic_1;
        else 
            re_sample_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_27_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_27_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_27_ce0 <= ap_const_logic_1;
        else 
            re_sample_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_28_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_28_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_28_ce0 <= ap_const_logic_1;
        else 
            re_sample_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_29_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_29_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_29_ce0 <= ap_const_logic_1;
        else 
            re_sample_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_2_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_2_ce0 <= ap_const_logic_1;
        else 
            re_sample_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_30_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_30_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_30_ce0 <= ap_const_logic_1;
        else 
            re_sample_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_31_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_31_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_31_ce0 <= ap_const_logic_1;
        else 
            re_sample_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_32_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_32_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_32_ce0 <= ap_const_logic_1;
        else 
            re_sample_32_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_33_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_33_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_33_ce0 <= ap_const_logic_1;
        else 
            re_sample_33_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_34_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_34_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_34_ce0 <= ap_const_logic_1;
        else 
            re_sample_34_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_35_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_35_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_35_ce0 <= ap_const_logic_1;
        else 
            re_sample_35_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_36_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_36_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_36_ce0 <= ap_const_logic_1;
        else 
            re_sample_36_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_37_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_37_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_37_ce0 <= ap_const_logic_1;
        else 
            re_sample_37_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_38_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_38_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_38_ce0 <= ap_const_logic_1;
        else 
            re_sample_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_39_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_39_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_39_ce0 <= ap_const_logic_1;
        else 
            re_sample_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_3_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_3_ce0 <= ap_const_logic_1;
        else 
            re_sample_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_40_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_40_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_40_ce0 <= ap_const_logic_1;
        else 
            re_sample_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_41_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_41_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_41_ce0 <= ap_const_logic_1;
        else 
            re_sample_41_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_42_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_42_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_42_ce0 <= ap_const_logic_1;
        else 
            re_sample_42_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_43_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_43_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_43_ce0 <= ap_const_logic_1;
        else 
            re_sample_43_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_44_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_44_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_44_ce0 <= ap_const_logic_1;
        else 
            re_sample_44_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_45_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_45_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_45_ce0 <= ap_const_logic_1;
        else 
            re_sample_45_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_46_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_46_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_46_ce0 <= ap_const_logic_1;
        else 
            re_sample_46_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_47_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_47_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_47_ce0 <= ap_const_logic_1;
        else 
            re_sample_47_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_48_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_48_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_48_ce0 <= ap_const_logic_1;
        else 
            re_sample_48_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_49_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_49_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_49_ce0 <= ap_const_logic_1;
        else 
            re_sample_49_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_4_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_4_ce0 <= ap_const_logic_1;
        else 
            re_sample_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_50_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_50_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_50_ce0 <= ap_const_logic_1;
        else 
            re_sample_50_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_51_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_51_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_51_ce0 <= ap_const_logic_1;
        else 
            re_sample_51_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_52_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_52_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_52_ce0 <= ap_const_logic_1;
        else 
            re_sample_52_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_53_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_53_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_53_ce0 <= ap_const_logic_1;
        else 
            re_sample_53_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_54_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_54_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_54_ce0 <= ap_const_logic_1;
        else 
            re_sample_54_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_55_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_55_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_55_ce0 <= ap_const_logic_1;
        else 
            re_sample_55_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_56_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_56_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_56_ce0 <= ap_const_logic_1;
        else 
            re_sample_56_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_57_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_57_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_57_ce0 <= ap_const_logic_1;
        else 
            re_sample_57_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_58_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_58_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_58_ce0 <= ap_const_logic_1;
        else 
            re_sample_58_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_59_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_59_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_59_ce0 <= ap_const_logic_1;
        else 
            re_sample_59_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_5_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_5_ce0 <= ap_const_logic_1;
        else 
            re_sample_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_60_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_60_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_60_ce0 <= ap_const_logic_1;
        else 
            re_sample_60_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_61_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_61_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_61_ce0 <= ap_const_logic_1;
        else 
            re_sample_61_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_62_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_62_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_62_ce0 <= ap_const_logic_1;
        else 
            re_sample_62_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_63_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_63_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_63_ce0 <= ap_const_logic_1;
        else 
            re_sample_63_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_6_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_6_ce0 <= ap_const_logic_1;
        else 
            re_sample_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_7_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_7_ce0 <= ap_const_logic_1;
        else 
            re_sample_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_8_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_8_ce0 <= ap_const_logic_1;
        else 
            re_sample_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    re_sample_9_address0 <= zext_ln43_1_fu_2197_p1(4 - 1 downto 0);

    re_sample_9_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            re_sample_9_ce0 <= ap_const_logic_1;
        else 
            re_sample_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    real_op_TDATA <= reg_2094;

    real_op_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, real_op_TREADY, icmp_ln50_reg_3379_pp0_iter1_reg, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            real_op_TDATA_blk_n <= real_op_TREADY;
        else 
            real_op_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    real_op_TKEEP <= ap_const_lv4_0;
    real_op_TLAST <= ap_const_lv1_0;
    real_op_TSTRB <= ap_const_lv4_0;

    real_op_TVALID_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, icmp_ln50_reg_3379_pp0_iter1_reg, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln50_reg_3379_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            real_op_TVALID <= ap_const_logic_1;
        else 
            real_op_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    select_ln41_1_fu_2155_p3 <= 
        add_ln28_1_fu_2149_p2 when (icmp_ln32_fu_2135_p2(0) = '1') else 
        k_1_fu_350;
    select_ln41_fu_2141_p3 <= 
        ap_const_lv11_0 when (icmp_ln32_fu_2135_p2(0) = '1') else 
        n_fu_346;
    sin_coefficients_table_address0 <= zext_ln41_fu_2356_p1(10 - 1 downto 0);

    sin_coefficients_table_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            sin_coefficients_table_ce0 <= ap_const_logic_1;
        else 
            sin_coefficients_table_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln43_fu_2183_p1 <= select_ln41_fu_2141_p3(6 - 1 downto 0);
    xor_ln45_fu_2645_p2 <= (bitcast_ln45_fu_2642_p1 xor ap_const_lv32_80000000);
    zext_ln41_fu_2356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln41_reg_2729),64));
    zext_ln43_1_fu_2197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1_fu_2187_p4),64));
    zext_ln43_fu_2361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln43_reg_2734),64));
end behav;
