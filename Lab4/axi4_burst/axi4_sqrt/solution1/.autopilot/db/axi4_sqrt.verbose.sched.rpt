

================================================================
== Vitis HLS Report for 'axi4_sqrt'
================================================================
* Date:           Sat Sep 18 21:18:03 2021

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:45 MST 2020)
* Project:        axi4_sqrt
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1           |       51|       51|         3|          1|          1|    50|       yes|
        |- VITIS_LOOP_26_1  |        ?|        ?|        19|          1|          1|     ?|       yes|
        |- Loop 3           |       51|       51|         3|          1|          1|    50|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 19
  * Pipeline-2: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 40
* Pipeline : 3
  Pipeline-0 : II = 1, D = 3, States = { 9 10 11 }
  Pipeline-1 : II = 1, D = 19, States = { 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 }
  Pipeline-2 : II = 1, D = 3, States = { 33 34 35 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 12 10 
10 --> 11 
11 --> 9 
12 --> 13 
13 --> 32 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 13 
32 --> 33 
33 --> 36 34 
34 --> 35 
35 --> 33 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 41 [1/1] (1.00ns)   --->   "%len_read = read i32 @_ssdm_op_Read.s_axilite.i32, i32 %len"   --->   Operation 41 'read' 'len_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 42 [1/1] (1.00ns)   --->   "%out_r_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out_r"   --->   Operation 42 'read' 'out_r_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 43 [1/1] (1.00ns)   --->   "%in_r_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %in_r"   --->   Operation 43 'read' 'in_r_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%buff = alloca i64 1" [axi4_sqrt.cpp:21]   --->   Operation 44 'alloca' 'buff' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %in_r_read, i32 2, i32 63" [axi4_sqrt.cpp:24]   --->   Operation 45 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%sext_ln24 = sext i62 %trunc_ln" [axi4_sqrt.cpp:24]   --->   Operation 46 'sext' 'sext_ln24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%input_r_addr = getelementptr i32 %input_r, i64 %sext_ln24" [axi4_sqrt.cpp:24]   --->   Operation 47 'getelementptr' 'input_r_addr' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 48 [7/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %input_r_addr, i32 50" [axi4_sqrt.cpp:24]   --->   Operation 48 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 49 [6/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %input_r_addr, i32 50" [axi4_sqrt.cpp:24]   --->   Operation 49 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 50 [5/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %input_r_addr, i32 50" [axi4_sqrt.cpp:24]   --->   Operation 50 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 51 [4/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %input_r_addr, i32 50" [axi4_sqrt.cpp:24]   --->   Operation 51 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 52 [3/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %input_r_addr, i32 50" [axi4_sqrt.cpp:24]   --->   Operation 52 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 53 [2/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %input_r_addr, i32 50" [axi4_sqrt.cpp:24]   --->   Operation 53 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 54 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_11"   --->   Operation 54 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 55 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 50, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0"   --->   Operation 55 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 56 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %input_r"   --->   Operation 56 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 57 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %output_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 50, void @empty_3, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0"   --->   Operation 57 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 58 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %output_r"   --->   Operation 58 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 59 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %in_r, void @empty_4, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_5, void @empty_6, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_7"   --->   Operation 59 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 60 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %in_r, void @empty_8, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_7"   --->   Operation 60 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 61 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out_r, void @empty_4, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_5, void @empty_9, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_7"   --->   Operation 61 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 62 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out_r, void @empty_8, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_7"   --->   Operation 62 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 63 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %len"   --->   Operation 63 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 64 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %len, void @empty_4, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_5, void @empty_10, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 64 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 65 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %len, void @empty_8, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 65 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 66 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_4, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_5, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 66 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 67 [1/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %input_r_addr, i32 50" [axi4_sqrt.cpp:24]   --->   Operation 67 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 68 [1/1] (1.58ns)   --->   "%br_ln24 = br void %load-store-loop4" [axi4_sqrt.cpp:24]   --->   Operation 68 'br' 'br_ln24' <Predicate = true> <Delay = 1.58>

State 9 <SV = 8> <Delay = 1.82>
ST_9 : Operation 69 [1/1] (0.00ns)   --->   "%loop_index5 = phi i6 0, void, i6 %empty_18, void %load-store-loop4.split"   --->   Operation 69 'phi' 'loop_index5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 70 [1/1] (1.82ns)   --->   "%empty_18 = add i6 %loop_index5, i6 1"   --->   Operation 70 'add' 'empty_18' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 71 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 71 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 72 [1/1] (1.42ns)   --->   "%exitcond74 = icmp_eq  i6 %loop_index5, i6 50"   --->   Operation 72 'icmp' 'exitcond74' <Predicate = true> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "%empty_19 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 50, i64 50, i64 50"   --->   Operation 73 'speclooptripcount' 'empty_19' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 74 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond74, void %load-store-loop4.split, void %memcpy-split3.preheader"   --->   Operation 74 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 75 [1/1] (7.30ns)   --->   "%input_r_addr_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %input_r_addr" [axi4_sqrt.cpp:24]   --->   Operation 75 'read' 'input_r_addr_read' <Predicate = (!exitcond74)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 3.25>
ST_11 : Operation 76 [1/1] (0.00ns)   --->   "%loop_index5_cast = zext i6 %loop_index5"   --->   Operation 76 'zext' 'loop_index5_cast' <Predicate = (!exitcond74)> <Delay = 0.00>
ST_11 : Operation 77 [1/1] (0.00ns)   --->   "%empty_20 = bitcast i32 %input_r_addr_read" [axi4_sqrt.cpp:24]   --->   Operation 77 'bitcast' 'empty_20' <Predicate = (!exitcond74)> <Delay = 0.00>
ST_11 : Operation 78 [1/1] (0.00ns)   --->   "%buff_addr = getelementptr i32 %buff, i64 0, i64 %loop_index5_cast"   --->   Operation 78 'getelementptr' 'buff_addr' <Predicate = (!exitcond74)> <Delay = 0.00>
ST_11 : Operation 79 [1/1] (3.25ns)   --->   "%store_ln24 = store i32 %empty_20, i6 %buff_addr" [axi4_sqrt.cpp:24]   --->   Operation 79 'store' 'store_ln24' <Predicate = (!exitcond74)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_11 : Operation 80 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop4"   --->   Operation 80 'br' 'br_ln0' <Predicate = (!exitcond74)> <Delay = 0.00>

State 12 <SV = 9> <Delay = 1.58>
ST_12 : Operation 81 [1/1] (1.58ns)   --->   "%br_ln0 = br void %memcpy-split3"   --->   Operation 81 'br' 'br_ln0' <Predicate = true> <Delay = 1.58>

State 13 <SV = 10> <Delay = 3.25>
ST_13 : Operation 82 [1/1] (0.00ns)   --->   "%i = phi i6 %add_ln26, void %.split, i6 0, void %memcpy-split3.preheader" [axi4_sqrt.cpp:26]   --->   Operation 82 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 83 [1/1] (1.82ns)   --->   "%add_ln26 = add i6 %i, i6 1" [axi4_sqrt.cpp:26]   --->   Operation 83 'add' 'add_ln26' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 84 [1/1] (0.00ns)   --->   "%i_cast = zext i6 %i" [axi4_sqrt.cpp:26]   --->   Operation 84 'zext' 'i_cast' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 85 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 85 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 86 [1/1] (2.47ns)   --->   "%icmp_ln26 = icmp_eq  i32 %i_cast, i32 %len_read" [axi4_sqrt.cpp:26]   --->   Operation 86 'icmp' 'icmp_ln26' <Predicate = true> <Delay = 2.47> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 87 [1/1] (0.00ns)   --->   "%br_ln26 = br i1 %icmp_ln26, void %.split, void %._crit_edge.loopexit" [axi4_sqrt.cpp:26]   --->   Operation 87 'br' 'br_ln26' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 88 [1/1] (0.00ns)   --->   "%i_cast1 = zext i6 %i" [axi4_sqrt.cpp:26]   --->   Operation 88 'zext' 'i_cast1' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_13 : Operation 89 [1/1] (0.00ns)   --->   "%buff_addr_1 = getelementptr i32 %buff, i64 0, i64 %i_cast1" [axi4_sqrt.cpp:27]   --->   Operation 89 'getelementptr' 'buff_addr_1' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_13 : Operation 90 [2/2] (3.25ns)   --->   "%buff_load = load i6 %buff_addr_1" [axi4_sqrt.cpp:27]   --->   Operation 90 'load' 'buff_load' <Predicate = (!icmp_ln26)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>

State 14 <SV = 11> <Delay = 3.25>
ST_14 : Operation 91 [1/2] (3.25ns)   --->   "%buff_load = load i6 %buff_addr_1" [axi4_sqrt.cpp:27]   --->   Operation 91 'load' 'buff_load' <Predicate = (!icmp_ln26)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>

State 15 <SV = 12> <Delay = 6.23>
ST_15 : Operation 92 [16/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 92 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 16 <SV = 13> <Delay = 6.23>
ST_16 : Operation 93 [15/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 93 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 17 <SV = 14> <Delay = 6.23>
ST_17 : Operation 94 [14/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 94 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 18 <SV = 15> <Delay = 6.23>
ST_18 : Operation 95 [13/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 95 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 19 <SV = 16> <Delay = 6.23>
ST_19 : Operation 96 [12/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 96 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 20 <SV = 17> <Delay = 6.23>
ST_20 : Operation 97 [11/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 97 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 21 <SV = 18> <Delay = 6.23>
ST_21 : Operation 98 [10/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 98 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 22 <SV = 19> <Delay = 6.23>
ST_22 : Operation 99 [9/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 99 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 23 <SV = 20> <Delay = 6.23>
ST_23 : Operation 100 [8/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 100 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 24 <SV = 21> <Delay = 6.23>
ST_24 : Operation 101 [7/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 101 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 25 <SV = 22> <Delay = 6.23>
ST_25 : Operation 102 [6/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 102 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 26 <SV = 23> <Delay = 6.23>
ST_26 : Operation 103 [5/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 103 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 27 <SV = 24> <Delay = 6.23>
ST_27 : Operation 104 [4/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 104 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 28 <SV = 25> <Delay = 6.23>
ST_28 : Operation 105 [3/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 105 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 29 <SV = 26> <Delay = 6.23>
ST_29 : Operation 106 [2/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 106 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 30 <SV = 27> <Delay = 6.23>
ST_30 : Operation 107 [1/16] (6.23ns)   --->   "%tmp = fsqrt i32 @llvm.sqrt.f32, i32 %buff_load" [axi4_sqrt.cpp:27]   --->   Operation 107 'fsqrt' 'tmp' <Predicate = (!icmp_ln26)> <Delay = 6.23> <CoreInst = "FSqrt">   --->   Core 35 'FSqrt' <Latency = 15> <II = 1> <Delay = 6.23> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>

State 31 <SV = 28> <Delay = 3.25>
ST_31 : Operation 108 [1/1] (0.00ns)   --->   "%specloopname_ln20 = specloopname void @_ssdm_op_SpecLoopName, void @empty_12" [axi4_sqrt.cpp:20]   --->   Operation 108 'specloopname' 'specloopname_ln20' <Predicate = (!icmp_ln26)> <Delay = 0.00>
ST_31 : Operation 109 [1/1] (3.25ns)   --->   "%store_ln27 = store i32 %tmp, i6 %buff_addr_1" [axi4_sqrt.cpp:27]   --->   Operation 109 'store' 'store_ln27' <Predicate = (!icmp_ln26)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_31 : Operation 110 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memcpy-split3"   --->   Operation 110 'br' 'br_ln0' <Predicate = (!icmp_ln26)> <Delay = 0.00>

State 32 <SV = 11> <Delay = 7.30>
ST_32 : Operation 111 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %out_r_read, i32 2, i32 63" [axi4_sqrt.cpp:30]   --->   Operation 111 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 112 [1/1] (0.00ns)   --->   "%sext_ln30 = sext i62 %trunc_ln1" [axi4_sqrt.cpp:30]   --->   Operation 112 'sext' 'sext_ln30' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 113 [1/1] (0.00ns)   --->   "%output_r_addr = getelementptr i32 %output_r, i64 %sext_ln30" [axi4_sqrt.cpp:30]   --->   Operation 113 'getelementptr' 'output_r_addr' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 114 [1/1] (7.30ns)   --->   "%empty_21 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %output_r_addr, i32 50" [axi4_sqrt.cpp:30]   --->   Operation 114 'writereq' 'empty_21' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_32 : Operation 115 [1/1] (1.58ns)   --->   "%br_ln30 = br void %load-store-loop" [axi4_sqrt.cpp:30]   --->   Operation 115 'br' 'br_ln30' <Predicate = true> <Delay = 1.58>

State 33 <SV = 12> <Delay = 3.25>
ST_33 : Operation 116 [1/1] (0.00ns)   --->   "%loop_index = phi i6 0, void %._crit_edge.loopexit, i6 %empty_22, void %load-store-loop.split"   --->   Operation 116 'phi' 'loop_index' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 117 [1/1] (1.82ns)   --->   "%empty_22 = add i6 %loop_index, i6 1"   --->   Operation 117 'add' 'empty_22' <Predicate = true> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 118 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 118 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 119 [1/1] (1.42ns)   --->   "%exitcond2 = icmp_eq  i6 %loop_index, i6 50"   --->   Operation 119 'icmp' 'exitcond2' <Predicate = true> <Delay = 1.42> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.42> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_33 : Operation 120 [1/1] (0.00ns)   --->   "%empty_23 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 50, i64 50, i64 50"   --->   Operation 120 'speclooptripcount' 'empty_23' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 121 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond2, void %load-store-loop.split, void %memcpy-split"   --->   Operation 121 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_33 : Operation 122 [1/1] (0.00ns)   --->   "%loop_index_cast = zext i6 %loop_index"   --->   Operation 122 'zext' 'loop_index_cast' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_33 : Operation 123 [1/1] (0.00ns)   --->   "%buff_addr_2 = getelementptr i32 %buff, i64 0, i64 %loop_index_cast"   --->   Operation 123 'getelementptr' 'buff_addr_2' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_33 : Operation 124 [2/2] (3.25ns)   --->   "%buff_load_1 = load i6 %buff_addr_2"   --->   Operation 124 'load' 'buff_load_1' <Predicate = (!exitcond2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>

State 34 <SV = 13> <Delay = 3.25>
ST_34 : Operation 125 [1/2] (3.25ns)   --->   "%buff_load_1 = load i6 %buff_addr_2"   --->   Operation 125 'load' 'buff_load_1' <Predicate = (!exitcond2)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>

State 35 <SV = 14> <Delay = 7.30>
ST_35 : Operation 126 [1/1] (0.00ns)   --->   "%empty_24 = bitcast i32 %buff_load_1"   --->   Operation 126 'bitcast' 'empty_24' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_35 : Operation 127 [1/1] (7.30ns)   --->   "%write_ln30 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %output_r_addr, i32 %empty_24, i4 15" [axi4_sqrt.cpp:30]   --->   Operation 127 'write' 'write_ln30' <Predicate = (!exitcond2)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_35 : Operation 128 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop"   --->   Operation 128 'br' 'br_ln0' <Predicate = (!exitcond2)> <Delay = 0.00>

State 36 <SV = 13> <Delay = 7.30>
ST_36 : Operation 129 [5/5] (7.30ns)   --->   "%empty_25 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %output_r_addr" [axi4_sqrt.cpp:31]   --->   Operation 129 'writeresp' 'empty_25' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 37 <SV = 14> <Delay = 7.30>
ST_37 : Operation 130 [4/5] (7.30ns)   --->   "%empty_25 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %output_r_addr" [axi4_sqrt.cpp:31]   --->   Operation 130 'writeresp' 'empty_25' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 38 <SV = 15> <Delay = 7.30>
ST_38 : Operation 131 [3/5] (7.30ns)   --->   "%empty_25 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %output_r_addr" [axi4_sqrt.cpp:31]   --->   Operation 131 'writeresp' 'empty_25' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 39 <SV = 16> <Delay = 7.30>
ST_39 : Operation 132 [2/5] (7.30ns)   --->   "%empty_25 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %output_r_addr" [axi4_sqrt.cpp:31]   --->   Operation 132 'writeresp' 'empty_25' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 40 <SV = 17> <Delay = 7.30>
ST_40 : Operation 133 [1/5] (7.30ns)   --->   "%empty_25 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %output_r_addr" [axi4_sqrt.cpp:31]   --->   Operation 133 'writeresp' 'empty_25' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_40 : Operation 134 [1/1] (0.00ns)   --->   "%ret_ln31 = ret" [axi4_sqrt.cpp:31]   --->   Operation 134 'ret' 'ret_ln31' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'len' [19]  (1 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	bus request on port 'input_r' (axi4_sqrt.cpp:24) [26]  (7.3 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request on port 'input_r' (axi4_sqrt.cpp:24) [26]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request on port 'input_r' (axi4_sqrt.cpp:24) [26]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request on port 'input_r' (axi4_sqrt.cpp:24) [26]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request on port 'input_r' (axi4_sqrt.cpp:24) [26]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request on port 'input_r' (axi4_sqrt.cpp:24) [26]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request on port 'input_r' (axi4_sqrt.cpp:24) [26]  (7.3 ns)

 <State 9>: 1.83ns
The critical path consists of the following:
	'phi' operation ('loop_index5') with incoming values : ('empty_18') [29]  (0 ns)
	'add' operation ('empty_18') [30]  (1.83 ns)

 <State 10>: 7.3ns
The critical path consists of the following:
	bus read on port 'input_r' (axi4_sqrt.cpp:24) [37]  (7.3 ns)

 <State 11>: 3.25ns
The critical path consists of the following:
	'getelementptr' operation ('buff_addr') [39]  (0 ns)
	'store' operation ('store_ln24', axi4_sqrt.cpp:24) of variable 'empty_20', axi4_sqrt.cpp:24 on array 'buff', axi4_sqrt.cpp:21 [40]  (3.25 ns)

 <State 12>: 1.59ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', axi4_sqrt.cpp:26) with incoming values : ('add_ln26', axi4_sqrt.cpp:26) [45]  (1.59 ns)

 <State 13>: 3.25ns
The critical path consists of the following:
	'phi' operation ('i', axi4_sqrt.cpp:26) with incoming values : ('add_ln26', axi4_sqrt.cpp:26) [45]  (0 ns)
	'getelementptr' operation ('buff_addr_1', axi4_sqrt.cpp:27) [54]  (0 ns)
	'load' operation ('buff_load', axi4_sqrt.cpp:27) on array 'buff', axi4_sqrt.cpp:21 [55]  (3.25 ns)

 <State 14>: 3.25ns
The critical path consists of the following:
	'load' operation ('buff_load', axi4_sqrt.cpp:27) on array 'buff', axi4_sqrt.cpp:21 [55]  (3.25 ns)

 <State 15>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 16>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 17>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 18>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 19>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 20>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 21>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 22>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 23>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 24>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 25>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 26>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 27>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 28>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 29>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 30>: 6.24ns
The critical path consists of the following:
	'fsqrt' operation ('tmp', axi4_sqrt.cpp:27) [56]  (6.24 ns)

 <State 31>: 3.25ns
The critical path consists of the following:
	'store' operation ('store_ln27', axi4_sqrt.cpp:27) of variable 'tmp', axi4_sqrt.cpp:27 on array 'buff', axi4_sqrt.cpp:21 [57]  (3.25 ns)

 <State 32>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('output_r_addr', axi4_sqrt.cpp:30) [62]  (0 ns)
	bus request on port 'output_r' (axi4_sqrt.cpp:30) [63]  (7.3 ns)

 <State 33>: 3.25ns
The critical path consists of the following:
	'phi' operation ('loop_index') with incoming values : ('empty_22') [66]  (0 ns)
	'getelementptr' operation ('buff_addr_2') [74]  (0 ns)
	'load' operation ('buff_load_1') on array 'buff', axi4_sqrt.cpp:21 [75]  (3.25 ns)

 <State 34>: 3.25ns
The critical path consists of the following:
	'load' operation ('buff_load_1') on array 'buff', axi4_sqrt.cpp:21 [75]  (3.25 ns)

 <State 35>: 7.3ns
The critical path consists of the following:
	bus write on port 'output_r' (axi4_sqrt.cpp:30) [77]  (7.3 ns)

 <State 36>: 7.3ns
The critical path consists of the following:
	bus response on port 'output_r' (axi4_sqrt.cpp:31) [80]  (7.3 ns)

 <State 37>: 7.3ns
The critical path consists of the following:
	bus response on port 'output_r' (axi4_sqrt.cpp:31) [80]  (7.3 ns)

 <State 38>: 7.3ns
The critical path consists of the following:
	bus response on port 'output_r' (axi4_sqrt.cpp:31) [80]  (7.3 ns)

 <State 39>: 7.3ns
The critical path consists of the following:
	bus response on port 'output_r' (axi4_sqrt.cpp:31) [80]  (7.3 ns)

 <State 40>: 7.3ns
The critical path consists of the following:
	bus response on port 'output_r' (axi4_sqrt.cpp:31) [80]  (7.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
